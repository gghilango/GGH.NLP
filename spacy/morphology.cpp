/* Generated by Cython 0.23.5 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_5"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__spacy__morphology
#define __PYX_HAVE_API__spacy__morphology
#include "stdint.h"
#include "murmurhash/MurmurHash3.h"
#include "murmurhash/MurmurHash2.h"
#include "string.h"
#include <vector>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "spacy\\morphology.pyx",
  "__init__.pxd",
  "spacy\\lexeme.pxd",
  "cymem.pxd",
  "maps.pxd",
  "spacy\\strings.pxd",
  "spacy\\vocab.pxd",
  "type.pxd",
  "spacy\\morphology.pxd",
};

/* "preshed\maps.pxd":5
 * 
 * 
 * ctypedef uint64_t key_t             # <<<<<<<<<<<<<<
 * 
 * 
 */
typedef uint64_t __pyx_t_7preshed_4maps_key_t;

/* "typedefs.pxd":5
 * 
 * 
 * ctypedef uint64_t hash_t             # <<<<<<<<<<<<<<
 * ctypedef char* utf8_t
 * ctypedef int32_t attr_t
 */
typedef uint64_t __pyx_t_5spacy_8typedefs_hash_t;

/* "typedefs.pxd":7
 * ctypedef uint64_t hash_t
 * ctypedef char* utf8_t
 * ctypedef int32_t attr_t             # <<<<<<<<<<<<<<
 * ctypedef uint64_t flags_t
 * ctypedef uint16_t len_t
 */
typedef int32_t __pyx_t_5spacy_8typedefs_attr_t;

/* "typedefs.pxd":8
 * ctypedef char* utf8_t
 * ctypedef int32_t attr_t
 * ctypedef uint64_t flags_t             # <<<<<<<<<<<<<<
 * ctypedef uint16_t len_t
 * ctypedef uint16_t tag_t
 */
typedef uint64_t __pyx_t_5spacy_8typedefs_flags_t;

/* "typedefs.pxd":9
 * ctypedef int32_t attr_t
 * ctypedef uint64_t flags_t
 * ctypedef uint16_t len_t             # <<<<<<<<<<<<<<
 * ctypedef uint16_t tag_t
 */
typedef uint16_t __pyx_t_5spacy_8typedefs_len_t;

/* "typedefs.pxd":10
 * ctypedef uint64_t flags_t
 * ctypedef uint16_t len_t
 * ctypedef uint16_t tag_t             # <<<<<<<<<<<<<<
 */
typedef uint16_t __pyx_t_5spacy_8typedefs_tag_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_5cymem_5cymem_Pool;
struct __pyx_obj_5cymem_5cymem_Address;
struct __pyx_obj_7preshed_4maps_PreshMap;
struct __pyx_obj_7preshed_4maps_PreshMapArray;
struct __pyx_obj_5spacy_7strings_StringStore;
struct __pyx_obj_5spacy_5vocab_Vocab;
struct __pyx_obj_5spacy_6lexeme_Lexeme;
struct __pyx_obj_5spacy_10morphology_Morphology;
struct __pyx_t_7preshed_4maps_Cell;
struct __pyx_t_7preshed_4maps_MapStruct;

/* "preshed\maps.pxd":8
 * 
 * 
 * cdef struct Cell:             # <<<<<<<<<<<<<<
 *     key_t key
 *     void* value
 */
struct __pyx_t_7preshed_4maps_Cell {
  __pyx_t_7preshed_4maps_key_t key;
  void *value;
};

/* "preshed\maps.pxd":13
 * 
 * 
 * cdef struct MapStruct:             # <<<<<<<<<<<<<<
 *     Cell* cells
 *     void* value_for_empty_key
 */
struct __pyx_t_7preshed_4maps_MapStruct {
  struct __pyx_t_7preshed_4maps_Cell *cells;
  void *value_for_empty_key;
  void *value_for_del_key;
  __pyx_t_7preshed_4maps_key_t length;
  __pyx_t_7preshed_4maps_key_t filled;
  int is_empty_key_set;
  int is_del_key_set;
};

/* "typedefs.pxd":6
 * 
 * ctypedef uint64_t hash_t
 * ctypedef char* utf8_t             # <<<<<<<<<<<<<<
 * ctypedef int32_t attr_t
 * ctypedef uint64_t flags_t
 */
typedef char *__pyx_t_5spacy_8typedefs_utf8_t;

/* "symbols.pxd":1
 * cpdef enum symbol_t:             # <<<<<<<<<<<<<<
 *     NIL
 *     IS_ALPHA
 */
enum __pyx_t_5spacy_7symbols_symbol_t {
  __pyx_e_5spacy_7symbols_NIL,
  __pyx_e_5spacy_7symbols_IS_ALPHA,
  __pyx_e_5spacy_7symbols_IS_ASCII,
  __pyx_e_5spacy_7symbols_IS_DIGIT,
  __pyx_e_5spacy_7symbols_IS_LOWER,
  __pyx_e_5spacy_7symbols_IS_PUNCT,
  __pyx_e_5spacy_7symbols_IS_SPACE,
  __pyx_e_5spacy_7symbols_IS_TITLE,
  __pyx_e_5spacy_7symbols_IS_UPPER,
  __pyx_e_5spacy_7symbols_LIKE_URL,
  __pyx_e_5spacy_7symbols_LIKE_NUM,
  __pyx_e_5spacy_7symbols_LIKE_EMAIL,
  __pyx_e_5spacy_7symbols_IS_STOP,
  __pyx_e_5spacy_7symbols_IS_OOV,
  __pyx_e_5spacy_7symbols_FLAG14 = 14,
  __pyx_e_5spacy_7symbols_FLAG15,
  __pyx_e_5spacy_7symbols_FLAG16,
  __pyx_e_5spacy_7symbols_FLAG17,
  __pyx_e_5spacy_7symbols_FLAG18,
  __pyx_e_5spacy_7symbols_FLAG19,
  __pyx_e_5spacy_7symbols_FLAG20,
  __pyx_e_5spacy_7symbols_FLAG21,
  __pyx_e_5spacy_7symbols_FLAG22,
  __pyx_e_5spacy_7symbols_FLAG23,
  __pyx_e_5spacy_7symbols_FLAG24,
  __pyx_e_5spacy_7symbols_FLAG25,
  __pyx_e_5spacy_7symbols_FLAG26,
  __pyx_e_5spacy_7symbols_FLAG27,
  __pyx_e_5spacy_7symbols_FLAG28,
  __pyx_e_5spacy_7symbols_FLAG29,
  __pyx_e_5spacy_7symbols_FLAG30,
  __pyx_e_5spacy_7symbols_FLAG31,
  __pyx_e_5spacy_7symbols_FLAG32,
  __pyx_e_5spacy_7symbols_FLAG33,
  __pyx_e_5spacy_7symbols_FLAG34,
  __pyx_e_5spacy_7symbols_FLAG35,
  __pyx_e_5spacy_7symbols_FLAG36,
  __pyx_e_5spacy_7symbols_FLAG37,
  __pyx_e_5spacy_7symbols_FLAG38,
  __pyx_e_5spacy_7symbols_FLAG39,
  __pyx_e_5spacy_7symbols_FLAG40,
  __pyx_e_5spacy_7symbols_FLAG41,
  __pyx_e_5spacy_7symbols_FLAG42,
  __pyx_e_5spacy_7symbols_FLAG43,
  __pyx_e_5spacy_7symbols_FLAG44,
  __pyx_e_5spacy_7symbols_FLAG45,
  __pyx_e_5spacy_7symbols_FLAG46,
  __pyx_e_5spacy_7symbols_FLAG47,
  __pyx_e_5spacy_7symbols_FLAG48,
  __pyx_e_5spacy_7symbols_FLAG49,
  __pyx_e_5spacy_7symbols_FLAG50,
  __pyx_e_5spacy_7symbols_FLAG51,
  __pyx_e_5spacy_7symbols_FLAG52,
  __pyx_e_5spacy_7symbols_FLAG53,
  __pyx_e_5spacy_7symbols_FLAG54,
  __pyx_e_5spacy_7symbols_FLAG55,
  __pyx_e_5spacy_7symbols_FLAG56,
  __pyx_e_5spacy_7symbols_FLAG57,
  __pyx_e_5spacy_7symbols_FLAG58,
  __pyx_e_5spacy_7symbols_FLAG59,
  __pyx_e_5spacy_7symbols_FLAG60,
  __pyx_e_5spacy_7symbols_FLAG61,
  __pyx_e_5spacy_7symbols_FLAG62,
  __pyx_e_5spacy_7symbols_FLAG63,
  __pyx_e_5spacy_7symbols_ID,
  __pyx_e_5spacy_7symbols_ORTH,
  __pyx_e_5spacy_7symbols_LOWER,
  __pyx_e_5spacy_7symbols_NORM,
  __pyx_e_5spacy_7symbols_SHAPE,
  __pyx_e_5spacy_7symbols_PREFIX,
  __pyx_e_5spacy_7symbols_SUFFIX,
  __pyx_e_5spacy_7symbols_LENGTH,
  __pyx_e_5spacy_7symbols_CLUSTER,
  __pyx_e_5spacy_7symbols_LEMMA,
  __pyx_e_5spacy_7symbols_POS,
  __pyx_e_5spacy_7symbols_TAG,
  __pyx_e_5spacy_7symbols_DEP,
  __pyx_e_5spacy_7symbols_ENT_IOB,
  __pyx_e_5spacy_7symbols_ENT_TYPE,
  __pyx_e_5spacy_7symbols_HEAD,
  __pyx_e_5spacy_7symbols_SPACY,
  __pyx_e_5spacy_7symbols_PROB,
  __pyx_e_5spacy_7symbols_ADJ,
  __pyx_e_5spacy_7symbols_ADP,
  __pyx_e_5spacy_7symbols_ADV,
  __pyx_e_5spacy_7symbols_AUX,
  __pyx_e_5spacy_7symbols_CONJ,
  __pyx_e_5spacy_7symbols_CCONJ,
  __pyx_e_5spacy_7symbols_DET,
  __pyx_e_5spacy_7symbols_INTJ,
  __pyx_e_5spacy_7symbols_NOUN,
  __pyx_e_5spacy_7symbols_NUM,
  __pyx_e_5spacy_7symbols_PART,
  __pyx_e_5spacy_7symbols_PRON,
  __pyx_e_5spacy_7symbols_PROPN,
  __pyx_e_5spacy_7symbols_PUNCT,
  __pyx_e_5spacy_7symbols_SCONJ,
  __pyx_e_5spacy_7symbols_SYM,
  __pyx_e_5spacy_7symbols_VERB,
  __pyx_e_5spacy_7symbols_X,
  __pyx_e_5spacy_7symbols_EOL,
  __pyx_e_5spacy_7symbols_SPACE,
  __pyx_e_5spacy_7symbols_Animacy_anim,
  __pyx_e_5spacy_7symbols_Animacy_inam,
  __pyx_e_5spacy_7symbols_Animacy_hum,
  __pyx_e_5spacy_7symbols_Aspect_freq,
  __pyx_e_5spacy_7symbols_Aspect_imp,
  __pyx_e_5spacy_7symbols_Aspect_mod,
  __pyx_e_5spacy_7symbols_Aspect_none,
  __pyx_e_5spacy_7symbols_Aspect_perf,
  __pyx_e_5spacy_7symbols_Aspect_iter,
  __pyx_e_5spacy_7symbols_Aspect_hab,
  __pyx_e_5spacy_7symbols_Case_abe,
  __pyx_e_5spacy_7symbols_Case_abl,
  __pyx_e_5spacy_7symbols_Case_abs,
  __pyx_e_5spacy_7symbols_Case_acc,
  __pyx_e_5spacy_7symbols_Case_ade,
  __pyx_e_5spacy_7symbols_Case_all,
  __pyx_e_5spacy_7symbols_Case_cau,
  __pyx_e_5spacy_7symbols_Case_com,
  __pyx_e_5spacy_7symbols_Case_cmp,
  __pyx_e_5spacy_7symbols_Case_dat,
  __pyx_e_5spacy_7symbols_Case_del,
  __pyx_e_5spacy_7symbols_Case_dis,
  __pyx_e_5spacy_7symbols_Case_ela,
  __pyx_e_5spacy_7symbols_Case_equ,
  __pyx_e_5spacy_7symbols_Case_ess,
  __pyx_e_5spacy_7symbols_Case_gen,
  __pyx_e_5spacy_7symbols_Case_ill,
  __pyx_e_5spacy_7symbols_Case_ine,
  __pyx_e_5spacy_7symbols_Case_ins,
  __pyx_e_5spacy_7symbols_Case_loc,
  __pyx_e_5spacy_7symbols_Case_lat,
  __pyx_e_5spacy_7symbols_Case_nom,
  __pyx_e_5spacy_7symbols_Case_par,
  __pyx_e_5spacy_7symbols_Case_sub,
  __pyx_e_5spacy_7symbols_Case_sup,
  __pyx_e_5spacy_7symbols_Case_tem,
  __pyx_e_5spacy_7symbols_Case_ter,
  __pyx_e_5spacy_7symbols_Case_tra,
  __pyx_e_5spacy_7symbols_Case_voc,
  __pyx_e_5spacy_7symbols_Definite_two,
  __pyx_e_5spacy_7symbols_Definite_def,
  __pyx_e_5spacy_7symbols_Definite_red,
  __pyx_e_5spacy_7symbols_Definite_cons,
  __pyx_e_5spacy_7symbols_Definite_ind,
  __pyx_e_5spacy_7symbols_Definite_spec,
  __pyx_e_5spacy_7symbols_Degree_cmp,
  __pyx_e_5spacy_7symbols_Degree_comp,
  __pyx_e_5spacy_7symbols_Degree_none,
  __pyx_e_5spacy_7symbols_Degree_pos,
  __pyx_e_5spacy_7symbols_Degree_sup,
  __pyx_e_5spacy_7symbols_Degree_abs,
  __pyx_e_5spacy_7symbols_Degree_com,
  __pyx_e_5spacy_7symbols_Degree_dim,
  __pyx_e_5spacy_7symbols_Degree_equ,
  __pyx_e_5spacy_7symbols_Evident_nfh,
  __pyx_e_5spacy_7symbols_Gender_com,
  __pyx_e_5spacy_7symbols_Gender_fem,
  __pyx_e_5spacy_7symbols_Gender_masc,
  __pyx_e_5spacy_7symbols_Gender_neut,
  __pyx_e_5spacy_7symbols_Mood_cnd,
  __pyx_e_5spacy_7symbols_Mood_imp,
  __pyx_e_5spacy_7symbols_Mood_ind,
  __pyx_e_5spacy_7symbols_Mood_n,
  __pyx_e_5spacy_7symbols_Mood_pot,
  __pyx_e_5spacy_7symbols_Mood_sub,
  __pyx_e_5spacy_7symbols_Mood_opt,
  __pyx_e_5spacy_7symbols_Mood_prp,
  __pyx_e_5spacy_7symbols_Mood_adm,
  __pyx_e_5spacy_7symbols_Negative_neg,
  __pyx_e_5spacy_7symbols_Negative_pos,
  __pyx_e_5spacy_7symbols_Negative_yes,
  __pyx_e_5spacy_7symbols_Polarity_neg,
  __pyx_e_5spacy_7symbols_Polarity_pos,
  __pyx_e_5spacy_7symbols_Number_com,
  __pyx_e_5spacy_7symbols_Number_dual,
  __pyx_e_5spacy_7symbols_Number_none,
  __pyx_e_5spacy_7symbols_Number_plur,
  __pyx_e_5spacy_7symbols_Number_sing,
  __pyx_e_5spacy_7symbols_Number_ptan,
  __pyx_e_5spacy_7symbols_Number_count,
  __pyx_e_5spacy_7symbols_Number_tri,
  __pyx_e_5spacy_7symbols_NumType_card,
  __pyx_e_5spacy_7symbols_NumType_dist,
  __pyx_e_5spacy_7symbols_NumType_frac,
  __pyx_e_5spacy_7symbols_NumType_gen,
  __pyx_e_5spacy_7symbols_NumType_mult,
  __pyx_e_5spacy_7symbols_NumType_none,
  __pyx_e_5spacy_7symbols_NumType_ord,
  __pyx_e_5spacy_7symbols_NumType_sets,
  __pyx_e_5spacy_7symbols_Person_one,
  __pyx_e_5spacy_7symbols_Person_two,
  __pyx_e_5spacy_7symbols_Person_three,
  __pyx_e_5spacy_7symbols_Person_none,
  __pyx_e_5spacy_7symbols_Poss_yes,
  __pyx_e_5spacy_7symbols_PronType_advPart,
  __pyx_e_5spacy_7symbols_PronType_art,
  __pyx_e_5spacy_7symbols_PronType_default,
  __pyx_e_5spacy_7symbols_PronType_dem,
  __pyx_e_5spacy_7symbols_PronType_ind,
  __pyx_e_5spacy_7symbols_PronType_int,
  __pyx_e_5spacy_7symbols_PronType_neg,
  __pyx_e_5spacy_7symbols_PronType_prs,
  __pyx_e_5spacy_7symbols_PronType_rcp,
  __pyx_e_5spacy_7symbols_PronType_rel,
  __pyx_e_5spacy_7symbols_PronType_tot,
  __pyx_e_5spacy_7symbols_PronType_clit,
  __pyx_e_5spacy_7symbols_PronType_exc,
  __pyx_e_5spacy_7symbols_PronType_emp,
  __pyx_e_5spacy_7symbols_Reflex_yes,
  __pyx_e_5spacy_7symbols_Tense_fut,
  __pyx_e_5spacy_7symbols_Tense_imp,
  __pyx_e_5spacy_7symbols_Tense_past,
  __pyx_e_5spacy_7symbols_Tense_pres,
  __pyx_e_5spacy_7symbols_VerbForm_fin,
  __pyx_e_5spacy_7symbols_VerbForm_ger,
  __pyx_e_5spacy_7symbols_VerbForm_inf,
  __pyx_e_5spacy_7symbols_VerbForm_none,
  __pyx_e_5spacy_7symbols_VerbForm_part,
  __pyx_e_5spacy_7symbols_VerbForm_partFut,
  __pyx_e_5spacy_7symbols_VerbForm_partPast,
  __pyx_e_5spacy_7symbols_VerbForm_partPres,
  __pyx_e_5spacy_7symbols_VerbForm_sup,
  __pyx_e_5spacy_7symbols_VerbForm_trans,
  __pyx_e_5spacy_7symbols_VerbForm_conv,
  __pyx_e_5spacy_7symbols_VerbForm_gdv,
  __pyx_e_5spacy_7symbols_VerbForm_vnoun,
  __pyx_e_5spacy_7symbols_Voice_act,
  __pyx_e_5spacy_7symbols_Voice_cau,
  __pyx_e_5spacy_7symbols_Voice_pass,
  __pyx_e_5spacy_7symbols_Voice_mid,
  __pyx_e_5spacy_7symbols_Voice_int,
  __pyx_e_5spacy_7symbols_Voice_antip,
  __pyx_e_5spacy_7symbols_Voice_dir,
  __pyx_e_5spacy_7symbols_Voice_inv,
  __pyx_e_5spacy_7symbols_Abbr_yes,
  __pyx_e_5spacy_7symbols_AdpType_prep,
  __pyx_e_5spacy_7symbols_AdpType_post,
  __pyx_e_5spacy_7symbols_AdpType_voc,
  __pyx_e_5spacy_7symbols_AdpType_comprep,
  __pyx_e_5spacy_7symbols_AdpType_circ,
  __pyx_e_5spacy_7symbols_AdvType_man,
  __pyx_e_5spacy_7symbols_AdvType_loc,
  __pyx_e_5spacy_7symbols_AdvType_tim,
  __pyx_e_5spacy_7symbols_AdvType_deg,
  __pyx_e_5spacy_7symbols_AdvType_cau,
  __pyx_e_5spacy_7symbols_AdvType_mod,
  __pyx_e_5spacy_7symbols_AdvType_sta,
  __pyx_e_5spacy_7symbols_AdvType_ex,
  __pyx_e_5spacy_7symbols_AdvType_adadj,
  __pyx_e_5spacy_7symbols_ConjType_oper,
  __pyx_e_5spacy_7symbols_ConjType_comp,
  __pyx_e_5spacy_7symbols_Connegative_yes,
  __pyx_e_5spacy_7symbols_Derivation_minen,
  __pyx_e_5spacy_7symbols_Derivation_sti,
  __pyx_e_5spacy_7symbols_Derivation_inen,
  __pyx_e_5spacy_7symbols_Derivation_lainen,
  __pyx_e_5spacy_7symbols_Derivation_ja,
  __pyx_e_5spacy_7symbols_Derivation_ton,
  __pyx_e_5spacy_7symbols_Derivation_vs,
  __pyx_e_5spacy_7symbols_Derivation_ttain,
  __pyx_e_5spacy_7symbols_Derivation_ttaa,
  __pyx_e_5spacy_7symbols_Echo_rdp,
  __pyx_e_5spacy_7symbols_Echo_ech,
  __pyx_e_5spacy_7symbols_Foreign_foreign,
  __pyx_e_5spacy_7symbols_Foreign_fscript,
  __pyx_e_5spacy_7symbols_Foreign_tscript,
  __pyx_e_5spacy_7symbols_Foreign_yes,
  __pyx_e_5spacy_7symbols_Gender_dat_masc,
  __pyx_e_5spacy_7symbols_Gender_dat_fem,
  __pyx_e_5spacy_7symbols_Gender_erg_masc,
  __pyx_e_5spacy_7symbols_Gender_erg_fem,
  __pyx_e_5spacy_7symbols_Gender_psor_masc,
  __pyx_e_5spacy_7symbols_Gender_psor_fem,
  __pyx_e_5spacy_7symbols_Gender_psor_neut,
  __pyx_e_5spacy_7symbols_Hyph_yes,
  __pyx_e_5spacy_7symbols_InfForm_one,
  __pyx_e_5spacy_7symbols_InfForm_two,
  __pyx_e_5spacy_7symbols_InfForm_three,
  __pyx_e_5spacy_7symbols_NameType_geo,
  __pyx_e_5spacy_7symbols_NameType_prs,
  __pyx_e_5spacy_7symbols_NameType_giv,
  __pyx_e_5spacy_7symbols_NameType_sur,
  __pyx_e_5spacy_7symbols_NameType_nat,
  __pyx_e_5spacy_7symbols_NameType_com,
  __pyx_e_5spacy_7symbols_NameType_pro,
  __pyx_e_5spacy_7symbols_NameType_oth,
  __pyx_e_5spacy_7symbols_NounType_com,
  __pyx_e_5spacy_7symbols_NounType_prop,
  __pyx_e_5spacy_7symbols_NounType_class,
  __pyx_e_5spacy_7symbols_Number_abs_sing,
  __pyx_e_5spacy_7symbols_Number_abs_plur,
  __pyx_e_5spacy_7symbols_Number_dat_sing,
  __pyx_e_5spacy_7symbols_Number_dat_plur,
  __pyx_e_5spacy_7symbols_Number_erg_sing,
  __pyx_e_5spacy_7symbols_Number_erg_plur,
  __pyx_e_5spacy_7symbols_Number_psee_sing,
  __pyx_e_5spacy_7symbols_Number_psee_plur,
  __pyx_e_5spacy_7symbols_Number_psor_sing,
  __pyx_e_5spacy_7symbols_Number_psor_plur,
  __pyx_e_5spacy_7symbols_Number_pauc,
  __pyx_e_5spacy_7symbols_Number_grpa,
  __pyx_e_5spacy_7symbols_Number_grpl,
  __pyx_e_5spacy_7symbols_Number_inv,
  __pyx_e_5spacy_7symbols_NumForm_digit,
  __pyx_e_5spacy_7symbols_NumForm_roman,
  __pyx_e_5spacy_7symbols_NumForm_word,
  __pyx_e_5spacy_7symbols_NumValue_one,
  __pyx_e_5spacy_7symbols_NumValue_two,
  __pyx_e_5spacy_7symbols_NumValue_three,
  __pyx_e_5spacy_7symbols_PartForm_pres,
  __pyx_e_5spacy_7symbols_PartForm_past,
  __pyx_e_5spacy_7symbols_PartForm_agt,
  __pyx_e_5spacy_7symbols_PartForm_neg,
  __pyx_e_5spacy_7symbols_PartType_mod,
  __pyx_e_5spacy_7symbols_PartType_emp,
  __pyx_e_5spacy_7symbols_PartType_res,
  __pyx_e_5spacy_7symbols_PartType_inf,
  __pyx_e_5spacy_7symbols_PartType_vbp,
  __pyx_e_5spacy_7symbols_Person_abs_one,
  __pyx_e_5spacy_7symbols_Person_abs_two,
  __pyx_e_5spacy_7symbols_Person_abs_three,
  __pyx_e_5spacy_7symbols_Person_dat_one,
  __pyx_e_5spacy_7symbols_Person_dat_two,
  __pyx_e_5spacy_7symbols_Person_dat_three,
  __pyx_e_5spacy_7symbols_Person_erg_one,
  __pyx_e_5spacy_7symbols_Person_erg_two,
  __pyx_e_5spacy_7symbols_Person_erg_three,
  __pyx_e_5spacy_7symbols_Person_psor_one,
  __pyx_e_5spacy_7symbols_Person_psor_two,
  __pyx_e_5spacy_7symbols_Person_psor_three,
  __pyx_e_5spacy_7symbols_Person_zero,
  __pyx_e_5spacy_7symbols_Person_four,
  __pyx_e_5spacy_7symbols_Polite_inf,
  __pyx_e_5spacy_7symbols_Polite_pol,
  __pyx_e_5spacy_7symbols_Polite_abs_inf,
  __pyx_e_5spacy_7symbols_Polite_abs_pol,
  __pyx_e_5spacy_7symbols_Polite_erg_inf,
  __pyx_e_5spacy_7symbols_Polite_erg_pol,
  __pyx_e_5spacy_7symbols_Polite_dat_inf,
  __pyx_e_5spacy_7symbols_Polite_dat_pol,
  __pyx_e_5spacy_7symbols_Polite_infm,
  __pyx_e_5spacy_7symbols_Polite_form,
  __pyx_e_5spacy_7symbols_Polite_form_elev,
  __pyx_e_5spacy_7symbols_Polite_form_humb,
  __pyx_e_5spacy_7symbols_Prefix_yes,
  __pyx_e_5spacy_7symbols_PrepCase_npr,
  __pyx_e_5spacy_7symbols_PrepCase_pre,
  __pyx_e_5spacy_7symbols_PunctSide_ini,
  __pyx_e_5spacy_7symbols_PunctSide_fin,
  __pyx_e_5spacy_7symbols_PunctType_peri,
  __pyx_e_5spacy_7symbols_PunctType_qest,
  __pyx_e_5spacy_7symbols_PunctType_excl,
  __pyx_e_5spacy_7symbols_PunctType_quot,
  __pyx_e_5spacy_7symbols_PunctType_brck,
  __pyx_e_5spacy_7symbols_PunctType_comm,
  __pyx_e_5spacy_7symbols_PunctType_colo,
  __pyx_e_5spacy_7symbols_PunctType_semi,
  __pyx_e_5spacy_7symbols_PunctType_dash,
  __pyx_e_5spacy_7symbols_Style_arch,
  __pyx_e_5spacy_7symbols_Style_rare,
  __pyx_e_5spacy_7symbols_Style_poet,
  __pyx_e_5spacy_7symbols_Style_norm,
  __pyx_e_5spacy_7symbols_Style_coll,
  __pyx_e_5spacy_7symbols_Style_vrnc,
  __pyx_e_5spacy_7symbols_Style_sing,
  __pyx_e_5spacy_7symbols_Style_expr,
  __pyx_e_5spacy_7symbols_Style_derg,
  __pyx_e_5spacy_7symbols_Style_vulg,
  __pyx_e_5spacy_7symbols_Style_yes,
  __pyx_e_5spacy_7symbols_StyleVariant_styleShort,
  __pyx_e_5spacy_7symbols_StyleVariant_styleBound,
  __pyx_e_5spacy_7symbols_VerbType_aux,
  __pyx_e_5spacy_7symbols_VerbType_cop,
  __pyx_e_5spacy_7symbols_VerbType_mod,
  __pyx_e_5spacy_7symbols_VerbType_light,
  __pyx_e_5spacy_7symbols_PERSON,
  __pyx_e_5spacy_7symbols_NORP,
  __pyx_e_5spacy_7symbols_FACILITY,
  __pyx_e_5spacy_7symbols_ORG,
  __pyx_e_5spacy_7symbols_GPE,
  __pyx_e_5spacy_7symbols_LOC,
  __pyx_e_5spacy_7symbols_PRODUCT,
  __pyx_e_5spacy_7symbols_EVENT,
  __pyx_e_5spacy_7symbols_WORK_OF_ART,
  __pyx_e_5spacy_7symbols_LANGUAGE,
  __pyx_e_5spacy_7symbols_DATE,
  __pyx_e_5spacy_7symbols_TIME,
  __pyx_e_5spacy_7symbols_PERCENT,
  __pyx_e_5spacy_7symbols_MONEY,
  __pyx_e_5spacy_7symbols_QUANTITY,
  __pyx_e_5spacy_7symbols_ORDINAL,
  __pyx_e_5spacy_7symbols_CARDINAL,
  __pyx_e_5spacy_7symbols_acomp,
  __pyx_e_5spacy_7symbols_advcl,
  __pyx_e_5spacy_7symbols_advmod,
  __pyx_e_5spacy_7symbols_agent,
  __pyx_e_5spacy_7symbols_amod,
  __pyx_e_5spacy_7symbols_appos,
  __pyx_e_5spacy_7symbols_attr,
  __pyx_e_5spacy_7symbols_aux,
  __pyx_e_5spacy_7symbols_auxpass,
  __pyx_e_5spacy_7symbols_cc,
  __pyx_e_5spacy_7symbols_ccomp,
  __pyx_e_5spacy_7symbols_complm,
  __pyx_e_5spacy_7symbols_conj,
  __pyx_e_5spacy_7symbols_cop,
  __pyx_e_5spacy_7symbols_csubj,
  __pyx_e_5spacy_7symbols_csubjpass,
  __pyx_e_5spacy_7symbols_dep,
  __pyx_e_5spacy_7symbols_det,
  __pyx_e_5spacy_7symbols_dobj,
  __pyx_e_5spacy_7symbols_expl,
  __pyx_e_5spacy_7symbols_hmod,
  __pyx_e_5spacy_7symbols_hyph,
  __pyx_e_5spacy_7symbols_infmod,
  __pyx_e_5spacy_7symbols_intj,
  __pyx_e_5spacy_7symbols_iobj,
  __pyx_e_5spacy_7symbols_mark,
  __pyx_e_5spacy_7symbols_meta,
  __pyx_e_5spacy_7symbols_neg,
  __pyx_e_5spacy_7symbols_nmod,
  __pyx_e_5spacy_7symbols_nn,
  __pyx_e_5spacy_7symbols_npadvmod,
  __pyx_e_5spacy_7symbols_nsubj,
  __pyx_e_5spacy_7symbols_nsubjpass,
  __pyx_e_5spacy_7symbols_num,
  __pyx_e_5spacy_7symbols_number,
  __pyx_e_5spacy_7symbols_oprd,
  __pyx_e_5spacy_7symbols_obj,
  __pyx_e_5spacy_7symbols_obl,
  __pyx_e_5spacy_7symbols_parataxis,
  __pyx_e_5spacy_7symbols_partmod,
  __pyx_e_5spacy_7symbols_pcomp,
  __pyx_e_5spacy_7symbols_pobj,
  __pyx_e_5spacy_7symbols_poss,
  __pyx_e_5spacy_7symbols_possessive,
  __pyx_e_5spacy_7symbols_preconj,
  __pyx_e_5spacy_7symbols_prep,
  __pyx_e_5spacy_7symbols_prt,
  __pyx_e_5spacy_7symbols_punct,
  __pyx_e_5spacy_7symbols_quantmod,
  __pyx_e_5spacy_7symbols_rcmod,
  __pyx_e_5spacy_7symbols_root,
  __pyx_e_5spacy_7symbols_xcomp
};

/* "parts_of_speech.pxd":3
 * from . cimport symbols
 * 
 * cpdef enum univ_pos_t:             # <<<<<<<<<<<<<<
 *     NO_TAG = 0
 *     ADJ = symbols.ADJ
 */
enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t {

  /* "parts_of_speech.pxd":5
 * cpdef enum univ_pos_t:
 *     NO_TAG = 0
 *     ADJ = symbols.ADJ             # <<<<<<<<<<<<<<
 *     ADP
 *     ADV
 */
  __pyx_e_5spacy_15parts_of_speech_NO_TAG = 0,
  __pyx_e_5spacy_15parts_of_speech_ADJ = __pyx_e_5spacy_7symbols_ADJ,
  __pyx_e_5spacy_15parts_of_speech_ADP,
  __pyx_e_5spacy_15parts_of_speech_ADV,
  __pyx_e_5spacy_15parts_of_speech_AUX,
  __pyx_e_5spacy_15parts_of_speech_CONJ,
  __pyx_e_5spacy_15parts_of_speech_CCONJ,
  __pyx_e_5spacy_15parts_of_speech_DET,
  __pyx_e_5spacy_15parts_of_speech_INTJ,
  __pyx_e_5spacy_15parts_of_speech_NOUN,
  __pyx_e_5spacy_15parts_of_speech_NUM,
  __pyx_e_5spacy_15parts_of_speech_PART,
  __pyx_e_5spacy_15parts_of_speech_PRON,
  __pyx_e_5spacy_15parts_of_speech_PROPN,
  __pyx_e_5spacy_15parts_of_speech_PUNCT,
  __pyx_e_5spacy_15parts_of_speech_SCONJ,
  __pyx_e_5spacy_15parts_of_speech_SYM,
  __pyx_e_5spacy_15parts_of_speech_VERB,
  __pyx_e_5spacy_15parts_of_speech_X,
  __pyx_e_5spacy_15parts_of_speech_EOL,
  __pyx_e_5spacy_15parts_of_speech_SPACE
};
struct __pyx_t_5spacy_7structs_LexemeC;
struct __pyx_t_5spacy_7structs_Entity;
struct __pyx_t_5spacy_7structs_TokenC;

/* "structs.pxd":7
 * 
 * 
 * cdef struct LexemeC:             # <<<<<<<<<<<<<<
 *     float* vector
 * 
 */
struct __pyx_t_5spacy_7structs_LexemeC {
  float *vector;
  __pyx_t_5spacy_8typedefs_flags_t flags;
  __pyx_t_5spacy_8typedefs_attr_t lang;
  __pyx_t_5spacy_8typedefs_attr_t id;
  __pyx_t_5spacy_8typedefs_attr_t length;
  __pyx_t_5spacy_8typedefs_attr_t orth;
  __pyx_t_5spacy_8typedefs_attr_t lower;
  __pyx_t_5spacy_8typedefs_attr_t norm;
  __pyx_t_5spacy_8typedefs_attr_t shape;
  __pyx_t_5spacy_8typedefs_attr_t prefix;
  __pyx_t_5spacy_8typedefs_attr_t suffix;
  __pyx_t_5spacy_8typedefs_attr_t cluster;
  float prob;
  float sentiment;
  float l2_norm;
};

/* "structs.pxd":31
 * 
 * 
 * cdef struct Entity:             # <<<<<<<<<<<<<<
 *     hash_t id
 *     int start
 */
struct __pyx_t_5spacy_7structs_Entity {
  __pyx_t_5spacy_8typedefs_hash_t id;
  int start;
  int end;
  int label;
};

/* "structs.pxd":38
 * 
 * 
 * cdef struct TokenC:             # <<<<<<<<<<<<<<
 *     const LexemeC* lex
 *     uint64_t morph
 */
struct __pyx_t_5spacy_7structs_TokenC {
  struct __pyx_t_5spacy_7structs_LexemeC const *lex;
  uint64_t morph;
  enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t pos;
  int spacy;
  int tag;
  int idx;
  int lemma;
  int sense;
  int head;
  int dep;
  int sent_start;
  uint32_t l_kids;
  uint32_t r_kids;
  uint32_t l_edge;
  uint32_t r_edge;
  int ent_iob;
  int ent_type;
  __pyx_t_5spacy_8typedefs_hash_t ent_id;
};
union __pyx_t_5spacy_7strings_Utf8Str;
typedef union __pyx_t_5spacy_7strings_Utf8Str __pyx_t_5spacy_7strings_Utf8Str;

/* "strings.pxd":13
 * 
 * 
 * ctypedef union Utf8Str:             # <<<<<<<<<<<<<<
 *     unsigned char[8] s
 *     unsigned char* p
 */
union __pyx_t_5spacy_7strings_Utf8Str {
  unsigned char s[8];
  unsigned char *p;
};

/* "attrs.pxd":2
 * # Reserve 64 values for flag features
 * cpdef enum attr_id_t:             # <<<<<<<<<<<<<<
 *     NULL_ATTR
 *     IS_ALPHA
 */
enum __pyx_t_5spacy_5attrs_attr_id_t {
  __pyx_e_5spacy_5attrs_NULL_ATTR,
  __pyx_e_5spacy_5attrs_IS_ALPHA,
  __pyx_e_5spacy_5attrs_IS_ASCII,
  __pyx_e_5spacy_5attrs_IS_DIGIT,
  __pyx_e_5spacy_5attrs_IS_LOWER,
  __pyx_e_5spacy_5attrs_IS_PUNCT,
  __pyx_e_5spacy_5attrs_IS_SPACE,
  __pyx_e_5spacy_5attrs_IS_TITLE,
  __pyx_e_5spacy_5attrs_IS_UPPER,
  __pyx_e_5spacy_5attrs_LIKE_URL,
  __pyx_e_5spacy_5attrs_LIKE_NUM,
  __pyx_e_5spacy_5attrs_LIKE_EMAIL,
  __pyx_e_5spacy_5attrs_IS_STOP,
  __pyx_e_5spacy_5attrs_IS_OOV,
  __pyx_e_5spacy_5attrs_IS_BRACKET,
  __pyx_e_5spacy_5attrs_IS_QUOTE,
  __pyx_e_5spacy_5attrs_IS_LEFT_PUNCT,
  __pyx_e_5spacy_5attrs_IS_RIGHT_PUNCT,
  __pyx_e_5spacy_5attrs_FLAG18 = 18,
  __pyx_e_5spacy_5attrs_FLAG19,
  __pyx_e_5spacy_5attrs_FLAG20,
  __pyx_e_5spacy_5attrs_FLAG21,
  __pyx_e_5spacy_5attrs_FLAG22,
  __pyx_e_5spacy_5attrs_FLAG23,
  __pyx_e_5spacy_5attrs_FLAG24,
  __pyx_e_5spacy_5attrs_FLAG25,
  __pyx_e_5spacy_5attrs_FLAG26,
  __pyx_e_5spacy_5attrs_FLAG27,
  __pyx_e_5spacy_5attrs_FLAG28,
  __pyx_e_5spacy_5attrs_FLAG29,
  __pyx_e_5spacy_5attrs_FLAG30,
  __pyx_e_5spacy_5attrs_FLAG31,
  __pyx_e_5spacy_5attrs_FLAG32,
  __pyx_e_5spacy_5attrs_FLAG33,
  __pyx_e_5spacy_5attrs_FLAG34,
  __pyx_e_5spacy_5attrs_FLAG35,
  __pyx_e_5spacy_5attrs_FLAG36,
  __pyx_e_5spacy_5attrs_FLAG37,
  __pyx_e_5spacy_5attrs_FLAG38,
  __pyx_e_5spacy_5attrs_FLAG39,
  __pyx_e_5spacy_5attrs_FLAG40,
  __pyx_e_5spacy_5attrs_FLAG41,
  __pyx_e_5spacy_5attrs_FLAG42,
  __pyx_e_5spacy_5attrs_FLAG43,
  __pyx_e_5spacy_5attrs_FLAG44,
  __pyx_e_5spacy_5attrs_FLAG45,
  __pyx_e_5spacy_5attrs_FLAG46,
  __pyx_e_5spacy_5attrs_FLAG47,
  __pyx_e_5spacy_5attrs_FLAG48,
  __pyx_e_5spacy_5attrs_FLAG49,
  __pyx_e_5spacy_5attrs_FLAG50,
  __pyx_e_5spacy_5attrs_FLAG51,
  __pyx_e_5spacy_5attrs_FLAG52,
  __pyx_e_5spacy_5attrs_FLAG53,
  __pyx_e_5spacy_5attrs_FLAG54,
  __pyx_e_5spacy_5attrs_FLAG55,
  __pyx_e_5spacy_5attrs_FLAG56,
  __pyx_e_5spacy_5attrs_FLAG57,
  __pyx_e_5spacy_5attrs_FLAG58,
  __pyx_e_5spacy_5attrs_FLAG59,
  __pyx_e_5spacy_5attrs_FLAG60,
  __pyx_e_5spacy_5attrs_FLAG61,
  __pyx_e_5spacy_5attrs_FLAG62,
  __pyx_e_5spacy_5attrs_FLAG63,
  __pyx_e_5spacy_5attrs_ID,
  __pyx_e_5spacy_5attrs_ORTH,
  __pyx_e_5spacy_5attrs_LOWER,
  __pyx_e_5spacy_5attrs_NORM,
  __pyx_e_5spacy_5attrs_SHAPE,
  __pyx_e_5spacy_5attrs_PREFIX,
  __pyx_e_5spacy_5attrs_SUFFIX,
  __pyx_e_5spacy_5attrs_LENGTH,
  __pyx_e_5spacy_5attrs_CLUSTER,
  __pyx_e_5spacy_5attrs_LEMMA,
  __pyx_e_5spacy_5attrs_POS,
  __pyx_e_5spacy_5attrs_TAG,
  __pyx_e_5spacy_5attrs_DEP,
  __pyx_e_5spacy_5attrs_ENT_IOB,
  __pyx_e_5spacy_5attrs_ENT_TYPE,
  __pyx_e_5spacy_5attrs_HEAD,
  __pyx_e_5spacy_5attrs_SPACY,
  __pyx_e_5spacy_5attrs_PROB,
  __pyx_e_5spacy_5attrs_LANG
};
union __pyx_t_5spacy_5vocab_LexemesOrTokens;
struct __pyx_t_5spacy_5vocab__Cached;

/* "vocab.pxd":16
 * 
 * 
 * cdef union LexemesOrTokens:             # <<<<<<<<<<<<<<
 *     const LexemeC* const* lexemes
 *     const TokenC* tokens
 */
union __pyx_t_5spacy_5vocab_LexemesOrTokens {
  struct __pyx_t_5spacy_7structs_LexemeC const *const *lexemes;
  struct __pyx_t_5spacy_7structs_TokenC const *tokens;
};

/* "vocab.pxd":21
 * 
 * 
 * cdef struct _Cached:             # <<<<<<<<<<<<<<
 *     LexemesOrTokens data
 *     bint is_lex
 */
struct __pyx_t_5spacy_5vocab__Cached {
  union __pyx_t_5spacy_5vocab_LexemesOrTokens data;
  int is_lex;
  int length;
};

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;
struct __pyx_t_5spacy_10morphology_RichTagC;
struct __pyx_t_5spacy_10morphology_MorphAnalysisC;

/* "spacy\morphology.pxd":44
 * 
 * 
 * cpdef enum univ_morph_t:             # <<<<<<<<<<<<<<
 *     NIL = 0
 *     Animacy_anim = symbols.Animacy_anim
 */
enum __pyx_t_5spacy_10morphology_univ_morph_t {

  /* "spacy\morphology.pxd":46
 * cpdef enum univ_morph_t:
 *     NIL = 0
 *     Animacy_anim = symbols.Animacy_anim             # <<<<<<<<<<<<<<
 *     Animacy_inam
 *     Aspect_freq
 */
  __pyx_e_5spacy_10morphology_NIL = 0,
  __pyx_e_5spacy_10morphology_Animacy_anim = __pyx_e_5spacy_7symbols_Animacy_anim,
  __pyx_e_5spacy_10morphology_Animacy_inam,
  __pyx_e_5spacy_10morphology_Aspect_freq,
  __pyx_e_5spacy_10morphology_Aspect_imp,
  __pyx_e_5spacy_10morphology_Aspect_mod,
  __pyx_e_5spacy_10morphology_Aspect_none,
  __pyx_e_5spacy_10morphology_Aspect_perf,
  __pyx_e_5spacy_10morphology_Case_abe,
  __pyx_e_5spacy_10morphology_Case_abl,
  __pyx_e_5spacy_10morphology_Case_abs,
  __pyx_e_5spacy_10morphology_Case_acc,
  __pyx_e_5spacy_10morphology_Case_ade,
  __pyx_e_5spacy_10morphology_Case_all,
  __pyx_e_5spacy_10morphology_Case_cau,
  __pyx_e_5spacy_10morphology_Case_com,
  __pyx_e_5spacy_10morphology_Case_dat,
  __pyx_e_5spacy_10morphology_Case_del,
  __pyx_e_5spacy_10morphology_Case_dis,
  __pyx_e_5spacy_10morphology_Case_ela,
  __pyx_e_5spacy_10morphology_Case_ess,
  __pyx_e_5spacy_10morphology_Case_gen,
  __pyx_e_5spacy_10morphology_Case_ill,
  __pyx_e_5spacy_10morphology_Case_ine,
  __pyx_e_5spacy_10morphology_Case_ins,
  __pyx_e_5spacy_10morphology_Case_loc,
  __pyx_e_5spacy_10morphology_Case_lat,
  __pyx_e_5spacy_10morphology_Case_nom,
  __pyx_e_5spacy_10morphology_Case_par,
  __pyx_e_5spacy_10morphology_Case_sub,
  __pyx_e_5spacy_10morphology_Case_sup,
  __pyx_e_5spacy_10morphology_Case_tem,
  __pyx_e_5spacy_10morphology_Case_ter,
  __pyx_e_5spacy_10morphology_Case_tra,
  __pyx_e_5spacy_10morphology_Case_voc,
  __pyx_e_5spacy_10morphology_Definite_two,
  __pyx_e_5spacy_10morphology_Definite_def,
  __pyx_e_5spacy_10morphology_Definite_red,
  __pyx_e_5spacy_10morphology_Definite_cons,
  __pyx_e_5spacy_10morphology_Definite_ind,
  __pyx_e_5spacy_10morphology_Degree_cmp,
  __pyx_e_5spacy_10morphology_Degree_comp,
  __pyx_e_5spacy_10morphology_Degree_none,
  __pyx_e_5spacy_10morphology_Degree_pos,
  __pyx_e_5spacy_10morphology_Degree_sup,
  __pyx_e_5spacy_10morphology_Degree_abs,
  __pyx_e_5spacy_10morphology_Degree_com,
  __pyx_e_5spacy_10morphology_Degree_dim,
  __pyx_e_5spacy_10morphology_Gender_com,
  __pyx_e_5spacy_10morphology_Gender_fem,
  __pyx_e_5spacy_10morphology_Gender_masc,
  __pyx_e_5spacy_10morphology_Gender_neut,
  __pyx_e_5spacy_10morphology_Mood_cnd,
  __pyx_e_5spacy_10morphology_Mood_imp,
  __pyx_e_5spacy_10morphology_Mood_ind,
  __pyx_e_5spacy_10morphology_Mood_n,
  __pyx_e_5spacy_10morphology_Mood_pot,
  __pyx_e_5spacy_10morphology_Mood_sub,
  __pyx_e_5spacy_10morphology_Mood_opt,
  __pyx_e_5spacy_10morphology_Negative_neg,
  __pyx_e_5spacy_10morphology_Negative_pos,
  __pyx_e_5spacy_10morphology_Negative_yes,
  __pyx_e_5spacy_10morphology_Polarity_neg,
  __pyx_e_5spacy_10morphology_Polarity_pos,
  __pyx_e_5spacy_10morphology_Number_com,
  __pyx_e_5spacy_10morphology_Number_dual,
  __pyx_e_5spacy_10morphology_Number_none,
  __pyx_e_5spacy_10morphology_Number_plur,
  __pyx_e_5spacy_10morphology_Number_sing,
  __pyx_e_5spacy_10morphology_Number_ptan,
  __pyx_e_5spacy_10morphology_Number_count,
  __pyx_e_5spacy_10morphology_NumType_card,
  __pyx_e_5spacy_10morphology_NumType_dist,
  __pyx_e_5spacy_10morphology_NumType_frac,
  __pyx_e_5spacy_10morphology_NumType_gen,
  __pyx_e_5spacy_10morphology_NumType_mult,
  __pyx_e_5spacy_10morphology_NumType_none,
  __pyx_e_5spacy_10morphology_NumType_ord,
  __pyx_e_5spacy_10morphology_NumType_sets,
  __pyx_e_5spacy_10morphology_Person_one,
  __pyx_e_5spacy_10morphology_Person_two,
  __pyx_e_5spacy_10morphology_Person_three,
  __pyx_e_5spacy_10morphology_Person_none,
  __pyx_e_5spacy_10morphology_Poss_yes,
  __pyx_e_5spacy_10morphology_PronType_advPart,
  __pyx_e_5spacy_10morphology_PronType_art,
  __pyx_e_5spacy_10morphology_PronType_default,
  __pyx_e_5spacy_10morphology_PronType_dem,
  __pyx_e_5spacy_10morphology_PronType_ind,
  __pyx_e_5spacy_10morphology_PronType_int,
  __pyx_e_5spacy_10morphology_PronType_neg,
  __pyx_e_5spacy_10morphology_PronType_prs,
  __pyx_e_5spacy_10morphology_PronType_rcp,
  __pyx_e_5spacy_10morphology_PronType_rel,
  __pyx_e_5spacy_10morphology_PronType_tot,
  __pyx_e_5spacy_10morphology_PronType_clit,
  __pyx_e_5spacy_10morphology_PronType_exc,
  __pyx_e_5spacy_10morphology_Reflex_yes,
  __pyx_e_5spacy_10morphology_Tense_fut,
  __pyx_e_5spacy_10morphology_Tense_imp,
  __pyx_e_5spacy_10morphology_Tense_past,
  __pyx_e_5spacy_10morphology_Tense_pres,
  __pyx_e_5spacy_10morphology_VerbForm_fin,
  __pyx_e_5spacy_10morphology_VerbForm_ger,
  __pyx_e_5spacy_10morphology_VerbForm_inf,
  __pyx_e_5spacy_10morphology_VerbForm_none,
  __pyx_e_5spacy_10morphology_VerbForm_part,
  __pyx_e_5spacy_10morphology_VerbForm_partFut,
  __pyx_e_5spacy_10morphology_VerbForm_partPast,
  __pyx_e_5spacy_10morphology_VerbForm_partPres,
  __pyx_e_5spacy_10morphology_VerbForm_sup,
  __pyx_e_5spacy_10morphology_VerbForm_trans,
  __pyx_e_5spacy_10morphology_VerbForm_conv,
  __pyx_e_5spacy_10morphology_VerbForm_gdv,
  __pyx_e_5spacy_10morphology_Voice_act,
  __pyx_e_5spacy_10morphology_Voice_cau,
  __pyx_e_5spacy_10morphology_Voice_pass,
  __pyx_e_5spacy_10morphology_Voice_mid,
  __pyx_e_5spacy_10morphology_Voice_int,
  __pyx_e_5spacy_10morphology_Abbr_yes,
  __pyx_e_5spacy_10morphology_AdpType_prep,
  __pyx_e_5spacy_10morphology_AdpType_post,
  __pyx_e_5spacy_10morphology_AdpType_voc,
  __pyx_e_5spacy_10morphology_AdpType_comprep,
  __pyx_e_5spacy_10morphology_AdpType_circ,
  __pyx_e_5spacy_10morphology_AdvType_man,
  __pyx_e_5spacy_10morphology_AdvType_loc,
  __pyx_e_5spacy_10morphology_AdvType_tim,
  __pyx_e_5spacy_10morphology_AdvType_deg,
  __pyx_e_5spacy_10morphology_AdvType_cau,
  __pyx_e_5spacy_10morphology_AdvType_mod,
  __pyx_e_5spacy_10morphology_AdvType_sta,
  __pyx_e_5spacy_10morphology_AdvType_ex,
  __pyx_e_5spacy_10morphology_AdvType_adadj,
  __pyx_e_5spacy_10morphology_ConjType_oper,
  __pyx_e_5spacy_10morphology_ConjType_comp,
  __pyx_e_5spacy_10morphology_Connegative_yes,
  __pyx_e_5spacy_10morphology_Derivation_minen,
  __pyx_e_5spacy_10morphology_Derivation_sti,
  __pyx_e_5spacy_10morphology_Derivation_inen,
  __pyx_e_5spacy_10morphology_Derivation_lainen,
  __pyx_e_5spacy_10morphology_Derivation_ja,
  __pyx_e_5spacy_10morphology_Derivation_ton,
  __pyx_e_5spacy_10morphology_Derivation_vs,
  __pyx_e_5spacy_10morphology_Derivation_ttain,
  __pyx_e_5spacy_10morphology_Derivation_ttaa,
  __pyx_e_5spacy_10morphology_Echo_rdp,
  __pyx_e_5spacy_10morphology_Echo_ech,
  __pyx_e_5spacy_10morphology_Foreign_foreign,
  __pyx_e_5spacy_10morphology_Foreign_fscript,
  __pyx_e_5spacy_10morphology_Foreign_tscript,
  __pyx_e_5spacy_10morphology_Foreign_yes,
  __pyx_e_5spacy_10morphology_Gender_dat_masc,
  __pyx_e_5spacy_10morphology_Gender_dat_fem,
  __pyx_e_5spacy_10morphology_Gender_erg_masc,
  __pyx_e_5spacy_10morphology_Gender_erg_fem,
  __pyx_e_5spacy_10morphology_Gender_psor_masc,
  __pyx_e_5spacy_10morphology_Gender_psor_fem,
  __pyx_e_5spacy_10morphology_Gender_psor_neut,
  __pyx_e_5spacy_10morphology_Hyph_yes,
  __pyx_e_5spacy_10morphology_InfForm_one,
  __pyx_e_5spacy_10morphology_InfForm_two,
  __pyx_e_5spacy_10morphology_InfForm_three,
  __pyx_e_5spacy_10morphology_NameType_geo,
  __pyx_e_5spacy_10morphology_NameType_prs,
  __pyx_e_5spacy_10morphology_NameType_giv,
  __pyx_e_5spacy_10morphology_NameType_sur,
  __pyx_e_5spacy_10morphology_NameType_nat,
  __pyx_e_5spacy_10morphology_NameType_com,
  __pyx_e_5spacy_10morphology_NameType_pro,
  __pyx_e_5spacy_10morphology_NameType_oth,
  __pyx_e_5spacy_10morphology_NounType_com,
  __pyx_e_5spacy_10morphology_NounType_prop,
  __pyx_e_5spacy_10morphology_NounType_class,
  __pyx_e_5spacy_10morphology_Number_abs_sing,
  __pyx_e_5spacy_10morphology_Number_abs_plur,
  __pyx_e_5spacy_10morphology_Number_dat_sing,
  __pyx_e_5spacy_10morphology_Number_dat_plur,
  __pyx_e_5spacy_10morphology_Number_erg_sing,
  __pyx_e_5spacy_10morphology_Number_erg_plur,
  __pyx_e_5spacy_10morphology_Number_psee_sing,
  __pyx_e_5spacy_10morphology_Number_psee_plur,
  __pyx_e_5spacy_10morphology_Number_psor_sing,
  __pyx_e_5spacy_10morphology_Number_psor_plur,
  __pyx_e_5spacy_10morphology_NumForm_digit,
  __pyx_e_5spacy_10morphology_NumForm_roman,
  __pyx_e_5spacy_10morphology_NumForm_word,
  __pyx_e_5spacy_10morphology_NumValue_one,
  __pyx_e_5spacy_10morphology_NumValue_two,
  __pyx_e_5spacy_10morphology_NumValue_three,
  __pyx_e_5spacy_10morphology_PartForm_pres,
  __pyx_e_5spacy_10morphology_PartForm_past,
  __pyx_e_5spacy_10morphology_PartForm_agt,
  __pyx_e_5spacy_10morphology_PartForm_neg,
  __pyx_e_5spacy_10morphology_PartType_mod,
  __pyx_e_5spacy_10morphology_PartType_emp,
  __pyx_e_5spacy_10morphology_PartType_res,
  __pyx_e_5spacy_10morphology_PartType_inf,
  __pyx_e_5spacy_10morphology_PartType_vbp,
  __pyx_e_5spacy_10morphology_Person_abs_one,
  __pyx_e_5spacy_10morphology_Person_abs_two,
  __pyx_e_5spacy_10morphology_Person_abs_three,
  __pyx_e_5spacy_10morphology_Person_dat_one,
  __pyx_e_5spacy_10morphology_Person_dat_two,
  __pyx_e_5spacy_10morphology_Person_dat_three,
  __pyx_e_5spacy_10morphology_Person_erg_one,
  __pyx_e_5spacy_10morphology_Person_erg_two,
  __pyx_e_5spacy_10morphology_Person_erg_three,
  __pyx_e_5spacy_10morphology_Person_psor_one,
  __pyx_e_5spacy_10morphology_Person_psor_two,
  __pyx_e_5spacy_10morphology_Person_psor_three,
  __pyx_e_5spacy_10morphology_Polite_inf,
  __pyx_e_5spacy_10morphology_Polite_pol,
  __pyx_e_5spacy_10morphology_Polite_abs_inf,
  __pyx_e_5spacy_10morphology_Polite_abs_pol,
  __pyx_e_5spacy_10morphology_Polite_erg_inf,
  __pyx_e_5spacy_10morphology_Polite_erg_pol,
  __pyx_e_5spacy_10morphology_Polite_dat_inf,
  __pyx_e_5spacy_10morphology_Polite_dat_pol,
  __pyx_e_5spacy_10morphology_Prefix_yes,
  __pyx_e_5spacy_10morphology_PrepCase_npr,
  __pyx_e_5spacy_10morphology_PrepCase_pre,
  __pyx_e_5spacy_10morphology_PunctSide_ini,
  __pyx_e_5spacy_10morphology_PunctSide_fin,
  __pyx_e_5spacy_10morphology_PunctType_peri,
  __pyx_e_5spacy_10morphology_PunctType_qest,
  __pyx_e_5spacy_10morphology_PunctType_excl,
  __pyx_e_5spacy_10morphology_PunctType_quot,
  __pyx_e_5spacy_10morphology_PunctType_brck,
  __pyx_e_5spacy_10morphology_PunctType_comm,
  __pyx_e_5spacy_10morphology_PunctType_colo,
  __pyx_e_5spacy_10morphology_PunctType_semi,
  __pyx_e_5spacy_10morphology_PunctType_dash,
  __pyx_e_5spacy_10morphology_Style_arch,
  __pyx_e_5spacy_10morphology_Style_rare,
  __pyx_e_5spacy_10morphology_Style_poet,
  __pyx_e_5spacy_10morphology_Style_norm,
  __pyx_e_5spacy_10morphology_Style_coll,
  __pyx_e_5spacy_10morphology_Style_vrnc,
  __pyx_e_5spacy_10morphology_Style_sing,
  __pyx_e_5spacy_10morphology_Style_expr,
  __pyx_e_5spacy_10morphology_Style_derg,
  __pyx_e_5spacy_10morphology_Style_vulg,
  __pyx_e_5spacy_10morphology_Style_yes,
  __pyx_e_5spacy_10morphology_StyleVariant_styleShort,
  __pyx_e_5spacy_10morphology_StyleVariant_styleBound,
  __pyx_e_5spacy_10morphology_VerbType_aux,
  __pyx_e_5spacy_10morphology_VerbType_cop,
  __pyx_e_5spacy_10morphology_VerbType_mod,
  __pyx_e_5spacy_10morphology_VerbType_light
};

/* "spacy\morphology.pxd":13
 * 
 * 
 * cdef struct RichTagC:             # <<<<<<<<<<<<<<
 *     uint64_t morph
 *     int id
 */
struct __pyx_t_5spacy_10morphology_RichTagC {
  uint64_t morph;
  int id;
  enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t pos;
  __pyx_t_5spacy_8typedefs_attr_t name;
};

/* "spacy\morphology.pxd":20
 * 
 * 
 * cdef struct MorphAnalysisC:             # <<<<<<<<<<<<<<
 *     RichTagC tag
 *     attr_t lemma
 */
struct __pyx_t_5spacy_10morphology_MorphAnalysisC {
  struct __pyx_t_5spacy_10morphology_RichTagC tag;
  __pyx_t_5spacy_8typedefs_attr_t lemma;
};

/* "cymem\cymem.pxd":1
 * cdef class Pool:             # <<<<<<<<<<<<<<
 *     cdef readonly size_t size
 *     cdef readonly dict addresses
 */
struct __pyx_obj_5cymem_5cymem_Pool {
  PyObject_HEAD
  struct __pyx_vtabstruct_5cymem_5cymem_Pool *__pyx_vtab;
  size_t size;
  PyObject *addresses;
  PyObject *refs;
};


/* "cymem\cymem.pxd":11
 * 
 * 
 * cdef class Address:             # <<<<<<<<<<<<<<
 *     cdef void* ptr
 */
struct __pyx_obj_5cymem_5cymem_Address {
  PyObject_HEAD
  void *ptr;
};


/* "preshed\maps.pxd":36
 * 
 * 
 * cdef class PreshMap:             # <<<<<<<<<<<<<<
 *     cdef MapStruct* c_map
 *     cdef Pool mem
 */
struct __pyx_obj_7preshed_4maps_PreshMap {
  PyObject_HEAD
  struct __pyx_vtabstruct_7preshed_4maps_PreshMap *__pyx_vtab;
  struct __pyx_t_7preshed_4maps_MapStruct *c_map;
  struct __pyx_obj_5cymem_5cymem_Pool *mem;
};


/* "preshed\maps.pxd":44
 * 
 * 
 * cdef class PreshMapArray:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cdef MapStruct* maps
 */
struct __pyx_obj_7preshed_4maps_PreshMapArray {
  PyObject_HEAD
  struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *__pyx_vtab;
  struct __pyx_obj_5cymem_5cymem_Pool *mem;
  struct __pyx_t_7preshed_4maps_MapStruct *maps;
  size_t length;
};


/* "strings.pxd":18
 * 
 * 
 * cdef class StringStore:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cdef Utf8Str* c
 */
struct __pyx_obj_5spacy_7strings_StringStore {
  PyObject_HEAD
  struct __pyx_vtabstruct_5spacy_7strings_StringStore *__pyx_vtab;
  struct __pyx_obj_5cymem_5cymem_Pool *mem;
  __pyx_t_5spacy_7strings_Utf8Str *c;
  int64_t size;
  int is_frozen;
  struct __pyx_obj_7preshed_4maps_PreshMap *_map;
  struct __pyx_obj_7preshed_4maps_PreshMap *_oov;
  int64_t _resize_at;
};


/* "vocab.pxd":27
 * 
 * 
 * cdef class Vocab:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cpdef readonly StringStore strings
 */
struct __pyx_obj_5spacy_5vocab_Vocab {
  PyObject_HEAD
  struct __pyx_vtabstruct_5spacy_5vocab_Vocab *__pyx_vtab;
  struct __pyx_obj_5cymem_5cymem_Pool *mem;
  struct __pyx_obj_5spacy_7strings_StringStore *strings;
  struct __pyx_obj_5spacy_10morphology_Morphology *morphology;
  int length;
  PyObject *_serializer;
  PyObject *data_dir;
  PyObject *lex_attr_getters;
  PyObject *serializer_freqs;
  struct __pyx_obj_7preshed_4maps_PreshMap *_by_hash;
  struct __pyx_obj_7preshed_4maps_PreshMap *_by_orth;
  int vectors_length;
};


/* "lexeme.pxd":14
 * cdef LexemeC EMPTY_LEXEME
 * 
 * cdef class Lexeme:             # <<<<<<<<<<<<<<
 *     cdef LexemeC* c
 *     cdef readonly Vocab vocab
 */
struct __pyx_obj_5spacy_6lexeme_Lexeme {
  PyObject_HEAD
  struct __pyx_vtabstruct_5spacy_6lexeme_Lexeme *__pyx_vtab;
  struct __pyx_t_5spacy_7structs_LexemeC *c;
  struct __pyx_obj_5spacy_5vocab_Vocab *vocab;
  __pyx_t_5spacy_8typedefs_attr_t orth;
};


/* "spacy\morphology.pxd":25
 * 
 * 
 * cdef class Morphology:             # <<<<<<<<<<<<<<
 *     cdef readonly Pool mem
 *     cdef readonly StringStore strings
 */
struct __pyx_obj_5spacy_10morphology_Morphology {
  PyObject_HEAD
  struct __pyx_vtabstruct_5spacy_10morphology_Morphology *__pyx_vtab;
  struct __pyx_obj_5cymem_5cymem_Pool *mem;
  struct __pyx_obj_5spacy_7strings_StringStore *strings;
  PyObject *lemmatizer;
  PyObject *tag_map;
  PyObject *n_tags;
  PyObject *reverse_index;
  PyObject *tag_names;
  struct __pyx_t_5spacy_10morphology_RichTagC *rich_tags;
  struct __pyx_obj_7preshed_4maps_PreshMapArray *_cache;
};



/* "cymem\cymem.pxd":1
 * cdef class Pool:             # <<<<<<<<<<<<<<
 *     cdef readonly size_t size
 *     cdef readonly dict addresses
 */

struct __pyx_vtabstruct_5cymem_5cymem_Pool {
  void *(*alloc)(struct __pyx_obj_5cymem_5cymem_Pool *, size_t, size_t);
  void (*free)(struct __pyx_obj_5cymem_5cymem_Pool *, void *);
  void *(*realloc)(struct __pyx_obj_5cymem_5cymem_Pool *, void *, size_t);
};
static struct __pyx_vtabstruct_5cymem_5cymem_Pool *__pyx_vtabptr_5cymem_5cymem_Pool;


/* "preshed\maps.pxd":36
 * 
 * 
 * cdef class PreshMap:             # <<<<<<<<<<<<<<
 *     cdef MapStruct* c_map
 *     cdef Pool mem
 */

struct __pyx_vtabstruct_7preshed_4maps_PreshMap {
  void *(*get)(struct __pyx_obj_7preshed_4maps_PreshMap *, __pyx_t_7preshed_4maps_key_t);
  void (*set)(struct __pyx_obj_7preshed_4maps_PreshMap *, __pyx_t_7preshed_4maps_key_t, void *);
};
static struct __pyx_vtabstruct_7preshed_4maps_PreshMap *__pyx_vtabptr_7preshed_4maps_PreshMap;


/* "preshed\maps.pxd":44
 * 
 * 
 * cdef class PreshMapArray:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cdef MapStruct* maps
 */

struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray {
  void *(*get)(struct __pyx_obj_7preshed_4maps_PreshMapArray *, size_t, __pyx_t_7preshed_4maps_key_t);
  void (*set)(struct __pyx_obj_7preshed_4maps_PreshMapArray *, size_t, __pyx_t_7preshed_4maps_key_t, void *);
};
static struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *__pyx_vtabptr_7preshed_4maps_PreshMapArray;


/* "strings.pxd":18
 * 
 * 
 * cdef class StringStore:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cdef Utf8Str* c
 */

struct __pyx_vtabstruct_5spacy_7strings_StringStore {
  __pyx_t_5spacy_7strings_Utf8Str const *(*intern_unicode)(struct __pyx_obj_5spacy_7strings_StringStore *, PyObject *);
  __pyx_t_5spacy_7strings_Utf8Str const *(*_intern_utf8)(struct __pyx_obj_5spacy_7strings_StringStore *, char *, int);
};
static struct __pyx_vtabstruct_5spacy_7strings_StringStore *__pyx_vtabptr_5spacy_7strings_StringStore;


/* "vocab.pxd":27
 * 
 * 
 * cdef class Vocab:             # <<<<<<<<<<<<<<
 *     cdef Pool mem
 *     cpdef readonly StringStore strings
 */

struct __pyx_vtabstruct_5spacy_5vocab_Vocab {
  struct __pyx_t_5spacy_7structs_LexemeC const *(*get)(struct __pyx_obj_5spacy_5vocab_Vocab *, struct __pyx_obj_5cymem_5cymem_Pool *, PyObject *);
  struct __pyx_t_5spacy_7structs_LexemeC const *(*get_by_orth)(struct __pyx_obj_5spacy_5vocab_Vocab *, struct __pyx_obj_5cymem_5cymem_Pool *, __pyx_t_5spacy_8typedefs_attr_t);
  struct __pyx_t_5spacy_7structs_TokenC const *(*make_fused_token)(struct __pyx_obj_5spacy_5vocab_Vocab *, PyObject *);
  struct __pyx_t_5spacy_7structs_LexemeC const *(*_new_lexeme)(struct __pyx_obj_5spacy_5vocab_Vocab *, struct __pyx_obj_5cymem_5cymem_Pool *, PyObject *);
  int (*_add_lex_to_vocab)(struct __pyx_obj_5spacy_5vocab_Vocab *, __pyx_t_5spacy_8typedefs_hash_t, struct __pyx_t_5spacy_7structs_LexemeC const *);
};
static struct __pyx_vtabstruct_5spacy_5vocab_Vocab *__pyx_vtabptr_5spacy_5vocab_Vocab;


/* "lexeme.pxd":14
 * cdef LexemeC EMPTY_LEXEME
 * 
 * cdef class Lexeme:             # <<<<<<<<<<<<<<
 *     cdef LexemeC* c
 *     cdef readonly Vocab vocab
 */

struct __pyx_vtabstruct_5spacy_6lexeme_Lexeme {
  struct __pyx_obj_5spacy_6lexeme_Lexeme *(*from_ptr)(struct __pyx_t_5spacy_7structs_LexemeC *, struct __pyx_obj_5spacy_5vocab_Vocab *, int);
  void (*set_struct_attr)(struct __pyx_t_5spacy_7structs_LexemeC *, enum __pyx_t_5spacy_5attrs_attr_id_t, __pyx_t_5spacy_8typedefs_attr_t);
  __pyx_t_5spacy_8typedefs_attr_t (*get_struct_attr)(struct __pyx_t_5spacy_7structs_LexemeC const *, enum __pyx_t_5spacy_5attrs_attr_id_t);
  int (*c_check_flag)(struct __pyx_t_5spacy_7structs_LexemeC const *, enum __pyx_t_5spacy_5attrs_attr_id_t);
  int (*c_set_flag)(struct __pyx_t_5spacy_7structs_LexemeC *, enum __pyx_t_5spacy_5attrs_attr_id_t, int);
};
static struct __pyx_vtabstruct_5spacy_6lexeme_Lexeme *__pyx_vtabptr_5spacy_6lexeme_Lexeme;
static CYTHON_INLINE struct __pyx_obj_5spacy_6lexeme_Lexeme *__pyx_f_5spacy_6lexeme_6Lexeme_from_ptr(struct __pyx_t_5spacy_7structs_LexemeC *, struct __pyx_obj_5spacy_5vocab_Vocab *, int);
static CYTHON_INLINE void __pyx_f_5spacy_6lexeme_6Lexeme_set_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC *, enum __pyx_t_5spacy_5attrs_attr_id_t, __pyx_t_5spacy_8typedefs_attr_t);
static CYTHON_INLINE __pyx_t_5spacy_8typedefs_attr_t __pyx_f_5spacy_6lexeme_6Lexeme_get_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC const *, enum __pyx_t_5spacy_5attrs_attr_id_t);
static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_check_flag(struct __pyx_t_5spacy_7structs_LexemeC const *, enum __pyx_t_5spacy_5attrs_attr_id_t);
static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_set_flag(struct __pyx_t_5spacy_7structs_LexemeC *, enum __pyx_t_5spacy_5attrs_attr_id_t, int);


/* "spacy\morphology.pyx":35
 * 
 * 
 * cdef class Morphology:             # <<<<<<<<<<<<<<
 *     def __init__(self, StringStore string_store, tag_map, lemmatizer):
 *         self.mem = Pool()
 */

struct __pyx_vtabstruct_5spacy_10morphology_Morphology {
  int (*assign_tag)(struct __pyx_obj_5spacy_10morphology_Morphology *, struct __pyx_t_5spacy_7structs_TokenC *, PyObject *);
  int (*assign_tag_id)(struct __pyx_obj_5spacy_10morphology_Morphology *, struct __pyx_t_5spacy_7structs_TokenC *, int);
  int (*assign_feature)(struct __pyx_obj_5spacy_10morphology_Morphology *, uint64_t *, enum __pyx_t_5spacy_10morphology_univ_morph_t, int);
};
static struct __pyx_vtabstruct_5spacy_10morphology_Morphology *__pyx_vtabptr_5spacy_10morphology_Morphology;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE int __Pyx_IterFinish(void);

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE PyObject* __Pyx_PyDict_Items(PyObject* d);

typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    ((likely((cfunc)->func)) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
             ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) : __Pyx__CallUnboundCMethod0(cfunc, self)))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

#define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)
static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {
    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static void* __Pyx_GetVtable(PyObject *dict);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

#define __Pyx_CyFunction_USED 1
#include <structmember.h>
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code)\
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __Pyx_PyInt_As_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(PyObject *);

static CYTHON_INLINE int32_t __Pyx_PyInt_As_int32_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(enum __pyx_t_5spacy_10morphology_univ_morph_t value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_5attrs_attr_id_t(enum __pyx_t_5spacy_5attrs_attr_id_t value);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t value);

static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *);

static CYTHON_INLINE enum __pyx_t_5spacy_10morphology_univ_morph_t __Pyx_PyInt_As_enum____pyx_t_5spacy_10morphology_univ_morph_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if (defined(_WIN32) || defined(__clang__)) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_ImportVoidPtr(PyObject *module, const char *name, void **p, const char *sig);

static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static int __pyx_f_5spacy_10morphology_10Morphology_assign_tag(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_t_5spacy_7structs_TokenC *__pyx_v_token, PyObject *__pyx_v_tag); /* proto*/
static int __pyx_f_5spacy_10morphology_10Morphology_assign_tag_id(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_t_5spacy_7structs_TokenC *__pyx_v_token, int __pyx_v_tag_id); /* proto*/
static int __pyx_f_5spacy_10morphology_10Morphology_assign_feature(CYTHON_UNUSED struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, uint64_t *__pyx_v_flags, enum __pyx_t_5spacy_10morphology_univ_morph_t __pyx_v_flag_id, int __pyx_v_value); /* proto*/
static CYTHON_INLINE struct __pyx_obj_5spacy_6lexeme_Lexeme *__pyx_f_5spacy_6lexeme_6Lexeme_from_ptr(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, struct __pyx_obj_5spacy_5vocab_Vocab *__pyx_v_vocab, CYTHON_UNUSED int __pyx_v_vector_length); /* proto*/
static CYTHON_INLINE void __pyx_f_5spacy_6lexeme_6Lexeme_set_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_name, __pyx_t_5spacy_8typedefs_attr_t __pyx_v_value); /* proto*/
static CYTHON_INLINE __pyx_t_5spacy_8typedefs_attr_t __pyx_f_5spacy_6lexeme_6Lexeme_get_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC const *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_feat_name); /* proto*/
static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_check_flag(struct __pyx_t_5spacy_7structs_LexemeC const *__pyx_v_lexeme, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_flag_id); /* proto*/
static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_set_flag(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_flag_id, int __pyx_v_value); /* proto*/

/* Module declarations from 'cymem.cymem' */
static PyTypeObject *__pyx_ptype_5cymem_5cymem_Pool = 0;
static PyTypeObject *__pyx_ptype_5cymem_5cymem_Address = 0;

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'preshed.maps' */
static PyTypeObject *__pyx_ptype_7preshed_4maps_PreshMap = 0;
static PyTypeObject *__pyx_ptype_7preshed_4maps_PreshMapArray = 0;

/* Module declarations from 'spacy.typedefs' */

/* Module declarations from 'spacy' */

/* Module declarations from 'spacy.symbols' */

/* Module declarations from 'spacy.parts_of_speech' */

/* Module declarations from 'spacy.structs' */

/* Module declarations from 'murmurhash.mrmr' */
static uint64_t (*__pyx_f_10murmurhash_4mrmr_hash64)(void *, int, uint64_t); /*proto*/

/* Module declarations from 'spacy.strings' */
static PyTypeObject *__pyx_ptype_5spacy_7strings_StringStore = 0;

/* Module declarations from 'libc.string' */

/* Module declarations from 'spacy.attrs' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'spacy.vocab' */
static PyTypeObject *__pyx_ptype_5spacy_5vocab_Vocab = 0;
static struct __pyx_t_5spacy_7structs_LexemeC *__pyx_vp_5spacy_5vocab_EMPTY_LEXEME = 0;
#define __pyx_v_5spacy_5vocab_EMPTY_LEXEME (*__pyx_vp_5spacy_5vocab_EMPTY_LEXEME)

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'spacy.lexeme' */
static PyTypeObject *__pyx_ptype_5spacy_6lexeme_Lexeme = 0;
static struct __pyx_t_5spacy_7structs_LexemeC *__pyx_vp_5spacy_6lexeme_EMPTY_LEXEME = 0;
#define __pyx_v_5spacy_6lexeme_EMPTY_LEXEME (*__pyx_vp_5spacy_6lexeme_EMPTY_LEXEME)

/* Module declarations from 'spacy.morphology' */
static PyTypeObject *__pyx_ptype_5spacy_10morphology_Morphology = 0;
#define __Pyx_MODULE_NAME "spacy.morphology"
int __pyx_module_is_main_spacy__morphology = 0;

/* Implementation of 'spacy.morphology' */
static PyObject *__pyx_builtin_sorted;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_B[] = "B";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_O[] = "O";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_l[] = "l";
static char __pyx_k_q[] = "q";
static char __pyx_k_SP[] = "SP";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k_IDS[] = "IDS";
static char __pyx_k_get[] = "get";
static char __pyx_k_key[] = "key";
static char __pyx_k_out[] = "out";
static char __pyx_k_pos[] = "pos";
static char __pyx_k_keys[] = "keys";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_orth[] = "orth";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_LEMMA[] = "LEMMA";
static char __pyx_k_NAMES[] = "NAMES";
static char __pyx_k_attrs[] = "attrs";
static char __pyx_k_force[] = "force";
static char __pyx_k_items[] = "items";
static char __pyx_k_lower[] = "lower";
static char __pyx_k_props[] = "props";
static char __pyx_k_range[] = "range";
static char __pyx_k_upper[] = "upper";
static char __pyx_k_value[] = "value";
static char __pyx_k_Mood_n[] = "Mood_n";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_lambda[] = "<lambda>";
static char __pyx_k_sorted[] = "sorted";
static char __pyx_k_POS_IDS[] = "POS_IDS";
static char __pyx_k_tag_map[] = "tag_map";
static char __pyx_k_tag_str[] = "tag_str";
static char __pyx_k_Abbr_yes[] = "Abbr_yes ";
static char __pyx_k_Case_abe[] = "Case_abe";
static char __pyx_k_Case_abl[] = "Case_abl";
static char __pyx_k_Case_abs[] = "Case_abs";
static char __pyx_k_Case_acc[] = "Case_acc";
static char __pyx_k_Case_ade[] = "Case_ade";
static char __pyx_k_Case_all[] = "Case_all";
static char __pyx_k_Case_cau[] = "Case_cau";
static char __pyx_k_Case_com[] = "Case_com";
static char __pyx_k_Case_dat[] = "Case_dat";
static char __pyx_k_Case_del[] = "Case_del";
static char __pyx_k_Case_dis[] = "Case_dis";
static char __pyx_k_Case_ela[] = "Case_ela";
static char __pyx_k_Case_ess[] = "Case_ess";
static char __pyx_k_Case_gen[] = "Case_gen";
static char __pyx_k_Case_ill[] = "Case_ill";
static char __pyx_k_Case_ine[] = "Case_ine";
static char __pyx_k_Case_ins[] = "Case_ins";
static char __pyx_k_Case_lat[] = "Case_lat";
static char __pyx_k_Case_loc[] = "Case_loc";
static char __pyx_k_Case_nom[] = "Case_nom";
static char __pyx_k_Case_par[] = "Case_par";
static char __pyx_k_Case_sub[] = "Case_sub";
static char __pyx_k_Case_sup[] = "Case_sup";
static char __pyx_k_Case_tem[] = "Case_tem";
static char __pyx_k_Case_ter[] = "Case_ter";
static char __pyx_k_Case_tra[] = "Case_tra";
static char __pyx_k_Case_voc[] = "Case_voc";
static char __pyx_k_Echo_ech[] = "Echo_ech ";
static char __pyx_k_Echo_rdp[] = "Echo_rdp ";
static char __pyx_k_Hyph_yes[] = "Hyph_yes ";
static char __pyx_k_Mood_cnd[] = "Mood_cnd";
static char __pyx_k_Mood_imp[] = "Mood_imp";
static char __pyx_k_Mood_ind[] = "Mood_ind";
static char __pyx_k_Mood_opt[] = "Mood_opt";
static char __pyx_k_Mood_pot[] = "Mood_pot";
static char __pyx_k_Mood_sub[] = "Mood_sub";
static char __pyx_k_Poss_yes[] = "Poss_yes";
static char __pyx_k_orth_str[] = "orth_str";
static char __pyx_k_univ_pos[] = "univ_pos";
static char __pyx_k_Style_yes[] = "Style_yes ";
static char __pyx_k_Tense_fut[] = "Tense_fut";
static char __pyx_k_Tense_imp[] = "Tense_imp";
static char __pyx_k_Voice_act[] = "Voice_act";
static char __pyx_k_Voice_cau[] = "Voice_cau";
static char __pyx_k_Voice_int[] = "Voice_int ";
static char __pyx_k_Voice_mid[] = "Voice_mid ";
static char __pyx_k_enumerate[] = "enumerate";
static char __pyx_k_lemmatize[] = "lemmatize";
static char __pyx_k_AdvType_ex[] = "AdvType_ex";
static char __pyx_k_Aspect_imp[] = "Aspect_imp";
static char __pyx_k_Aspect_mod[] = "Aspect_mod";
static char __pyx_k_Degree_abs[] = "Degree_abs";
static char __pyx_k_Degree_cmp[] = "Degree_cmp";
static char __pyx_k_Degree_com[] = "Degree_com";
static char __pyx_k_Degree_dim[] = "Degree_dim ";
static char __pyx_k_Degree_pos[] = "Degree_pos";
static char __pyx_k_Degree_sup[] = "Degree_sup";
static char __pyx_k_Gender_com[] = "Gender_com";
static char __pyx_k_Gender_fem[] = "Gender_fem";
static char __pyx_k_Number_com[] = "Number_com";
static char __pyx_k_Person_one[] = "Person_one";
static char __pyx_k_Person_two[] = "Person_two";
static char __pyx_k_Polite_inf[] = "Polite_inf ";
static char __pyx_k_Polite_pol[] = "Polite_pol ";
static char __pyx_k_Prefix_yes[] = "Prefix_yes ";
static char __pyx_k_Reflex_yes[] = "Reflex_yes";
static char __pyx_k_Style_arch[] = "Style_arch ";
static char __pyx_k_Style_coll[] = "Style_coll ";
static char __pyx_k_Style_derg[] = "Style_derg ";
static char __pyx_k_Style_expr[] = "Style_expr ";
static char __pyx_k_Style_norm[] = "Style_norm ";
static char __pyx_k_Style_poet[] = "Style_poet ";
static char __pyx_k_Style_rare[] = "Style_rare ";
static char __pyx_k_Style_sing[] = "Style_sing ";
static char __pyx_k_Style_vrnc[] = "Style_vrnc ";
static char __pyx_k_Style_vulg[] = "Style_vulg ";
static char __pyx_k_Tense_past[] = "Tense_past";
static char __pyx_k_Tense_pres[] = "Tense_pres";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_Voice_pass[] = "Voice_pass";
static char __pyx_k_lemmatizer[] = "lemmatizer";
static char __pyx_k_morphology[] = "morphology";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_AdpType_voc[] = "AdpType_voc ";
static char __pyx_k_AdvType_cau[] = "AdvType_cau";
static char __pyx_k_AdvType_deg[] = "AdvType_deg";
static char __pyx_k_AdvType_loc[] = "AdvType_loc";
static char __pyx_k_AdvType_man[] = "AdvType_man";
static char __pyx_k_AdvType_mod[] = "AdvType_mod";
static char __pyx_k_AdvType_sta[] = "AdvType_sta";
static char __pyx_k_AdvType_tim[] = "AdvType_tim";
static char __pyx_k_Aspect_freq[] = "Aspect_freq";
static char __pyx_k_Aspect_none[] = "Aspect_none";
static char __pyx_k_Aspect_perf[] = "Aspect_perf";
static char __pyx_k_Degree_comp[] = "Degree_comp";
static char __pyx_k_Degree_none[] = "Degree_none";
static char __pyx_k_Foreign_yes[] = "Foreign_yes ";
static char __pyx_k_Gender_masc[] = "Gender_masc";
static char __pyx_k_Gender_neut[] = "Gender_neut";
static char __pyx_k_InfForm_one[] = "InfForm_one ";
static char __pyx_k_InfForm_two[] = "InfForm_two ";
static char __pyx_k_NumType_gen[] = "NumType_gen";
static char __pyx_k_NumType_ord[] = "NumType_ord";
static char __pyx_k_Number_dual[] = "Number_dual";
static char __pyx_k_Number_none[] = "Number_none";
static char __pyx_k_Number_plur[] = "Number_plur";
static char __pyx_k_Number_ptan[] = "Number_ptan ";
static char __pyx_k_Number_sing[] = "Number_sing";
static char __pyx_k_Person_none[] = "Person_none";
static char __pyx_k_AdpType_circ[] = "AdpType_circ ";
static char __pyx_k_AdpType_post[] = "AdpType_post ";
static char __pyx_k_AdpType_prep[] = "AdpType_prep ";
static char __pyx_k_Animacy_anim[] = "Animacy_anim";
static char __pyx_k_Animacy_inam[] = "Animacy_inam";
static char __pyx_k_Definite_def[] = "Definite_def";
static char __pyx_k_Definite_ind[] = "Definite_ind";
static char __pyx_k_Definite_red[] = "Definite_red";
static char __pyx_k_Definite_two[] = "Definite_two";
static char __pyx_k_NameType_com[] = "NameType_com ";
static char __pyx_k_NameType_geo[] = "NameType_geo ";
static char __pyx_k_NameType_giv[] = "NameType_giv ";
static char __pyx_k_NameType_nat[] = "NameType_nat ";
static char __pyx_k_NameType_oth[] = "NameType_oth ";
static char __pyx_k_NameType_pro[] = "NameType_pro ";
static char __pyx_k_NameType_prs[] = "NameType_prs ";
static char __pyx_k_NameType_sur[] = "NameType_sur ";
static char __pyx_k_Negative_neg[] = "Negative_neg";
static char __pyx_k_Negative_pos[] = "Negative_pos";
static char __pyx_k_Negative_yes[] = "Negative_yes";
static char __pyx_k_NounType_com[] = "NounType_com ";
static char __pyx_k_NumForm_word[] = "NumForm_word ";
static char __pyx_k_NumType_card[] = "NumType_card";
static char __pyx_k_NumType_dist[] = "NumType_dist";
static char __pyx_k_NumType_frac[] = "NumType_frac";
static char __pyx_k_NumType_mult[] = "NumType_mult";
static char __pyx_k_NumType_none[] = "NumType_none";
static char __pyx_k_NumType_sets[] = "NumType_sets";
static char __pyx_k_NumValue_one[] = "NumValue_one ";
static char __pyx_k_NumValue_two[] = "NumValue_two ";
static char __pyx_k_Number_count[] = "Number_count ";
static char __pyx_k_PartForm_agt[] = "PartForm_agt ";
static char __pyx_k_PartForm_neg[] = "PartForm_neg ";
static char __pyx_k_PartType_emp[] = "PartType_emp ";
static char __pyx_k_PartType_inf[] = "PartType_inf ";
static char __pyx_k_PartType_mod[] = "PartType_mod ";
static char __pyx_k_PartType_res[] = "PartType_res ";
static char __pyx_k_PartType_vbp[] = "PartType_vbp ";
static char __pyx_k_Person_three[] = "Person_three";
static char __pyx_k_Polarity_neg[] = "Polarity_neg";
static char __pyx_k_Polarity_pos[] = "Polarity_pos";
static char __pyx_k_PrepCase_npr[] = "PrepCase_npr ";
static char __pyx_k_PrepCase_pre[] = "PrepCase_pre ";
static char __pyx_k_PronType_art[] = "PronType_art";
static char __pyx_k_PronType_dem[] = "PronType_dem";
static char __pyx_k_PronType_exc[] = "PronType_exc ";
static char __pyx_k_PronType_ind[] = "PronType_ind";
static char __pyx_k_PronType_int[] = "PronType_int";
static char __pyx_k_PronType_neg[] = "PronType_neg";
static char __pyx_k_PronType_prs[] = "PronType_prs";
static char __pyx_k_PronType_rcp[] = "PronType_rcp";
static char __pyx_k_PronType_rel[] = "PronType_rel";
static char __pyx_k_PronType_tot[] = "PronType_tot";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_VerbForm_fin[] = "VerbForm_fin";
static char __pyx_k_VerbForm_gdv[] = "VerbForm_gdv ";
static char __pyx_k_VerbForm_ger[] = "VerbForm_ger";
static char __pyx_k_VerbForm_inf[] = "VerbForm_inf";
static char __pyx_k_VerbForm_sup[] = "VerbForm_sup";
static char __pyx_k_VerbType_aux[] = "VerbType_aux ";
static char __pyx_k_VerbType_cop[] = "VerbType_cop ";
static char __pyx_k_VerbType_mod[] = "VerbType_mod ";
static char __pyx_k_intify_attrs[] = "intify_attrs";
static char __pyx_k_string_store[] = "string_store";
static char __pyx_k_AdvType_adadj[] = "AdvType_adadj";
static char __pyx_k_ConjType_comp[] = "ConjType_comp ";
static char __pyx_k_ConjType_oper[] = "ConjType_oper ";
static char __pyx_k_Definite_cons[] = "Definite_cons";
static char __pyx_k_Derivation_ja[] = "Derivation_ja ";
static char __pyx_k_Derivation_vs[] = "Derivation_vs ";
static char __pyx_k_InfForm_three[] = "InfForm_three ";
static char __pyx_k_NounType_prop[] = "NounType_prop ";
static char __pyx_k_NumForm_digit[] = "NumForm_digit ";
static char __pyx_k_NumForm_roman[] = "NumForm_roman ";
static char __pyx_k_PartForm_past[] = "PartForm_past ";
static char __pyx_k_PartForm_pres[] = "PartForm_pres ";
static char __pyx_k_PronType_clit[] = "PronType_clit";
static char __pyx_k_PunctSide_fin[] = "PunctSide_fin ";
static char __pyx_k_PunctSide_ini[] = "PunctSide_ini ";
static char __pyx_k_VerbForm_conv[] = "VerbForm_conv";
static char __pyx_k_VerbForm_none[] = "VerbForm_none";
static char __pyx_k_VerbForm_part[] = "VerbForm_part";
static char __pyx_k_do_deprecated[] = "_do_deprecated";
static char __pyx_k_Derivation_sti[] = "Derivation_sti ";
static char __pyx_k_Derivation_ton[] = "Derivation_ton ";
static char __pyx_k_Gender_dat_fem[] = "Gender_dat_fem ";
static char __pyx_k_Gender_erg_fem[] = "Gender_erg_fem ";
static char __pyx_k_NounType_class[] = "NounType_class ";
static char __pyx_k_NumValue_three[] = "NumValue_three ";
static char __pyx_k_Person_abs_one[] = "Person_abs_one ";
static char __pyx_k_Person_abs_two[] = "Person_abs_two ";
static char __pyx_k_Person_dat_one[] = "Person_dat_one ";
static char __pyx_k_Person_dat_two[] = "Person_dat_two ";
static char __pyx_k_Person_erg_one[] = "Person_erg_one ";
static char __pyx_k_Person_erg_two[] = "Person_erg_two ";
static char __pyx_k_Polite_abs_inf[] = "Polite_abs_inf ";
static char __pyx_k_Polite_abs_pol[] = "Polite_abs_pol ";
static char __pyx_k_Polite_dat_inf[] = "Polite_dat_inf ";
static char __pyx_k_Polite_dat_pol[] = "Polite_dat_pol ";
static char __pyx_k_Polite_erg_inf[] = "Polite_erg_inf ";
static char __pyx_k_Polite_erg_pol[] = "Polite_erg_pol ";
static char __pyx_k_PunctType_brck[] = "PunctType_brck ";
static char __pyx_k_PunctType_colo[] = "PunctType_colo ";
static char __pyx_k_PunctType_comm[] = "PunctType_comm ";
static char __pyx_k_PunctType_dash[] = "PunctType_dash ";
static char __pyx_k_PunctType_excl[] = "PunctType_excl ";
static char __pyx_k_PunctType_peri[] = "PunctType_peri ";
static char __pyx_k_PunctType_qest[] = "PunctType_qest ";
static char __pyx_k_PunctType_quot[] = "PunctType_quot ";
static char __pyx_k_PunctType_semi[] = "PunctType_semi ";
static char __pyx_k_VerbForm_trans[] = "VerbForm_trans";
static char __pyx_k_VerbType_light[] = "VerbType_light ";
static char __pyx_k_AdpType_comprep[] = "AdpType_comprep ";
static char __pyx_k_Connegative_yes[] = "Connegative_yes ";
static char __pyx_k_Derivation_inen[] = "Derivation_inen ";
static char __pyx_k_Derivation_ttaa[] = "Derivation_ttaa ";
static char __pyx_k_Foreign_foreign[] = "Foreign_foreign ";
static char __pyx_k_Foreign_fscript[] = "Foreign_fscript ";
static char __pyx_k_Foreign_tscript[] = "Foreign_tscript ";
static char __pyx_k_Gender_dat_masc[] = "Gender_dat_masc ";
static char __pyx_k_Gender_erg_masc[] = "Gender_erg_masc ";
static char __pyx_k_Gender_psor_fem[] = "Gender_psor_fem ";
static char __pyx_k_Number_abs_plur[] = "Number_abs_plur ";
static char __pyx_k_Number_abs_sing[] = "Number_abs_sing ";
static char __pyx_k_Number_dat_plur[] = "Number_dat_plur ";
static char __pyx_k_Number_dat_sing[] = "Number_dat_sing ";
static char __pyx_k_Number_erg_plur[] = "Number_erg_plur ";
static char __pyx_k_Number_erg_sing[] = "Number_erg_sing ";
static char __pyx_k_Person_psor_one[] = "Person_psor_one ";
static char __pyx_k_Person_psor_two[] = "Person_psor_two ";
static char __pyx_k_normalize_props[] = "_normalize_props";
static char __pyx_k_parts_of_speech[] = "parts_of_speech";
static char __pyx_k_Derivation_minen[] = "Derivation_minen ";
static char __pyx_k_Derivation_ttain[] = "Derivation_ttain ";
static char __pyx_k_Gender_psor_masc[] = "Gender_psor_masc ";
static char __pyx_k_Gender_psor_neut[] = "Gender_psor_neut ";
static char __pyx_k_Number_psee_plur[] = "Number_psee_plur ";
static char __pyx_k_Number_psee_sing[] = "Number_psee_sing ";
static char __pyx_k_Number_psor_plur[] = "Number_psor_plur ";
static char __pyx_k_Number_psor_sing[] = "Number_psor_sing ";
static char __pyx_k_Person_abs_three[] = "Person_abs_three ";
static char __pyx_k_Person_dat_three[] = "Person_dat_three ";
static char __pyx_k_Person_erg_three[] = "Person_erg_three ";
static char __pyx_k_PronType_advPart[] = "PronType_advPart";
static char __pyx_k_PronType_default[] = "PronType_default";
static char __pyx_k_Unknown_tag_ID_s[] = "Unknown tag ID: %s";
static char __pyx_k_VerbForm_partFut[] = "VerbForm_partFut";
static char __pyx_k_add_special_case[] = "add_special_case";
static char __pyx_k_spacy_morphology[] = "spacy.morphology";
static char __pyx_k_Derivation_lainen[] = "Derivation_lainen ";
static char __pyx_k_Person_psor_three[] = "Person_psor_three ";
static char __pyx_k_VerbForm_partPast[] = "VerbForm_partPast";
static char __pyx_k_VerbForm_partPres[] = "VerbForm_partPres";
static char __pyx_k_StyleVariant_styleBound[] = "StyleVariant_styleBound ";
static char __pyx_k_StyleVariant_styleShort[] = "StyleVariant_styleShort ";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_Conflicting_morphology_exception[] = "Conflicting morphology exception for (%s, %s). Use force=True to overwrite.";
static char __pyx_k_E_Twilight_Projects_Python_Spacy[] = "E:\\Twilight\\Projects\\Python\\Spacy_Wednesday\\spaCy\\spacy\\morphology.pyx";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_u_Abbr_yes;
static PyObject *__pyx_kp_u_AdpType_circ;
static PyObject *__pyx_kp_u_AdpType_comprep;
static PyObject *__pyx_kp_u_AdpType_post;
static PyObject *__pyx_kp_u_AdpType_prep;
static PyObject *__pyx_kp_u_AdpType_voc;
static PyObject *__pyx_n_u_AdvType_adadj;
static PyObject *__pyx_n_u_AdvType_cau;
static PyObject *__pyx_n_u_AdvType_deg;
static PyObject *__pyx_n_u_AdvType_ex;
static PyObject *__pyx_n_u_AdvType_loc;
static PyObject *__pyx_n_u_AdvType_man;
static PyObject *__pyx_n_u_AdvType_mod;
static PyObject *__pyx_n_u_AdvType_sta;
static PyObject *__pyx_n_u_AdvType_tim;
static PyObject *__pyx_n_u_Animacy_anim;
static PyObject *__pyx_n_u_Animacy_inam;
static PyObject *__pyx_n_u_Aspect_freq;
static PyObject *__pyx_n_u_Aspect_imp;
static PyObject *__pyx_n_u_Aspect_mod;
static PyObject *__pyx_n_u_Aspect_none;
static PyObject *__pyx_n_u_Aspect_perf;
static PyObject *__pyx_n_u_Case_abe;
static PyObject *__pyx_n_u_Case_abl;
static PyObject *__pyx_n_u_Case_abs;
static PyObject *__pyx_n_u_Case_acc;
static PyObject *__pyx_n_u_Case_ade;
static PyObject *__pyx_n_u_Case_all;
static PyObject *__pyx_n_u_Case_cau;
static PyObject *__pyx_n_u_Case_com;
static PyObject *__pyx_n_u_Case_dat;
static PyObject *__pyx_n_u_Case_del;
static PyObject *__pyx_n_u_Case_dis;
static PyObject *__pyx_n_u_Case_ela;
static PyObject *__pyx_n_u_Case_ess;
static PyObject *__pyx_n_u_Case_gen;
static PyObject *__pyx_n_u_Case_ill;
static PyObject *__pyx_n_u_Case_ine;
static PyObject *__pyx_n_u_Case_ins;
static PyObject *__pyx_n_u_Case_lat;
static PyObject *__pyx_n_u_Case_loc;
static PyObject *__pyx_n_u_Case_nom;
static PyObject *__pyx_n_u_Case_par;
static PyObject *__pyx_n_u_Case_sub;
static PyObject *__pyx_n_u_Case_sup;
static PyObject *__pyx_n_u_Case_tem;
static PyObject *__pyx_n_u_Case_ter;
static PyObject *__pyx_n_u_Case_tra;
static PyObject *__pyx_n_u_Case_voc;
static PyObject *__pyx_kp_u_Conflicting_morphology_exception;
static PyObject *__pyx_kp_u_ConjType_comp;
static PyObject *__pyx_kp_u_ConjType_oper;
static PyObject *__pyx_kp_u_Connegative_yes;
static PyObject *__pyx_n_u_Definite_cons;
static PyObject *__pyx_n_u_Definite_def;
static PyObject *__pyx_n_u_Definite_ind;
static PyObject *__pyx_n_u_Definite_red;
static PyObject *__pyx_n_u_Definite_two;
static PyObject *__pyx_n_u_Degree_abs;
static PyObject *__pyx_n_u_Degree_cmp;
static PyObject *__pyx_n_u_Degree_com;
static PyObject *__pyx_n_u_Degree_comp;
static PyObject *__pyx_kp_u_Degree_dim;
static PyObject *__pyx_n_u_Degree_none;
static PyObject *__pyx_n_u_Degree_pos;
static PyObject *__pyx_n_u_Degree_sup;
static PyObject *__pyx_kp_u_Derivation_inen;
static PyObject *__pyx_kp_u_Derivation_ja;
static PyObject *__pyx_kp_u_Derivation_lainen;
static PyObject *__pyx_kp_u_Derivation_minen;
static PyObject *__pyx_kp_u_Derivation_sti;
static PyObject *__pyx_kp_u_Derivation_ton;
static PyObject *__pyx_kp_u_Derivation_ttaa;
static PyObject *__pyx_kp_u_Derivation_ttain;
static PyObject *__pyx_kp_u_Derivation_vs;
static PyObject *__pyx_kp_s_E_Twilight_Projects_Python_Spacy;
static PyObject *__pyx_kp_u_Echo_ech;
static PyObject *__pyx_kp_u_Echo_rdp;
static PyObject *__pyx_kp_u_Foreign_foreign;
static PyObject *__pyx_kp_u_Foreign_fscript;
static PyObject *__pyx_kp_u_Foreign_tscript;
static PyObject *__pyx_kp_u_Foreign_yes;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_u_Gender_com;
static PyObject *__pyx_kp_u_Gender_dat_fem;
static PyObject *__pyx_kp_u_Gender_dat_masc;
static PyObject *__pyx_kp_u_Gender_erg_fem;
static PyObject *__pyx_kp_u_Gender_erg_masc;
static PyObject *__pyx_n_u_Gender_fem;
static PyObject *__pyx_n_u_Gender_masc;
static PyObject *__pyx_n_u_Gender_neut;
static PyObject *__pyx_kp_u_Gender_psor_fem;
static PyObject *__pyx_kp_u_Gender_psor_masc;
static PyObject *__pyx_kp_u_Gender_psor_neut;
static PyObject *__pyx_kp_u_Hyph_yes;
static PyObject *__pyx_n_s_IDS;
static PyObject *__pyx_kp_u_InfForm_one;
static PyObject *__pyx_kp_u_InfForm_three;
static PyObject *__pyx_kp_u_InfForm_two;
static PyObject *__pyx_n_s_LEMMA;
static PyObject *__pyx_n_u_Mood_cnd;
static PyObject *__pyx_n_u_Mood_imp;
static PyObject *__pyx_n_u_Mood_ind;
static PyObject *__pyx_n_u_Mood_n;
static PyObject *__pyx_n_u_Mood_opt;
static PyObject *__pyx_n_u_Mood_pot;
static PyObject *__pyx_n_u_Mood_sub;
static PyObject *__pyx_n_s_NAMES;
static PyObject *__pyx_kp_u_NameType_com;
static PyObject *__pyx_kp_u_NameType_geo;
static PyObject *__pyx_kp_u_NameType_giv;
static PyObject *__pyx_kp_u_NameType_nat;
static PyObject *__pyx_kp_u_NameType_oth;
static PyObject *__pyx_kp_u_NameType_pro;
static PyObject *__pyx_kp_u_NameType_prs;
static PyObject *__pyx_kp_u_NameType_sur;
static PyObject *__pyx_n_u_Negative_neg;
static PyObject *__pyx_n_u_Negative_pos;
static PyObject *__pyx_n_u_Negative_yes;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_kp_u_NounType_class;
static PyObject *__pyx_kp_u_NounType_com;
static PyObject *__pyx_kp_u_NounType_prop;
static PyObject *__pyx_kp_u_NumForm_digit;
static PyObject *__pyx_kp_u_NumForm_roman;
static PyObject *__pyx_kp_u_NumForm_word;
static PyObject *__pyx_n_u_NumType_card;
static PyObject *__pyx_n_u_NumType_dist;
static PyObject *__pyx_n_u_NumType_frac;
static PyObject *__pyx_n_u_NumType_gen;
static PyObject *__pyx_n_u_NumType_mult;
static PyObject *__pyx_n_u_NumType_none;
static PyObject *__pyx_n_u_NumType_ord;
static PyObject *__pyx_n_u_NumType_sets;
static PyObject *__pyx_kp_u_NumValue_one;
static PyObject *__pyx_kp_u_NumValue_three;
static PyObject *__pyx_kp_u_NumValue_two;
static PyObject *__pyx_kp_u_Number_abs_plur;
static PyObject *__pyx_kp_u_Number_abs_sing;
static PyObject *__pyx_n_u_Number_com;
static PyObject *__pyx_kp_u_Number_count;
static PyObject *__pyx_kp_u_Number_dat_plur;
static PyObject *__pyx_kp_u_Number_dat_sing;
static PyObject *__pyx_n_u_Number_dual;
static PyObject *__pyx_kp_u_Number_erg_plur;
static PyObject *__pyx_kp_u_Number_erg_sing;
static PyObject *__pyx_n_u_Number_none;
static PyObject *__pyx_n_u_Number_plur;
static PyObject *__pyx_kp_u_Number_psee_plur;
static PyObject *__pyx_kp_u_Number_psee_sing;
static PyObject *__pyx_kp_u_Number_psor_plur;
static PyObject *__pyx_kp_u_Number_psor_sing;
static PyObject *__pyx_kp_u_Number_ptan;
static PyObject *__pyx_n_u_Number_sing;
static PyObject *__pyx_n_s_POS_IDS;
static PyObject *__pyx_kp_u_PartForm_agt;
static PyObject *__pyx_kp_u_PartForm_neg;
static PyObject *__pyx_kp_u_PartForm_past;
static PyObject *__pyx_kp_u_PartForm_pres;
static PyObject *__pyx_kp_u_PartType_emp;
static PyObject *__pyx_kp_u_PartType_inf;
static PyObject *__pyx_kp_u_PartType_mod;
static PyObject *__pyx_kp_u_PartType_res;
static PyObject *__pyx_kp_u_PartType_vbp;
static PyObject *__pyx_kp_u_Person_abs_one;
static PyObject *__pyx_kp_u_Person_abs_three;
static PyObject *__pyx_kp_u_Person_abs_two;
static PyObject *__pyx_kp_u_Person_dat_one;
static PyObject *__pyx_kp_u_Person_dat_three;
static PyObject *__pyx_kp_u_Person_dat_two;
static PyObject *__pyx_kp_u_Person_erg_one;
static PyObject *__pyx_kp_u_Person_erg_three;
static PyObject *__pyx_kp_u_Person_erg_two;
static PyObject *__pyx_n_u_Person_none;
static PyObject *__pyx_n_u_Person_one;
static PyObject *__pyx_kp_u_Person_psor_one;
static PyObject *__pyx_kp_u_Person_psor_three;
static PyObject *__pyx_kp_u_Person_psor_two;
static PyObject *__pyx_n_u_Person_three;
static PyObject *__pyx_n_u_Person_two;
static PyObject *__pyx_n_u_Polarity_neg;
static PyObject *__pyx_n_u_Polarity_pos;
static PyObject *__pyx_kp_u_Polite_abs_inf;
static PyObject *__pyx_kp_u_Polite_abs_pol;
static PyObject *__pyx_kp_u_Polite_dat_inf;
static PyObject *__pyx_kp_u_Polite_dat_pol;
static PyObject *__pyx_kp_u_Polite_erg_inf;
static PyObject *__pyx_kp_u_Polite_erg_pol;
static PyObject *__pyx_kp_u_Polite_inf;
static PyObject *__pyx_kp_u_Polite_pol;
static PyObject *__pyx_n_u_Poss_yes;
static PyObject *__pyx_kp_u_Prefix_yes;
static PyObject *__pyx_kp_u_PrepCase_npr;
static PyObject *__pyx_kp_u_PrepCase_pre;
static PyObject *__pyx_n_u_PronType_advPart;
static PyObject *__pyx_n_u_PronType_art;
static PyObject *__pyx_n_u_PronType_clit;
static PyObject *__pyx_n_u_PronType_default;
static PyObject *__pyx_n_u_PronType_dem;
static PyObject *__pyx_kp_u_PronType_exc;
static PyObject *__pyx_n_u_PronType_ind;
static PyObject *__pyx_n_u_PronType_int;
static PyObject *__pyx_n_u_PronType_neg;
static PyObject *__pyx_n_u_PronType_prs;
static PyObject *__pyx_n_u_PronType_rcp;
static PyObject *__pyx_n_u_PronType_rel;
static PyObject *__pyx_n_u_PronType_tot;
static PyObject *__pyx_kp_u_PunctSide_fin;
static PyObject *__pyx_kp_u_PunctSide_ini;
static PyObject *__pyx_kp_u_PunctType_brck;
static PyObject *__pyx_kp_u_PunctType_colo;
static PyObject *__pyx_kp_u_PunctType_comm;
static PyObject *__pyx_kp_u_PunctType_dash;
static PyObject *__pyx_kp_u_PunctType_excl;
static PyObject *__pyx_kp_u_PunctType_peri;
static PyObject *__pyx_kp_u_PunctType_qest;
static PyObject *__pyx_kp_u_PunctType_quot;
static PyObject *__pyx_kp_u_PunctType_semi;
static PyObject *__pyx_n_u_Reflex_yes;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_u_SP;
static PyObject *__pyx_kp_u_StyleVariant_styleBound;
static PyObject *__pyx_kp_u_StyleVariant_styleShort;
static PyObject *__pyx_kp_u_Style_arch;
static PyObject *__pyx_kp_u_Style_coll;
static PyObject *__pyx_kp_u_Style_derg;
static PyObject *__pyx_kp_u_Style_expr;
static PyObject *__pyx_kp_u_Style_norm;
static PyObject *__pyx_kp_u_Style_poet;
static PyObject *__pyx_kp_u_Style_rare;
static PyObject *__pyx_kp_u_Style_sing;
static PyObject *__pyx_kp_u_Style_vrnc;
static PyObject *__pyx_kp_u_Style_vulg;
static PyObject *__pyx_kp_u_Style_yes;
static PyObject *__pyx_n_u_Tense_fut;
static PyObject *__pyx_n_u_Tense_imp;
static PyObject *__pyx_n_u_Tense_past;
static PyObject *__pyx_n_u_Tense_pres;
static PyObject *__pyx_kp_u_Unknown_tag_ID_s;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_u_VerbForm_conv;
static PyObject *__pyx_n_u_VerbForm_fin;
static PyObject *__pyx_kp_u_VerbForm_gdv;
static PyObject *__pyx_n_u_VerbForm_ger;
static PyObject *__pyx_n_u_VerbForm_inf;
static PyObject *__pyx_n_u_VerbForm_none;
static PyObject *__pyx_n_u_VerbForm_part;
static PyObject *__pyx_n_u_VerbForm_partFut;
static PyObject *__pyx_n_u_VerbForm_partPast;
static PyObject *__pyx_n_u_VerbForm_partPres;
static PyObject *__pyx_n_u_VerbForm_sup;
static PyObject *__pyx_n_u_VerbForm_trans;
static PyObject *__pyx_kp_u_VerbType_aux;
static PyObject *__pyx_kp_u_VerbType_cop;
static PyObject *__pyx_kp_u_VerbType_light;
static PyObject *__pyx_kp_u_VerbType_mod;
static PyObject *__pyx_n_u_Voice_act;
static PyObject *__pyx_n_u_Voice_cau;
static PyObject *__pyx_kp_u_Voice_int;
static PyObject *__pyx_kp_u_Voice_mid;
static PyObject *__pyx_n_u_Voice_pass;
static PyObject *__pyx_n_s_add_special_case;
static PyObject *__pyx_n_s_attrs;
static PyObject *__pyx_n_s_do_deprecated;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_force;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_intify_attrs;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_lambda;
static PyObject *__pyx_n_s_lemmatize;
static PyObject *__pyx_n_s_lemmatizer;
static PyObject *__pyx_n_s_lower;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_morphology;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_normalize_props;
static PyObject *__pyx_n_s_orth;
static PyObject *__pyx_n_s_orth_str;
static PyObject *__pyx_n_s_out;
static PyObject *__pyx_n_s_parts_of_speech;
static PyObject *__pyx_n_u_pos;
static PyObject *__pyx_n_s_props;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_sorted;
static PyObject *__pyx_n_s_spacy_morphology;
static PyObject *__pyx_n_s_string_store;
static PyObject *__pyx_n_s_tag_map;
static PyObject *__pyx_n_s_tag_str;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_univ_pos;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_upper;
static PyObject *__pyx_n_u_upper;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_lambda_funcdef_5spacy_10morphology_lambda(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology__normalize_props(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_props); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology___init__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_obj_5spacy_7strings_StringStore *__pyx_v_string_store, PyObject *__pyx_v_tag_map, PyObject *__pyx_v_lemmatizer); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_2__reduce__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_4add_special_case(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_tag_str, PyObject *__pyx_v_orth_str, PyObject *__pyx_v_attrs, PyObject *__pyx_v_force); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_6load_morph_exceptions(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_exc); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_8lemmatize(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __pyx_v_univ_pos, __pyx_t_5spacy_8typedefs_attr_t __pyx_v_orth, PyObject *__pyx_v_morphology); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_3mem___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_7strings___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_7tag_map___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_6n_tags___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_13reverse_index___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_9tag_names___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_5spacy_10morphology_Morphology(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_items = {0, &__pyx_n_s_items, 0, 0, 0};
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_codeobj__8;

/* "spacy\morphology.pyx":407
 * 
 * 
 * NAMES = [key for key, value in sorted(IDS.items(), key=lambda item: item[1])]             # <<<<<<<<<<<<<<
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_2lambda(PyObject *__pyx_self, PyObject *__pyx_v_item); /*proto*/
static PyMethodDef __pyx_mdef_5spacy_10morphology_2lambda = {"lambda", (PyCFunction)__pyx_pw_5spacy_10morphology_2lambda, METH_O, 0};
static PyObject *__pyx_pw_5spacy_10morphology_2lambda(PyObject *__pyx_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_5spacy_10morphology_lambda(__pyx_self, ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_5spacy_10morphology_lambda(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_item, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("spacy.morphology.lambda", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":14
 * 
 * 
 * def _normalize_props(props):             # <<<<<<<<<<<<<<
 *     """
 *     Transform deprecated string keys to correct names.
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_1_normalize_props(PyObject *__pyx_self, PyObject *__pyx_v_props); /*proto*/
static char __pyx_doc_5spacy_10morphology__normalize_props[] = "\n    Transform deprecated string keys to correct names.\n    ";
static PyMethodDef __pyx_mdef_5spacy_10morphology_1_normalize_props = {"_normalize_props", (PyCFunction)__pyx_pw_5spacy_10morphology_1_normalize_props, METH_O, __pyx_doc_5spacy_10morphology__normalize_props};
static PyObject *__pyx_pw_5spacy_10morphology_1_normalize_props(PyObject *__pyx_self, PyObject *__pyx_v_props) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_normalize_props (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology__normalize_props(__pyx_self, ((PyObject *)__pyx_v_props));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology__normalize_props(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_props) {
  PyObject *__pyx_v_out = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_normalize_props", 0);

  /* "spacy\morphology.pyx":18
 *     Transform deprecated string keys to correct names.
 *     """
 *     out = {}             # <<<<<<<<<<<<<<
 *     for key, value in props.items():
 *         if key == POS:
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":19
 *     """
 *     out = {}
 *     for key, value in props.items():             # <<<<<<<<<<<<<<
 *         if key == POS:
 *             if hasattr(value, 'upper'):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_props, __pyx_n_s_items); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "spacy\morphology.pyx":20
 *     out = {}
 *     for key, value in props.items():
 *         if key == POS:             # <<<<<<<<<<<<<<
 *             if hasattr(value, 'upper'):
 *                 value = value.upper()
 */
    __pyx_t_1 = __Pyx_PyInt_From_enum____pyx_t_5spacy_5attrs_attr_id_t(__pyx_e_5spacy_5attrs_POS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyObject_RichCompare(__pyx_v_key, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "spacy\morphology.pyx":21
 *     for key, value in props.items():
 *         if key == POS:
 *             if hasattr(value, 'upper'):             # <<<<<<<<<<<<<<
 *                 value = value.upper()
 *             if value in POS_IDS:
 */
      __pyx_t_9 = PyObject_HasAttr(__pyx_v_value, __pyx_n_u_upper); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_10 = (__pyx_t_9 != 0);
      if (__pyx_t_10) {

        /* "spacy\morphology.pyx":22
 *         if key == POS:
 *             if hasattr(value, 'upper'):
 *                 value = value.upper()             # <<<<<<<<<<<<<<
 *             if value in POS_IDS:
 *                 value = POS_IDS[value]
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_upper); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        if (__pyx_t_3) {
          __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else {
          __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "spacy\morphology.pyx":21
 *     for key, value in props.items():
 *         if key == POS:
 *             if hasattr(value, 'upper'):             # <<<<<<<<<<<<<<
 *                 value = value.upper()
 *             if value in POS_IDS:
 */
      }

      /* "spacy\morphology.pyx":23
 *             if hasattr(value, 'upper'):
 *                 value = value.upper()
 *             if value in POS_IDS:             # <<<<<<<<<<<<<<
 *                 value = POS_IDS[value]
 *             out[key] = value
 */
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_POS_IDS); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = (__Pyx_PySequence_ContainsTF(__pyx_v_value, __pyx_t_6, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = (__pyx_t_10 != 0);
      if (__pyx_t_9) {

        /* "spacy\morphology.pyx":24
 *                 value = value.upper()
 *             if value in POS_IDS:
 *                 value = POS_IDS[value]             # <<<<<<<<<<<<<<
 *             out[key] = value
 *         elif isinstance(key, int):
 */
        __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_POS_IDS); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_1 = PyObject_GetItem(__pyx_t_6, __pyx_v_value); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "spacy\morphology.pyx":23
 *             if hasattr(value, 'upper'):
 *                 value = value.upper()
 *             if value in POS_IDS:             # <<<<<<<<<<<<<<
 *                 value = POS_IDS[value]
 *             out[key] = value
 */
      }

      /* "spacy\morphology.pyx":25
 *             if value in POS_IDS:
 *                 value = POS_IDS[value]
 *             out[key] = value             # <<<<<<<<<<<<<<
 *         elif isinstance(key, int):
 *             out[key] = value
 */
      if (unlikely(PyDict_SetItem(__pyx_v_out, __pyx_v_key, __pyx_v_value) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "spacy\morphology.pyx":20
 *     out = {}
 *     for key, value in props.items():
 *         if key == POS:             # <<<<<<<<<<<<<<
 *             if hasattr(value, 'upper'):
 *                 value = value.upper()
 */
      goto __pyx_L7;
    }

    /* "spacy\morphology.pyx":26
 *                 value = POS_IDS[value]
 *             out[key] = value
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             out[key] = value
 *         elif key.lower() == 'pos':
 */
    __pyx_t_9 = PyInt_Check(__pyx_v_key); 
    __pyx_t_10 = (__pyx_t_9 != 0);
    if (__pyx_t_10) {

      /* "spacy\morphology.pyx":27
 *             out[key] = value
 *         elif isinstance(key, int):
 *             out[key] = value             # <<<<<<<<<<<<<<
 *         elif key.lower() == 'pos':
 *             out[POS] = POS_IDS[value.upper()]
 */
      if (unlikely(PyDict_SetItem(__pyx_v_out, __pyx_v_key, __pyx_v_value) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "spacy\morphology.pyx":26
 *                 value = POS_IDS[value]
 *             out[key] = value
 *         elif isinstance(key, int):             # <<<<<<<<<<<<<<
 *             out[key] = value
 *         elif key.lower() == 'pos':
 */
      goto __pyx_L7;
    }

    /* "spacy\morphology.pyx":28
 *         elif isinstance(key, int):
 *             out[key] = value
 *         elif key.lower() == 'pos':             # <<<<<<<<<<<<<<
 *             out[POS] = POS_IDS[value.upper()]
 *         else:
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_key, __pyx_n_s_lower); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_pos, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {

      /* "spacy\morphology.pyx":29
 *             out[key] = value
 *         elif key.lower() == 'pos':
 *             out[POS] = POS_IDS[value.upper()]             # <<<<<<<<<<<<<<
 *         else:
 *             out[key] = value
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_POS_IDS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_upper); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_7) {
        __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else {
        __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_t_6); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_5spacy_5attrs_attr_id_t(__pyx_e_5spacy_5attrs_POS); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(PyDict_SetItem(__pyx_v_out, __pyx_t_6, __pyx_t_3) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "spacy\morphology.pyx":28
 *         elif isinstance(key, int):
 *             out[key] = value
 *         elif key.lower() == 'pos':             # <<<<<<<<<<<<<<
 *             out[POS] = POS_IDS[value.upper()]
 *         else:
 */
      goto __pyx_L7;
    }

    /* "spacy\morphology.pyx":31
 *             out[POS] = POS_IDS[value.upper()]
 *         else:
 *             out[key] = value             # <<<<<<<<<<<<<<
 *     return out
 * 
 */
    /*else*/ {
      if (unlikely(PyDict_SetItem(__pyx_v_out, __pyx_v_key, __pyx_v_value) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L7:;

    /* "spacy\morphology.pyx":19
 *     """
 *     out = {}
 *     for key, value in props.items():             # <<<<<<<<<<<<<<
 *         if key == POS:
 *             if hasattr(value, 'upper'):
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy\morphology.pyx":32
 *         else:
 *             out[key] = value
 *     return out             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "spacy\morphology.pyx":14
 * 
 * 
 * def _normalize_props(props):             # <<<<<<<<<<<<<<
 *     """
 *     Transform deprecated string keys to correct names.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("spacy.morphology._normalize_props", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":36
 * 
 * cdef class Morphology:
 *     def __init__(self, StringStore string_store, tag_map, lemmatizer):             # <<<<<<<<<<<<<<
 *         self.mem = Pool()
 *         self.strings = string_store
 */

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5spacy_7strings_StringStore *__pyx_v_string_store = 0;
  PyObject *__pyx_v_tag_map = 0;
  PyObject *__pyx_v_lemmatizer = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_string_store,&__pyx_n_s_tag_map,&__pyx_n_s_lemmatizer,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_string_store)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tag_map)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lemmatizer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_string_store = ((struct __pyx_obj_5spacy_7strings_StringStore *)values[0]);
    __pyx_v_tag_map = values[1];
    __pyx_v_lemmatizer = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("spacy.morphology.Morphology.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_string_store), __pyx_ptype_5spacy_7strings_StringStore, 1, "string_store", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology___init__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), __pyx_v_string_store, __pyx_v_tag_map, __pyx_v_lemmatizer);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology___init__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_obj_5spacy_7strings_StringStore *__pyx_v_string_store, PyObject *__pyx_v_tag_map, PyObject *__pyx_v_lemmatizer) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_tag_str = NULL;
  PyObject *__pyx_v_attrs = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  size_t __pyx_t_7;
  void *__pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  __pyx_t_5spacy_8typedefs_attr_t __pyx_t_14;
  enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "spacy\morphology.pyx":37
 * cdef class Morphology:
 *     def __init__(self, StringStore string_store, tag_map, lemmatizer):
 *         self.mem = Pool()             # <<<<<<<<<<<<<<
 *         self.strings = string_store
 *         self.tag_map = {}
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5cymem_5cymem_Pool), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mem);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->mem));
  __pyx_v_self->mem = ((struct __pyx_obj_5cymem_5cymem_Pool *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":38
 *     def __init__(self, StringStore string_store, tag_map, lemmatizer):
 *         self.mem = Pool()
 *         self.strings = string_store             # <<<<<<<<<<<<<<
 *         self.tag_map = {}
 *         self.lemmatizer = lemmatizer
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_string_store));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_string_store));
  __Pyx_GOTREF(__pyx_v_self->strings);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->strings));
  __pyx_v_self->strings = __pyx_v_string_store;

  /* "spacy\morphology.pyx":39
 *         self.mem = Pool()
 *         self.strings = string_store
 *         self.tag_map = {}             # <<<<<<<<<<<<<<
 *         self.lemmatizer = lemmatizer
 *         self.n_tags = len(tag_map) + 1
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->tag_map);
  __Pyx_DECREF(__pyx_v_self->tag_map);
  __pyx_v_self->tag_map = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":40
 *         self.strings = string_store
 *         self.tag_map = {}
 *         self.lemmatizer = lemmatizer             # <<<<<<<<<<<<<<
 *         self.n_tags = len(tag_map) + 1
 *         self.tag_names = tuple(sorted(tag_map.keys()))
 */
  __Pyx_INCREF(__pyx_v_lemmatizer);
  __Pyx_GIVEREF(__pyx_v_lemmatizer);
  __Pyx_GOTREF(__pyx_v_self->lemmatizer);
  __Pyx_DECREF(__pyx_v_self->lemmatizer);
  __pyx_v_self->lemmatizer = __pyx_v_lemmatizer;

  /* "spacy\morphology.pyx":41
 *         self.tag_map = {}
 *         self.lemmatizer = lemmatizer
 *         self.n_tags = len(tag_map) + 1             # <<<<<<<<<<<<<<
 *         self.tag_names = tuple(sorted(tag_map.keys()))
 *         self.reverse_index = {}
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_tag_map); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = PyInt_FromSsize_t((__pyx_t_2 + 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->n_tags);
  __Pyx_DECREF(__pyx_v_self->n_tags);
  __pyx_v_self->n_tags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":42
 *         self.lemmatizer = lemmatizer
 *         self.n_tags = len(tag_map) + 1
 *         self.tag_names = tuple(sorted(tag_map.keys()))             # <<<<<<<<<<<<<<
 *         self.reverse_index = {}
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_tag_map, __pyx_n_s_keys); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_6 = PyList_Sort(__pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_4 = PyList_AsTuple(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->tag_names);
  __Pyx_DECREF(__pyx_v_self->tag_names);
  __pyx_v_self->tag_names = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":43
 *         self.n_tags = len(tag_map) + 1
 *         self.tag_names = tuple(sorted(tag_map.keys()))
 *         self.reverse_index = {}             # <<<<<<<<<<<<<<
 * 
 *         self.rich_tags = <RichTagC*>self.mem.alloc(self.n_tags, sizeof(RichTagC))
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->reverse_index);
  __Pyx_DECREF(__pyx_v_self->reverse_index);
  __pyx_v_self->reverse_index = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":45
 *         self.reverse_index = {}
 * 
 *         self.rich_tags = <RichTagC*>self.mem.alloc(self.n_tags, sizeof(RichTagC))             # <<<<<<<<<<<<<<
 *         for i, (tag_str, attrs) in enumerate(sorted(tag_map.items())):
 *             attrs = _normalize_props(attrs)
 */
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_self->n_tags); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_8 = ((struct __pyx_vtabstruct_5cymem_5cymem_Pool *)__pyx_v_self->mem->__pyx_vtab)->alloc(__pyx_v_self->mem, __pyx_t_7, (sizeof(struct __pyx_t_5spacy_10morphology_RichTagC))); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->rich_tags = ((struct __pyx_t_5spacy_10morphology_RichTagC *)__pyx_t_8);

  /* "spacy\morphology.pyx":46
 * 
 *         self.rich_tags = <RichTagC*>self.mem.alloc(self.n_tags, sizeof(RichTagC))
 *         for i, (tag_str, attrs) in enumerate(sorted(tag_map.items())):             # <<<<<<<<<<<<<<
 *             attrs = _normalize_props(attrs)
 *             self.tag_map[tag_str] = dict(attrs)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_4 = __pyx_int_0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_tag_map, __pyx_n_s_items); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_9) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_9); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_6 = PyList_Sort(__pyx_t_1); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_t_1; __Pyx_INCREF(__pyx_t_5); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_5)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_9 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_9 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_9);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_10 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_9 = __pyx_t_11(__pyx_t_10); if (unlikely(!__pyx_t_9)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_9);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_11(__pyx_t_10), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_11 = NULL;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_11 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_tag_str, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_attrs, __pyx_t_9);
    __pyx_t_9 = 0;
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "spacy\morphology.pyx":47
 *         self.rich_tags = <RichTagC*>self.mem.alloc(self.n_tags, sizeof(RichTagC))
 *         for i, (tag_str, attrs) in enumerate(sorted(tag_map.items())):
 *             attrs = _normalize_props(attrs)             # <<<<<<<<<<<<<<
 *             self.tag_map[tag_str] = dict(attrs)
 *             attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 */
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_normalize_props); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_attrs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_10 = PyTuple_New(1+1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_INCREF(__pyx_v_attrs);
      __Pyx_GIVEREF(__pyx_v_attrs);
      PyTuple_SET_ITEM(__pyx_t_10, 0+1, __pyx_v_attrs);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF_SET(__pyx_v_attrs, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "spacy\morphology.pyx":48
 *         for i, (tag_str, attrs) in enumerate(sorted(tag_map.items())):
 *             attrs = _normalize_props(attrs)
 *             self.tag_map[tag_str] = dict(attrs)             # <<<<<<<<<<<<<<
 *             attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *             self.rich_tags[i].id = i
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_attrs);
    __Pyx_GIVEREF(__pyx_v_attrs);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_attrs);
    __pyx_t_9 = __Pyx_PyObject_Call(((PyObject *)(&PyDict_Type)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_self->tag_map, __pyx_v_tag_str, __pyx_t_9) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "spacy\morphology.pyx":49
 *             attrs = _normalize_props(attrs)
 *             self.tag_map[tag_str] = dict(attrs)
 *             attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)             # <<<<<<<<<<<<<<
 *             self.rich_tags[i].id = i
 *             self.rich_tags[i].name = self.strings[tag_str]
 */
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_intify_attrs); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_attrs);
    __Pyx_GIVEREF(__pyx_v_attrs);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_attrs);
    __Pyx_INCREF(((PyObject *)__pyx_v_self->strings));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self->strings));
    PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self->strings));
    __pyx_t_10 = PyDict_New(); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_do_deprecated, Py_True) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_1, __pyx_t_10); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_attrs, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "spacy\morphology.pyx":50
 *             self.tag_map[tag_str] = dict(attrs)
 *             attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *             self.rich_tags[i].id = i             # <<<<<<<<<<<<<<
 *             self.rich_tags[i].name = self.strings[tag_str]
 *             self.rich_tags[i].morph = 0
 */
    __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_v_i); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_self->rich_tags[__pyx_t_13]).id = __pyx_t_12;

    /* "spacy\morphology.pyx":51
 *             attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *             self.rich_tags[i].id = i
 *             self.rich_tags[i].name = self.strings[tag_str]             # <<<<<<<<<<<<<<
 *             self.rich_tags[i].morph = 0
 *             self.rich_tags[i].pos = attrs[POS]
 */
    __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_v_tag_str); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_14 = __Pyx_PyInt_As_int32_t(__pyx_t_3); if (unlikely((__pyx_t_14 == (int32_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_self->rich_tags[__pyx_t_13]).name = __pyx_t_14;

    /* "spacy\morphology.pyx":52
 *             self.rich_tags[i].id = i
 *             self.rich_tags[i].name = self.strings[tag_str]
 *             self.rich_tags[i].morph = 0             # <<<<<<<<<<<<<<
 *             self.rich_tags[i].pos = attrs[POS]
 *             self.reverse_index[self.rich_tags[i].name] = i
 */
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_self->rich_tags[__pyx_t_13]).morph = 0;

    /* "spacy\morphology.pyx":53
 *             self.rich_tags[i].name = self.strings[tag_str]
 *             self.rich_tags[i].morph = 0
 *             self.rich_tags[i].pos = attrs[POS]             # <<<<<<<<<<<<<<
 *             self.reverse_index[self.rich_tags[i].name] = i
 *         self._cache = PreshMapArray(self.n_tags)
 */
    __pyx_t_3 = __Pyx_PyInt_From_enum____pyx_t_5spacy_5attrs_attr_id_t(__pyx_e_5spacy_5attrs_POS); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = PyObject_GetItem(__pyx_v_attrs, __pyx_t_3); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_15 = ((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)__Pyx_PyInt_As_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(__pyx_t_10)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_self->rich_tags[__pyx_t_13]).pos = __pyx_t_15;

    /* "spacy\morphology.pyx":54
 *             self.rich_tags[i].morph = 0
 *             self.rich_tags[i].pos = attrs[POS]
 *             self.reverse_index[self.rich_tags[i].name] = i             # <<<<<<<<<<<<<<
 *         self._cache = PreshMapArray(self.n_tags)
 * 
 */
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (unlikely(__Pyx_SetItemInt(__pyx_v_self->reverse_index, (__pyx_v_self->rich_tags[__pyx_t_13]).name, __pyx_v_i, __pyx_t_5spacy_8typedefs_attr_t, 1, __Pyx_PyInt_From_int32_t, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "spacy\morphology.pyx":46
 * 
 *         self.rich_tags = <RichTagC*>self.mem.alloc(self.n_tags, sizeof(RichTagC))
 *         for i, (tag_str, attrs) in enumerate(sorted(tag_map.items())):             # <<<<<<<<<<<<<<
 *             attrs = _normalize_props(attrs)
 *             self.tag_map[tag_str] = dict(attrs)
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":55
 *             self.rich_tags[i].pos = attrs[POS]
 *             self.reverse_index[self.rich_tags[i].name] = i
 *         self._cache = PreshMapArray(self.n_tags)             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->n_tags);
  __Pyx_GIVEREF(__pyx_v_self->n_tags);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_self->n_tags);
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7preshed_4maps_PreshMapArray), __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GIVEREF(__pyx_t_5);
  __Pyx_GOTREF(__pyx_v_self->_cache);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_cache));
  __pyx_v_self->_cache = ((struct __pyx_obj_7preshed_4maps_PreshMapArray *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":36
 * 
 * cdef class Morphology:
 *     def __init__(self, StringStore string_store, tag_map, lemmatizer):             # <<<<<<<<<<<<<<
 *         self.mem = Pool()
 *         self.strings = string_store
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("spacy.morphology.Morphology.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_tag_str);
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":57
 *         self._cache = PreshMapArray(self.n_tags)
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return (Morphology, (self.strings, self.tag_map, self.lemmatizer), None, None)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_3__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_3__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_2__reduce__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_2__reduce__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "spacy\morphology.pyx":58
 * 
 *     def __reduce__(self):
 *         return (Morphology, (self.strings, self.tag_map, self.lemmatizer), None, None)             # <<<<<<<<<<<<<<
 * 
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->strings));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->strings));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->strings));
  __Pyx_INCREF(__pyx_v_self->tag_map);
  __Pyx_GIVEREF(__pyx_v_self->tag_map);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_self->tag_map);
  __Pyx_INCREF(__pyx_v_self->lemmatizer);
  __Pyx_GIVEREF(__pyx_v_self->lemmatizer);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_self->lemmatizer);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5spacy_10morphology_Morphology));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_5spacy_10morphology_Morphology));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_5spacy_10morphology_Morphology));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 2, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 3, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "spacy\morphology.pyx":57
 *         self._cache = PreshMapArray(self.n_tags)
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return (Morphology, (self.strings, self.tag_map, self.lemmatizer), None, None)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("spacy.morphology.Morphology.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":60
 *         return (Morphology, (self.strings, self.tag_map, self.lemmatizer), None, None)
 * 
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:             # <<<<<<<<<<<<<<
 *         if isinstance(tag, basestring):
 *             tag_id = self.reverse_index[self.strings[tag]]
 */

static int __pyx_f_5spacy_10morphology_10Morphology_assign_tag(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_t_5spacy_7structs_TokenC *__pyx_v_token, PyObject *__pyx_v_tag) {
  PyObject *__pyx_v_tag_id = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_tag", 0);

  /* "spacy\morphology.pyx":61
 * 
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:
 *         if isinstance(tag, basestring):             # <<<<<<<<<<<<<<
 *             tag_id = self.reverse_index[self.strings[tag]]
 *         else:
 */
  __pyx_t_1 = __Pyx_PyBaseString_Check(__pyx_v_tag); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "spacy\morphology.pyx":62
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:
 *         if isinstance(tag, basestring):
 *             tag_id = self.reverse_index[self.strings[tag]]             # <<<<<<<<<<<<<<
 *         else:
 *             tag_id = self.reverse_index[tag]
 */
    __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_v_tag); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_GetItem(__pyx_v_self->reverse_index, __pyx_t_3); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_tag_id = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "spacy\morphology.pyx":61
 * 
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:
 *         if isinstance(tag, basestring):             # <<<<<<<<<<<<<<
 *             tag_id = self.reverse_index[self.strings[tag]]
 *         else:
 */
    goto __pyx_L3;
  }

  /* "spacy\morphology.pyx":64
 *             tag_id = self.reverse_index[self.strings[tag]]
 *         else:
 *             tag_id = self.reverse_index[tag]             # <<<<<<<<<<<<<<
 *         self.assign_tag_id(token, tag_id)
 * 
 */
  /*else*/ {
    __pyx_t_4 = PyObject_GetItem(__pyx_v_self->reverse_index, __pyx_v_tag); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_tag_id = __pyx_t_4;
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "spacy\morphology.pyx":65
 *         else:
 *             tag_id = self.reverse_index[tag]
 *         self.assign_tag_id(token, tag_id)             # <<<<<<<<<<<<<<
 * 
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_tag_id); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = ((struct __pyx_vtabstruct_5spacy_10morphology_Morphology *)__pyx_v_self->__pyx_vtab)->assign_tag_id(__pyx_v_self, __pyx_v_token, __pyx_t_5); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "spacy\morphology.pyx":60
 *         return (Morphology, (self.strings, self.tag_map, self.lemmatizer), None, None)
 * 
 *     cdef int assign_tag(self, TokenC* token, tag) except -1:             # <<<<<<<<<<<<<<
 *         if isinstance(tag, basestring):
 *             tag_id = self.reverse_index[self.strings[tag]]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("spacy.morphology.Morphology.assign_tag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag_id);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":67
 *         self.assign_tag_id(token, tag_id)
 * 
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:             # <<<<<<<<<<<<<<
 *         if tag_id >= self.n_tags:
 *             raise ValueError("Unknown tag ID: %s" % tag_id)
 */

static int __pyx_f_5spacy_10morphology_10Morphology_assign_tag_id(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, struct __pyx_t_5spacy_7structs_TokenC *__pyx_v_token, int __pyx_v_tag_id) {
  struct __pyx_t_5spacy_10morphology_RichTagC __pyx_v_rich_tag;
  struct __pyx_t_5spacy_10morphology_MorphAnalysisC *__pyx_v_analysis;
  PyObject *__pyx_v_tag_str = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  void *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  __pyx_t_5spacy_8typedefs_attr_t __pyx_t_14;
  enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __pyx_t_15;
  uint64_t __pyx_t_16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_tag_id", 0);

  /* "spacy\morphology.pyx":68
 * 
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:
 *         if tag_id >= self.n_tags:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unknown tag ID: %s" % tag_id)
 *         # TODO: It's pretty arbitrary to put this logic here. I guess the justification
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_tag_id); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_v_self->n_tags, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "spacy\morphology.pyx":69
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:
 *         if tag_id >= self.n_tags:
 *             raise ValueError("Unknown tag ID: %s" % tag_id)             # <<<<<<<<<<<<<<
 *         # TODO: It's pretty arbitrary to put this logic here. I guess the justification
 *         # is that this is where the specific word and the tag interact. Still,
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_tag_id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyUnicode_Format(__pyx_kp_u_Unknown_tag_ID_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "spacy\morphology.pyx":68
 * 
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:
 *         if tag_id >= self.n_tags:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unknown tag ID: %s" % tag_id)
 *         # TODO: It's pretty arbitrary to put this logic here. I guess the justification
 */
  }

  /* "spacy\morphology.pyx":75
 *         # the statistical model fails.
 *         # Related to Issue #220
 *         if Lexeme.c_check_flag(token.lex, IS_SPACE):             # <<<<<<<<<<<<<<
 *             tag_id = self.reverse_index[self.strings['SP']]
 *         rich_tag = self.rich_tags[tag_id]
 */
  __pyx_t_3 = (__pyx_f_5spacy_6lexeme_6Lexeme_c_check_flag(__pyx_v_token->lex, __pyx_e_5spacy_5attrs_IS_SPACE) != 0);
  if (__pyx_t_3) {

    /* "spacy\morphology.pyx":76
 *         # Related to Issue #220
 *         if Lexeme.c_check_flag(token.lex, IS_SPACE):
 *             tag_id = self.reverse_index[self.strings['SP']]             # <<<<<<<<<<<<<<
 *         rich_tag = self.rich_tags[tag_id]
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)
 */
    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_n_u_SP); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_v_self->reverse_index, __pyx_t_1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_tag_id = __pyx_t_4;

    /* "spacy\morphology.pyx":75
 *         # the statistical model fails.
 *         # Related to Issue #220
 *         if Lexeme.c_check_flag(token.lex, IS_SPACE):             # <<<<<<<<<<<<<<
 *             tag_id = self.reverse_index[self.strings['SP']]
 *         rich_tag = self.rich_tags[tag_id]
 */
  }

  /* "spacy\morphology.pyx":77
 *         if Lexeme.c_check_flag(token.lex, IS_SPACE):
 *             tag_id = self.reverse_index[self.strings['SP']]
 *         rich_tag = self.rich_tags[tag_id]             # <<<<<<<<<<<<<<
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)
 *         if analysis is NULL:
 */
  __pyx_v_rich_tag = (__pyx_v_self->rich_tags[__pyx_v_tag_id]);

  /* "spacy\morphology.pyx":78
 *             tag_id = self.reverse_index[self.strings['SP']]
 *         rich_tag = self.rich_tags[tag_id]
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)             # <<<<<<<<<<<<<<
 *         if analysis is NULL:
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 */
  __pyx_v_analysis = ((struct __pyx_t_5spacy_10morphology_MorphAnalysisC *)((struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *)__pyx_v_self->_cache->__pyx_vtab)->get(__pyx_v_self->_cache, __pyx_v_tag_id, __pyx_v_token->lex->orth));

  /* "spacy\morphology.pyx":79
 *         rich_tag = self.rich_tags[tag_id]
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)
 *         if analysis is NULL:             # <<<<<<<<<<<<<<
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 */
  __pyx_t_3 = ((__pyx_v_analysis == NULL) != 0);
  if (__pyx_t_3) {

    /* "spacy\morphology.pyx":80
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)
 *         if analysis is NULL:
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))             # <<<<<<<<<<<<<<
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 *             analysis.tag = rich_tag
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_5cymem_5cymem_Pool *)__pyx_v_self->mem->__pyx_vtab)->alloc(__pyx_v_self->mem, 1, (sizeof(struct __pyx_t_5spacy_10morphology_MorphAnalysisC))); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_analysis = ((struct __pyx_t_5spacy_10morphology_MorphAnalysisC *)__pyx_t_5);

    /* "spacy\morphology.pyx":81
 *         if analysis is NULL:
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *             tag_str = self.strings[self.rich_tags[tag_id].name]             # <<<<<<<<<<<<<<
 *             analysis.tag = rich_tag
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,
 */
    __pyx_t_2 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->strings), (__pyx_v_self->rich_tags[__pyx_v_tag_id]).name, __pyx_t_5spacy_8typedefs_attr_t, 1, __Pyx_PyInt_From_int32_t, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_tag_str = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "spacy\morphology.pyx":82
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 *             analysis.tag = rich_tag             # <<<<<<<<<<<<<<
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,
 *                                             self.tag_map.get(tag_str, {}))
 */
    __pyx_v_analysis->tag = __pyx_v_rich_tag;

    /* "spacy\morphology.pyx":83
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 *             analysis.tag = rich_tag
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,             # <<<<<<<<<<<<<<
 *                                             self.tag_map.get(tag_str, {}))
 *             self._cache.set(tag_id, token.lex.orth, analysis)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_lemmatize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyInt_From_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(__pyx_v_analysis->tag.pos); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_From_int32_t(__pyx_v_token->lex->orth); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);

    /* "spacy\morphology.pyx":84
 *             analysis.tag = rich_tag
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,
 *                                             self.tag_map.get(tag_str, {}))             # <<<<<<<<<<<<<<
 *             self._cache.set(tag_id, token.lex.orth, analysis)
 *         token.lemma = analysis.lemma
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->tag_map, __pyx_n_s_get); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyDict_New(); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
        __pyx_t_12 = 1;
      }
    }
    __pyx_t_13 = PyTuple_New(2+__pyx_t_12); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_13);
    if (__pyx_t_11) {
      __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_11); __pyx_t_11 = NULL;
    }
    __Pyx_INCREF(__pyx_v_tag_str);
    __Pyx_GIVEREF(__pyx_v_tag_str);
    PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_v_tag_str);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_13, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_12 = 1;
      }
    }
    __pyx_t_13 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_13);
    if (__pyx_t_9) {
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_9); __pyx_t_9 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_12, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_12, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_13, 2+__pyx_t_12, __pyx_t_8);
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_t_8 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "spacy\morphology.pyx":83
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 *             analysis.tag = rich_tag
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,             # <<<<<<<<<<<<<<
 *                                             self.tag_map.get(tag_str, {}))
 *             self._cache.set(tag_id, token.lex.orth, analysis)
 */
    __pyx_t_14 = __Pyx_PyInt_As_int32_t(__pyx_t_2); if (unlikely((__pyx_t_14 == (int32_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_analysis->lemma = __pyx_t_14;

    /* "spacy\morphology.pyx":85
 *             analysis.lemma = self.lemmatize(analysis.tag.pos, token.lex.orth,
 *                                             self.tag_map.get(tag_str, {}))
 *             self._cache.set(tag_id, token.lex.orth, analysis)             # <<<<<<<<<<<<<<
 *         token.lemma = analysis.lemma
 *         token.pos = analysis.tag.pos
 */
    ((struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *)__pyx_v_self->_cache->__pyx_vtab)->set(__pyx_v_self->_cache, __pyx_v_tag_id, __pyx_v_token->lex->orth, __pyx_v_analysis); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "spacy\morphology.pyx":79
 *         rich_tag = self.rich_tags[tag_id]
 *         analysis = <MorphAnalysisC*>self._cache.get(tag_id, token.lex.orth)
 *         if analysis is NULL:             # <<<<<<<<<<<<<<
 *             analysis = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *             tag_str = self.strings[self.rich_tags[tag_id].name]
 */
  }

  /* "spacy\morphology.pyx":86
 *                                             self.tag_map.get(tag_str, {}))
 *             self._cache.set(tag_id, token.lex.orth, analysis)
 *         token.lemma = analysis.lemma             # <<<<<<<<<<<<<<
 *         token.pos = analysis.tag.pos
 *         token.tag = analysis.tag.name
 */
  __pyx_t_14 = __pyx_v_analysis->lemma;
  __pyx_v_token->lemma = __pyx_t_14;

  /* "spacy\morphology.pyx":87
 *             self._cache.set(tag_id, token.lex.orth, analysis)
 *         token.lemma = analysis.lemma
 *         token.pos = analysis.tag.pos             # <<<<<<<<<<<<<<
 *         token.tag = analysis.tag.name
 *         token.morph = analysis.tag.morph
 */
  __pyx_t_15 = __pyx_v_analysis->tag.pos;
  __pyx_v_token->pos = __pyx_t_15;

  /* "spacy\morphology.pyx":88
 *         token.lemma = analysis.lemma
 *         token.pos = analysis.tag.pos
 *         token.tag = analysis.tag.name             # <<<<<<<<<<<<<<
 *         token.morph = analysis.tag.morph
 * 
 */
  __pyx_t_14 = __pyx_v_analysis->tag.name;
  __pyx_v_token->tag = __pyx_t_14;

  /* "spacy\morphology.pyx":89
 *         token.pos = analysis.tag.pos
 *         token.tag = analysis.tag.name
 *         token.morph = analysis.tag.morph             # <<<<<<<<<<<<<<
 * 
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:
 */
  __pyx_t_16 = __pyx_v_analysis->tag.morph;
  __pyx_v_token->morph = __pyx_t_16;

  /* "spacy\morphology.pyx":67
 *         self.assign_tag_id(token, tag_id)
 * 
 *     cdef int assign_tag_id(self, TokenC* token, int tag_id) except -1:             # <<<<<<<<<<<<<<
 *         if tag_id >= self.n_tags:
 *             raise ValueError("Unknown tag ID: %s" % tag_id)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("spacy.morphology.Morphology.assign_tag_id", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag_str);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":91
 *         token.morph = analysis.tag.morph
 * 
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if value:
 */

static int __pyx_f_5spacy_10morphology_10Morphology_assign_feature(CYTHON_UNUSED struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, uint64_t *__pyx_v_flags, enum __pyx_t_5spacy_10morphology_univ_morph_t __pyx_v_flag_id, int __pyx_v_value) {
  __pyx_t_5spacy_8typedefs_flags_t __pyx_v_one;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  long __pyx_t_2;
  __Pyx_RefNannySetupContext("assign_feature", 0);

  /* "spacy\morphology.pyx":92
 * 
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:
 *         cdef flags_t one = 1             # <<<<<<<<<<<<<<
 *         if value:
 *             flags[0] |= one << flag_id
 */
  __pyx_v_one = 1;

  /* "spacy\morphology.pyx":93
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:
 *         cdef flags_t one = 1
 *         if value:             # <<<<<<<<<<<<<<
 *             flags[0] |= one << flag_id
 *         else:
 */
  __pyx_t_1 = (__pyx_v_value != 0);
  if (__pyx_t_1) {

    /* "spacy\morphology.pyx":94
 *         cdef flags_t one = 1
 *         if value:
 *             flags[0] |= one << flag_id             # <<<<<<<<<<<<<<
 *         else:
 *             flags[0] &= ~(one << flag_id)
 */
    __pyx_t_2 = 0;
    (__pyx_v_flags[__pyx_t_2]) = ((__pyx_v_flags[__pyx_t_2]) | (__pyx_v_one << __pyx_v_flag_id));

    /* "spacy\morphology.pyx":93
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:
 *         cdef flags_t one = 1
 *         if value:             # <<<<<<<<<<<<<<
 *             flags[0] |= one << flag_id
 *         else:
 */
    goto __pyx_L3;
  }

  /* "spacy\morphology.pyx":96
 *             flags[0] |= one << flag_id
 *         else:
 *             flags[0] &= ~(one << flag_id)             # <<<<<<<<<<<<<<
 * 
 *     def add_special_case(self, unicode tag_str, unicode orth_str, attrs, force=False):
 */
  /*else*/ {
    __pyx_t_2 = 0;
    (__pyx_v_flags[__pyx_t_2]) = ((__pyx_v_flags[__pyx_t_2]) & (~(__pyx_v_one << __pyx_v_flag_id)));
  }
  __pyx_L3:;

  /* "spacy\morphology.pyx":91
 *         token.morph = analysis.tag.morph
 * 
 *     cdef int assign_feature(self, uint64_t* flags, univ_morph_t flag_id, bint value) except -1:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if value:
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":98
 *             flags[0] &= ~(one << flag_id)
 * 
 *     def add_special_case(self, unicode tag_str, unicode orth_str, attrs, force=False):             # <<<<<<<<<<<<<<
 *         """
 *         Add a special-case rule to the morphological analyser. Tokens whose
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_5add_special_case(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_5spacy_10morphology_10Morphology_4add_special_case[] = "\n        Add a special-case rule to the morphological analyser. Tokens whose\n        tag and orth match the rule will receive the specified properties.\n\n        Arguments:\n            tag (unicode): The part-of-speech tag to key the exception.\n            orth (unicode): The word-form to key the exception.\n        ";
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_5add_special_case(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_tag_str = 0;
  PyObject *__pyx_v_orth_str = 0;
  PyObject *__pyx_v_attrs = 0;
  PyObject *__pyx_v_force = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_special_case (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tag_str,&__pyx_n_s_orth_str,&__pyx_n_s_attrs,&__pyx_n_s_force,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tag_str)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_orth_str)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add_special_case", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_attrs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add_special_case", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_force);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add_special_case") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_tag_str = ((PyObject*)values[0]);
    __pyx_v_orth_str = ((PyObject*)values[1]);
    __pyx_v_attrs = values[2];
    __pyx_v_force = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_special_case", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("spacy.morphology.Morphology.add_special_case", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tag_str), (&PyUnicode_Type), 1, "tag_str", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_orth_str), (&PyUnicode_Type), 1, "orth_str", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_4add_special_case(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), __pyx_v_tag_str, __pyx_v_orth_str, __pyx_v_attrs, __pyx_v_force);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_4add_special_case(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_tag_str, PyObject *__pyx_v_orth_str, PyObject *__pyx_v_attrs, PyObject *__pyx_v_force) {
  PyObject *__pyx_v_tag = NULL;
  PyObject *__pyx_v_tag_id = NULL;
  PyObject *__pyx_v_orth = NULL;
  struct __pyx_t_5spacy_10morphology_RichTagC __pyx_v_rich_tag;
  struct __pyx_t_5spacy_10morphology_MorphAnalysisC *__pyx_v_cached;
  PyObject *__pyx_v_msg = NULL;
  PyObject *__pyx_v_name_id = NULL;
  PyObject *__pyx_v_value_id = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  __pyx_t_7preshed_4maps_key_t __pyx_t_7;
  int __pyx_t_8;
  void *__pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  PyObject *(*__pyx_t_12)(PyObject *);
  __pyx_t_5spacy_8typedefs_attr_t __pyx_t_13;
  enum __pyx_t_5spacy_10morphology_univ_morph_t __pyx_t_14;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_special_case", 0);
  __Pyx_INCREF(__pyx_v_attrs);

  /* "spacy\morphology.pyx":107
 *             orth (unicode): The word-form to key the exception.
 *         """
 *         tag = self.strings[tag_str]             # <<<<<<<<<<<<<<
 *         tag_id = self.reverse_index[tag]
 *         orth = self.strings[orth_str]
 */
  __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_v_tag_str); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tag = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":108
 *         """
 *         tag = self.strings[tag_str]
 *         tag_id = self.reverse_index[tag]             # <<<<<<<<<<<<<<
 *         orth = self.strings[orth_str]
 *         cdef RichTagC rich_tag = self.rich_tags[tag_id]
 */
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->reverse_index, __pyx_v_tag); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tag_id = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":109
 *         tag = self.strings[tag_str]
 *         tag_id = self.reverse_index[tag]
 *         orth = self.strings[orth_str]             # <<<<<<<<<<<<<<
 *         cdef RichTagC rich_tag = self.rich_tags[tag_id]
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 */
  __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_v_orth_str); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_orth = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":110
 *         tag_id = self.reverse_index[tag]
 *         orth = self.strings[orth_str]
 *         cdef RichTagC rich_tag = self.rich_tags[tag_id]             # <<<<<<<<<<<<<<
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)
 */
  __pyx_t_2 = __Pyx_PyIndex_AsSsize_t(__pyx_v_tag_id); if (unlikely((__pyx_t_2 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_rich_tag = (__pyx_v_self->rich_tags[__pyx_t_2]);

  /* "spacy\morphology.pyx":111
 *         orth = self.strings[orth_str]
 *         cdef RichTagC rich_tag = self.rich_tags[tag_id]
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)             # <<<<<<<<<<<<<<
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)
 *         if cached is NULL:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_intify_attrs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_attrs);
  __Pyx_GIVEREF(__pyx_v_attrs);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_attrs);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->strings));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->strings));
  PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_self->strings));
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_do_deprecated, Py_True) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF_SET(__pyx_v_attrs, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":112
 *         cdef RichTagC rich_tag = self.rich_tags[tag_id]
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)             # <<<<<<<<<<<<<<
 *         if cached is NULL:
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 */
  __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_tag_id); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyInt_As_uint64_t(__pyx_v_orth); if (unlikely((__pyx_t_7 == (uint64_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_cached = ((struct __pyx_t_5spacy_10morphology_MorphAnalysisC *)((struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *)__pyx_v_self->_cache->__pyx_vtab)->get(__pyx_v_self->_cache, __pyx_t_6, __pyx_t_7));

  /* "spacy\morphology.pyx":113
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)
 *         if cached is NULL:             # <<<<<<<<<<<<<<
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *         elif force:
 */
  __pyx_t_8 = ((__pyx_v_cached == NULL) != 0);
  if (__pyx_t_8) {

    /* "spacy\morphology.pyx":114
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)
 *         if cached is NULL:
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))             # <<<<<<<<<<<<<<
 *         elif force:
 *             memset(cached, 0, sizeof(cached[0]))
 */
    __pyx_t_9 = ((struct __pyx_vtabstruct_5cymem_5cymem_Pool *)__pyx_v_self->mem->__pyx_vtab)->alloc(__pyx_v_self->mem, 1, (sizeof(struct __pyx_t_5spacy_10morphology_MorphAnalysisC))); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_cached = ((struct __pyx_t_5spacy_10morphology_MorphAnalysisC *)__pyx_t_9);

    /* "spacy\morphology.pyx":113
 *         attrs = intify_attrs(attrs, self.strings, _do_deprecated=True)
 *         cached = <MorphAnalysisC*>self._cache.get(tag_id, orth)
 *         if cached is NULL:             # <<<<<<<<<<<<<<
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *         elif force:
 */
    goto __pyx_L3;
  }

  /* "spacy\morphology.pyx":115
 *         if cached is NULL:
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *         elif force:             # <<<<<<<<<<<<<<
 *             memset(cached, 0, sizeof(cached[0]))
 *         else:
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_force); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_8) {

    /* "spacy\morphology.pyx":116
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *         elif force:
 *             memset(cached, 0, sizeof(cached[0]))             # <<<<<<<<<<<<<<
 *         else:
 *             msg = ("Conflicting morphology exception for (%s, %s). Use force=True "
 */
    memset(__pyx_v_cached, 0, (sizeof((__pyx_v_cached[0]))));

    /* "spacy\morphology.pyx":115
 *         if cached is NULL:
 *             cached = <MorphAnalysisC*>self.mem.alloc(1, sizeof(MorphAnalysisC))
 *         elif force:             # <<<<<<<<<<<<<<
 *             memset(cached, 0, sizeof(cached[0]))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "spacy\morphology.pyx":118
 *             memset(cached, 0, sizeof(cached[0]))
 *         else:
 *             msg = ("Conflicting morphology exception for (%s, %s). Use force=True "             # <<<<<<<<<<<<<<
 *                    "to overwrite.")
 *             msg = msg % (tag_str, orth_str)
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_kp_u_Conflicting_morphology_exception);
    __pyx_v_msg = __pyx_kp_u_Conflicting_morphology_exception;

    /* "spacy\morphology.pyx":120
 *             msg = ("Conflicting morphology exception for (%s, %s). Use force=True "
 *                    "to overwrite.")
 *             msg = msg % (tag_str, orth_str)             # <<<<<<<<<<<<<<
 *             raise ValueError(msg)
 * 
 */
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_tag_str);
    __Pyx_GIVEREF(__pyx_v_tag_str);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_tag_str);
    __Pyx_INCREF(__pyx_v_orth_str);
    __Pyx_GIVEREF(__pyx_v_orth_str);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_orth_str);
    __pyx_t_4 = PyUnicode_Format(__pyx_v_msg, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_msg, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "spacy\morphology.pyx":121
 *                    "to overwrite.")
 *             msg = msg % (tag_str, orth_str)
 *             raise ValueError(msg)             # <<<<<<<<<<<<<<
 * 
 *         cached.tag = rich_tag
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_msg);
    __Pyx_GIVEREF(__pyx_v_msg);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_msg);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "spacy\morphology.pyx":123
 *             raise ValueError(msg)
 * 
 *         cached.tag = rich_tag             # <<<<<<<<<<<<<<
 *         # TODO: Refactor this to take arbitrary attributes.
 *         for name_id, value_id in attrs.items():
 */
  __pyx_v_cached->tag = __pyx_v_rich_tag;

  /* "spacy\morphology.pyx":125
 *         cached.tag = rich_tag
 *         # TODO: Refactor this to take arbitrary attributes.
 *         for name_id, value_id in attrs.items():             # <<<<<<<<<<<<<<
 *             if name_id == LEMMA:
 *                 cached.lemma = value_id
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_attrs, __pyx_n_s_items); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
    __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_2 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_5); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_5); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_10(__pyx_t_4);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
      PyObject* sequence = __pyx_t_5;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_12 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_1 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_1)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_12(__pyx_t_11), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_12 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_name_id, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_value_id, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "spacy\morphology.pyx":126
 *         # TODO: Refactor this to take arbitrary attributes.
 *         for name_id, value_id in attrs.items():
 *             if name_id == LEMMA:             # <<<<<<<<<<<<<<
 *                 cached.lemma = value_id
 *             else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_LEMMA); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_name_id, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_8) {

      /* "spacy\morphology.pyx":127
 *         for name_id, value_id in attrs.items():
 *             if name_id == LEMMA:
 *                 cached.lemma = value_id             # <<<<<<<<<<<<<<
 *             else:
 *                 self.assign_feature(&cached.tag.morph, name_id, value_id)
 */
      __pyx_t_13 = __Pyx_PyInt_As_int32_t(__pyx_v_value_id); if (unlikely((__pyx_t_13 == (int32_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_cached->lemma = __pyx_t_13;

      /* "spacy\morphology.pyx":126
 *         # TODO: Refactor this to take arbitrary attributes.
 *         for name_id, value_id in attrs.items():
 *             if name_id == LEMMA:             # <<<<<<<<<<<<<<
 *                 cached.lemma = value_id
 *             else:
 */
      goto __pyx_L8;
    }

    /* "spacy\morphology.pyx":129
 *                 cached.lemma = value_id
 *             else:
 *                 self.assign_feature(&cached.tag.morph, name_id, value_id)             # <<<<<<<<<<<<<<
 *         if cached.lemma == 0:
 *             cached.lemma = self.lemmatize(rich_tag.pos, orth, attrs)
 */
    /*else*/ {
      __pyx_t_14 = ((enum __pyx_t_5spacy_10morphology_univ_morph_t)__Pyx_PyInt_As_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_v_name_id)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_value_id); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_15 = ((struct __pyx_vtabstruct_5spacy_10morphology_Morphology *)__pyx_v_self->__pyx_vtab)->assign_feature(__pyx_v_self, (&__pyx_v_cached->tag.morph), __pyx_t_14, __pyx_t_8); if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L8:;

    /* "spacy\morphology.pyx":125
 *         cached.tag = rich_tag
 *         # TODO: Refactor this to take arbitrary attributes.
 *         for name_id, value_id in attrs.items():             # <<<<<<<<<<<<<<
 *             if name_id == LEMMA:
 *                 cached.lemma = value_id
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":130
 *             else:
 *                 self.assign_feature(&cached.tag.morph, name_id, value_id)
 *         if cached.lemma == 0:             # <<<<<<<<<<<<<<
 *             cached.lemma = self.lemmatize(rich_tag.pos, orth, attrs)
 *         self._cache.set(tag_id, orth, <void*>cached)
 */
  __pyx_t_8 = ((__pyx_v_cached->lemma == 0) != 0);
  if (__pyx_t_8) {

    /* "spacy\morphology.pyx":131
 *                 self.assign_feature(&cached.tag.morph, name_id, value_id)
 *         if cached.lemma == 0:
 *             cached.lemma = self.lemmatize(rich_tag.pos, orth, attrs)             # <<<<<<<<<<<<<<
 *         self._cache.set(tag_id, orth, <void*>cached)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_lemmatize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(__pyx_v_rich_tag.pos); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = NULL;
    __pyx_t_2 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_2 = 1;
      }
    }
    __pyx_t_11 = PyTuple_New(3+__pyx_t_2); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_2, __pyx_t_5);
    __Pyx_INCREF(__pyx_v_orth);
    __Pyx_GIVEREF(__pyx_v_orth);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_2, __pyx_v_orth);
    __Pyx_INCREF(__pyx_v_attrs);
    __Pyx_GIVEREF(__pyx_v_attrs);
    PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_2, __pyx_v_attrs);
    __pyx_t_5 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_11, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_13 = __Pyx_PyInt_As_int32_t(__pyx_t_4); if (unlikely((__pyx_t_13 == (int32_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_cached->lemma = __pyx_t_13;

    /* "spacy\morphology.pyx":130
 *             else:
 *                 self.assign_feature(&cached.tag.morph, name_id, value_id)
 *         if cached.lemma == 0:             # <<<<<<<<<<<<<<
 *             cached.lemma = self.lemmatize(rich_tag.pos, orth, attrs)
 *         self._cache.set(tag_id, orth, <void*>cached)
 */
  }

  /* "spacy\morphology.pyx":132
 *         if cached.lemma == 0:
 *             cached.lemma = self.lemmatize(rich_tag.pos, orth, attrs)
 *         self._cache.set(tag_id, orth, <void*>cached)             # <<<<<<<<<<<<<<
 * 
 *     def load_morph_exceptions(self, dict exc):
 */
  __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_tag_id); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyInt_As_uint64_t(__pyx_v_orth); if (unlikely((__pyx_t_7 == (uint64_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray *)__pyx_v_self->_cache->__pyx_vtab)->set(__pyx_v_self->_cache, __pyx_t_6, __pyx_t_7, ((void *)__pyx_v_cached)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "spacy\morphology.pyx":98
 *             flags[0] &= ~(one << flag_id)
 * 
 *     def add_special_case(self, unicode tag_str, unicode orth_str, attrs, force=False):             # <<<<<<<<<<<<<<
 *         """
 *         Add a special-case rule to the morphological analyser. Tokens whose
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("spacy.morphology.Morphology.add_special_case", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag);
  __Pyx_XDECREF(__pyx_v_tag_id);
  __Pyx_XDECREF(__pyx_v_orth);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XDECREF(__pyx_v_name_id);
  __Pyx_XDECREF(__pyx_v_value_id);
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":134
 *         self._cache.set(tag_id, orth, <void*>cached)
 * 
 *     def load_morph_exceptions(self, dict exc):             # <<<<<<<<<<<<<<
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7load_morph_exceptions(PyObject *__pyx_v_self, PyObject *__pyx_v_exc); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7load_morph_exceptions(PyObject *__pyx_v_self, PyObject *__pyx_v_exc) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_morph_exceptions (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_exc), (&PyDict_Type), 1, "exc", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_6load_morph_exceptions(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), ((PyObject*)__pyx_v_exc));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_6load_morph_exceptions(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_exc) {
  PyObject *__pyx_v_tag_str = NULL;
  PyObject *__pyx_v_entries = NULL;
  PyObject *__pyx_v_form_str = NULL;
  PyObject *__pyx_v_attrs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_morph_exceptions", 0);

  /* "spacy\morphology.pyx":136
 *     def load_morph_exceptions(self, dict exc):
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():             # <<<<<<<<<<<<<<
 *             for form_str, attrs in entries.items():
 *                 self.add_special_case(tag_str, form_str, attrs)
 */
  if (unlikely(__pyx_v_exc == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "items");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __Pyx_PyDict_Items(__pyx_v_exc); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_tag_str, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_entries, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "spacy\morphology.pyx":137
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():
 *             for form_str, attrs in entries.items():             # <<<<<<<<<<<<<<
 *                 self.add_special_case(tag_str, form_str, attrs)
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_entries, __pyx_n_s_items); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_6 = __pyx_t_1; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_1); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_1); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_10(__pyx_t_6);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
        PyObject* sequence = __pyx_t_1;
        #if CYTHON_COMPILING_IN_CPYTHON
        Py_ssize_t size = Py_SIZE(sequence);
        #else
        Py_ssize_t size = PySequence_Size(sequence);
        #endif
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        #if CYTHON_COMPILING_IN_CPYTHON
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        #else
        __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        #endif
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_11 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_8 = Py_TYPE(__pyx_t_11)->tp_iternext;
        index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_5)) goto __pyx_L9_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_5);
        index = 1; __pyx_t_7 = __pyx_t_8(__pyx_t_11); if (unlikely(!__pyx_t_7)) goto __pyx_L9_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_7);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_11), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = NULL;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        goto __pyx_L10_unpacking_done;
        __pyx_L9_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_8 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_L10_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_form_str, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_attrs, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "spacy\morphology.pyx":138
 *         for tag_str, entries in exc.items():
 *             for form_str, attrs in entries.items():
 *                 self.add_special_case(tag_str, form_str, attrs)             # <<<<<<<<<<<<<<
 * 
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):
 */
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add_special_case); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = NULL;
      __pyx_t_12 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_12 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_tag_str);
      __Pyx_GIVEREF(__pyx_v_tag_str);
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_12, __pyx_v_tag_str);
      __Pyx_INCREF(__pyx_v_form_str);
      __Pyx_GIVEREF(__pyx_v_form_str);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_12, __pyx_v_form_str);
      __Pyx_INCREF(__pyx_v_attrs);
      __Pyx_GIVEREF(__pyx_v_attrs);
      PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_12, __pyx_v_attrs);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_11, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "spacy\morphology.pyx":137
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():
 *             for form_str, attrs in entries.items():             # <<<<<<<<<<<<<<
 *                 self.add_special_case(tag_str, form_str, attrs)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "spacy\morphology.pyx":136
 *     def load_morph_exceptions(self, dict exc):
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():             # <<<<<<<<<<<<<<
 *             for form_str, attrs in entries.items():
 *                 self.add_special_case(tag_str, form_str, attrs)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "spacy\morphology.pyx":134
 *         self._cache.set(tag_id, orth, <void*>cached)
 * 
 *     def load_morph_exceptions(self, dict exc):             # <<<<<<<<<<<<<<
 *         # Map (form, pos) to (lemma, rich tag)
 *         for tag_str, entries in exc.items():
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("spacy.morphology.Morphology.load_morph_exceptions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tag_str);
  __Pyx_XDECREF(__pyx_v_entries);
  __Pyx_XDECREF(__pyx_v_form_str);
  __Pyx_XDECREF(__pyx_v_attrs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pyx":140
 *                 self.add_special_case(tag_str, form_str, attrs)
 * 
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):             # <<<<<<<<<<<<<<
 *         cdef unicode py_string = self.strings[orth]
 *         if self.lemmatizer is None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_9lemmatize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_9lemmatize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __pyx_v_univ_pos;
  __pyx_t_5spacy_8typedefs_attr_t __pyx_v_orth;
  PyObject *__pyx_v_morphology = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lemmatize (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_univ_pos,&__pyx_n_s_orth,&__pyx_n_s_morphology,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_univ_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_orth)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("lemmatize", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_morphology)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("lemmatize", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "lemmatize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_univ_pos = ((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)__Pyx_PyInt_As_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_orth = __Pyx_PyInt_As_int32_t(values[1]); if (unlikely((__pyx_v_orth == (int32_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_morphology = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lemmatize", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("spacy.morphology.Morphology.lemmatize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_8lemmatize(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), __pyx_v_univ_pos, __pyx_v_orth, __pyx_v_morphology);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_8lemmatize(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __pyx_v_univ_pos, __pyx_t_5spacy_8typedefs_attr_t __pyx_v_orth, PyObject *__pyx_v_morphology) {
  PyObject *__pyx_v_py_string = 0;
  PyObject *__pyx_v_lemma_strings = 0;
  PyObject *__pyx_v_lemma_string = 0;
  PyObject *__pyx_v_lemma = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lemmatize", 0);

  /* "spacy\morphology.pyx":141
 * 
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):
 *         cdef unicode py_string = self.strings[orth]             # <<<<<<<<<<<<<<
 *         if self.lemmatizer is None:
 *             return self.strings[py_string.lower()]
 */
  __pyx_t_1 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->strings), __pyx_v_orth, __pyx_t_5spacy_8typedefs_attr_t, 1, __Pyx_PyInt_From_int32_t, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyUnicode_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_py_string = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":142
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):
 *         cdef unicode py_string = self.strings[orth]
 *         if self.lemmatizer is None:             # <<<<<<<<<<<<<<
 *             return self.strings[py_string.lower()]
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):
 */
  __pyx_t_2 = (__pyx_v_self->lemmatizer == Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "spacy\morphology.pyx":143
 *         cdef unicode py_string = self.strings[orth]
 *         if self.lemmatizer is None:
 *             return self.strings[py_string.lower()]             # <<<<<<<<<<<<<<
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):
 *             return self.strings[py_string.lower()]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_py_string, __pyx_n_s_lower); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_t_1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "spacy\morphology.pyx":142
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):
 *         cdef unicode py_string = self.strings[orth]
 *         if self.lemmatizer is None:             # <<<<<<<<<<<<<<
 *             return self.strings[py_string.lower()]
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):
 */
  }

  /* "spacy\morphology.pyx":144
 *         if self.lemmatizer is None:
 *             return self.strings[py_string.lower()]
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):             # <<<<<<<<<<<<<<
 *             return self.strings[py_string.lower()]
 *         cdef set lemma_strings
 */
  switch (__pyx_v_univ_pos) {
    case __pyx_e_5spacy_15parts_of_speech_NOUN:
    case __pyx_e_5spacy_15parts_of_speech_VERB:
    case __pyx_e_5spacy_15parts_of_speech_ADJ:
    case __pyx_e_5spacy_15parts_of_speech_PUNCT:
    __pyx_t_3 = 0;
    break;
    default:
    __pyx_t_3 = 1;
    break;
  }
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "spacy\morphology.pyx":145
 *             return self.strings[py_string.lower()]
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):
 *             return self.strings[py_string.lower()]             # <<<<<<<<<<<<<<
 *         cdef set lemma_strings
 *         cdef unicode lemma_string
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_py_string, __pyx_n_s_lower); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_t_4); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "spacy\morphology.pyx":144
 *         if self.lemmatizer is None:
 *             return self.strings[py_string.lower()]
 *         if univ_pos not in (NOUN, VERB, ADJ, PUNCT):             # <<<<<<<<<<<<<<
 *             return self.strings[py_string.lower()]
 *         cdef set lemma_strings
 */
  }

  /* "spacy\morphology.pyx":148
 *         cdef set lemma_strings
 *         cdef unicode lemma_string
 *         lemma_strings = self.lemmatizer(py_string, univ_pos, morphology)             # <<<<<<<<<<<<<<
 *         lemma_string = sorted(lemma_strings)[0]
 *         lemma = self.strings[lemma_string]
 */
  __pyx_t_4 = __Pyx_PyInt_From_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(__pyx_v_univ_pos); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->lemmatizer);
  __pyx_t_5 = __pyx_v_self->lemmatizer; __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_INCREF(__pyx_v_py_string);
  __Pyx_GIVEREF(__pyx_v_py_string);
  PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_py_string);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_morphology);
  __Pyx_GIVEREF(__pyx_v_morphology);
  PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_v_morphology);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!(likely(PySet_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_lemma_strings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "spacy\morphology.pyx":149
 *         cdef unicode lemma_string
 *         lemma_strings = self.lemmatizer(py_string, univ_pos, morphology)
 *         lemma_string = sorted(lemma_strings)[0]             # <<<<<<<<<<<<<<
 *         lemma = self.strings[lemma_string]
 *         return lemma
 */
  __pyx_t_5 = PySequence_List(__pyx_v_lemma_strings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_9 = PyList_Sort(__pyx_t_1); if (unlikely(__pyx_t_9 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyUnicode_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_t_5)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_lemma_string = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":150
 *         lemma_strings = self.lemmatizer(py_string, univ_pos, morphology)
 *         lemma_string = sorted(lemma_strings)[0]
 *         lemma = self.strings[lemma_string]             # <<<<<<<<<<<<<<
 *         return lemma
 * 
 */
  __pyx_t_5 = PyObject_GetItem(((PyObject *)__pyx_v_self->strings), __pyx_v_lemma_string); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v_lemma = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":151
 *         lemma_string = sorted(lemma_strings)[0]
 *         lemma = self.strings[lemma_string]
 *         return lemma             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_lemma);
  __pyx_r = __pyx_v_lemma;
  goto __pyx_L0;

  /* "spacy\morphology.pyx":140
 *                 self.add_special_case(tag_str, form_str, attrs)
 * 
 *     def lemmatize(self, const univ_pos_t univ_pos, attr_t orth, morphology):             # <<<<<<<<<<<<<<
 *         cdef unicode py_string = self.strings[orth]
 *         if self.lemmatizer is None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("spacy.morphology.Morphology.lemmatize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_py_string);
  __Pyx_XDECREF(__pyx_v_lemma_strings);
  __Pyx_XDECREF(__pyx_v_lemma_string);
  __Pyx_XDECREF(__pyx_v_lemma);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":26
 * 
 * cdef class Morphology:
 *     cdef readonly Pool mem             # <<<<<<<<<<<<<<
 *     cdef readonly StringStore strings
 *     cdef public object lemmatizer
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_3mem_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_3mem_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_3mem___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_3mem___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->mem));
  __pyx_r = ((PyObject *)__pyx_v_self->mem);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":27
 * cdef class Morphology:
 *     cdef readonly Pool mem
 *     cdef readonly StringStore strings             # <<<<<<<<<<<<<<
 *     cdef public object lemmatizer
 *     cdef readonly object tag_map
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7strings_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7strings_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_7strings___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_7strings___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->strings));
  __pyx_r = ((PyObject *)__pyx_v_self->strings);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":28
 *     cdef readonly Pool mem
 *     cdef readonly StringStore strings
 *     cdef public object lemmatizer             # <<<<<<<<<<<<<<
 *     cdef readonly object tag_map
 *     cdef public object n_tags
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lemmatizer);
  __pyx_r = __pyx_v_self->lemmatizer;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_2__set__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->lemmatizer);
  __Pyx_DECREF(__pyx_v_self->lemmatizer);
  __pyx_v_self->lemmatizer = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_4__del__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_10lemmatizer_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lemmatizer);
  __Pyx_DECREF(__pyx_v_self->lemmatizer);
  __pyx_v_self->lemmatizer = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":29
 *     cdef readonly StringStore strings
 *     cdef public object lemmatizer
 *     cdef readonly object tag_map             # <<<<<<<<<<<<<<
 *     cdef public object n_tags
 *     cdef public object reverse_index
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7tag_map_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_7tag_map_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_7tag_map___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_7tag_map___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->tag_map);
  __pyx_r = __pyx_v_self->tag_map;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":30
 *     cdef public object lemmatizer
 *     cdef readonly object tag_map
 *     cdef public object n_tags             # <<<<<<<<<<<<<<
 *     cdef public object reverse_index
 *     cdef public object tag_names
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_6n_tags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_6n_tags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_6n_tags___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_6n_tags___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->n_tags);
  __pyx_r = __pyx_v_self->n_tags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_2__set__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->n_tags);
  __Pyx_DECREF(__pyx_v_self->n_tags);
  __pyx_v_self->n_tags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_4__del__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_6n_tags_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->n_tags);
  __Pyx_DECREF(__pyx_v_self->n_tags);
  __pyx_v_self->n_tags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":31
 *     cdef readonly object tag_map
 *     cdef public object n_tags
 *     cdef public object reverse_index             # <<<<<<<<<<<<<<
 *     cdef public object tag_names
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_13reverse_index___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->reverse_index);
  __pyx_r = __pyx_v_self->reverse_index;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_2__set__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->reverse_index);
  __Pyx_DECREF(__pyx_v_self->reverse_index);
  __pyx_v_self->reverse_index = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_4__del__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_13reverse_index_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->reverse_index);
  __Pyx_DECREF(__pyx_v_self->reverse_index);
  __pyx_v_self->reverse_index = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "spacy\morphology.pxd":32
 *     cdef public object n_tags
 *     cdef public object reverse_index
 *     cdef public object tag_names             # <<<<<<<<<<<<<<
 * 
 *     cdef RichTagC* rich_tags
 */

/* Python wrapper */
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_9tag_names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5spacy_10morphology_10Morphology_9tag_names_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_9tag_names___get__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5spacy_10morphology_10Morphology_9tag_names___get__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->tag_names);
  __pyx_r = __pyx_v_self->tag_names;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_2__set__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_2__set__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->tag_names);
  __Pyx_DECREF(__pyx_v_self->tag_names);
  __pyx_v_self->tag_names = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_4__del__(((struct __pyx_obj_5spacy_10morphology_Morphology *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5spacy_10morphology_10Morphology_9tag_names_4__del__(struct __pyx_obj_5spacy_10morphology_Morphology *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->tag_names);
  __Pyx_DECREF(__pyx_v_self->tag_names);
  __pyx_v_self->tag_names = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L15:;

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lexeme.pxd":20
 * 
 *     @staticmethod
 *     cdef inline Lexeme from_ptr(LexemeC* lex, Vocab vocab, int vector_length):             # <<<<<<<<<<<<<<
 *         cdef Lexeme self = Lexeme.__new__(Lexeme, vocab, lex.orth)
 *         self.c = lex
 */

static CYTHON_INLINE struct __pyx_obj_5spacy_6lexeme_Lexeme *__pyx_f_5spacy_6lexeme_6Lexeme_from_ptr(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, struct __pyx_obj_5spacy_5vocab_Vocab *__pyx_v_vocab, CYTHON_UNUSED int __pyx_v_vector_length) {
  struct __pyx_obj_5spacy_6lexeme_Lexeme *__pyx_v_self = 0;
  struct __pyx_obj_5spacy_6lexeme_Lexeme *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_5spacy_8typedefs_attr_t __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_ptr", 0);

  /* "lexeme.pxd":21
 *     @staticmethod
 *     cdef inline Lexeme from_ptr(LexemeC* lex, Vocab vocab, int vector_length):
 *         cdef Lexeme self = Lexeme.__new__(Lexeme, vocab, lex.orth)             # <<<<<<<<<<<<<<
 *         self.c = lex
 *         self.vocab = vocab
 */
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_lex->orth); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_vocab));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_vocab));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_vocab));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_tp_new(((PyObject *)__pyx_ptype_5spacy_6lexeme_Lexeme), ((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5spacy_6lexeme_Lexeme)))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self = ((struct __pyx_obj_5spacy_6lexeme_Lexeme *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lexeme.pxd":22
 *     cdef inline Lexeme from_ptr(LexemeC* lex, Vocab vocab, int vector_length):
 *         cdef Lexeme self = Lexeme.__new__(Lexeme, vocab, lex.orth)
 *         self.c = lex             # <<<<<<<<<<<<<<
 *         self.vocab = vocab
 *         self.orth = lex.orth
 */
  __pyx_v_self->c = __pyx_v_lex;

  /* "lexeme.pxd":23
 *         cdef Lexeme self = Lexeme.__new__(Lexeme, vocab, lex.orth)
 *         self.c = lex
 *         self.vocab = vocab             # <<<<<<<<<<<<<<
 *         self.orth = lex.orth
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_vocab));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_vocab));
  __Pyx_GOTREF(__pyx_v_self->vocab);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->vocab));
  __pyx_v_self->vocab = __pyx_v_vocab;

  /* "lexeme.pxd":24
 *         self.c = lex
 *         self.vocab = vocab
 *         self.orth = lex.orth             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __pyx_t_3 = __pyx_v_lex->orth;
  __pyx_v_self->orth = __pyx_t_3;

  /* "lexeme.pxd":20
 * 
 *     @staticmethod
 *     cdef inline Lexeme from_ptr(LexemeC* lex, Vocab vocab, int vector_length):             # <<<<<<<<<<<<<<
 *         cdef Lexeme self = Lexeme.__new__(Lexeme, vocab, lex.orth)
 *         self.c = lex
 */

  /* function exit code */
  __pyx_r = ((struct __pyx_obj_5spacy_6lexeme_Lexeme *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("spacy.lexeme.Lexeme.from_ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lexeme.pxd":27
 * 
 *     @staticmethod
 *     cdef inline void set_struct_attr(LexemeC* lex, attr_id_t name, attr_t value) nogil:             # <<<<<<<<<<<<<<
 *         if name < (sizeof(flags_t) * 8):
 *             Lexeme.c_set_flag(lex, name, value)
 */

static CYTHON_INLINE void __pyx_f_5spacy_6lexeme_6Lexeme_set_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_name, __pyx_t_5spacy_8typedefs_attr_t __pyx_v_value) {
  int __pyx_t_1;

  /* "lexeme.pxd":28
 *     @staticmethod
 *     cdef inline void set_struct_attr(LexemeC* lex, attr_id_t name, attr_t value) nogil:
 *         if name < (sizeof(flags_t) * 8):             # <<<<<<<<<<<<<<
 *             Lexeme.c_set_flag(lex, name, value)
 *         elif name == ID:
 */
  __pyx_t_1 = ((__pyx_v_name < ((sizeof(__pyx_t_5spacy_8typedefs_flags_t)) * 8)) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":29
 *     cdef inline void set_struct_attr(LexemeC* lex, attr_id_t name, attr_t value) nogil:
 *         if name < (sizeof(flags_t) * 8):
 *             Lexeme.c_set_flag(lex, name, value)             # <<<<<<<<<<<<<<
 *         elif name == ID:
 *             lex.id = value
 */
    __pyx_f_5spacy_6lexeme_6Lexeme_c_set_flag(__pyx_v_lex, __pyx_v_name, __pyx_v_value);

    /* "lexeme.pxd":28
 *     @staticmethod
 *     cdef inline void set_struct_attr(LexemeC* lex, attr_id_t name, attr_t value) nogil:
 *         if name < (sizeof(flags_t) * 8):             # <<<<<<<<<<<<<<
 *             Lexeme.c_set_flag(lex, name, value)
 *         elif name == ID:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":30
 *         if name < (sizeof(flags_t) * 8):
 *             Lexeme.c_set_flag(lex, name, value)
 *         elif name == ID:             # <<<<<<<<<<<<<<
 *             lex.id = value
 *         elif name == LOWER:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_ID) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":31
 *             Lexeme.c_set_flag(lex, name, value)
 *         elif name == ID:
 *             lex.id = value             # <<<<<<<<<<<<<<
 *         elif name == LOWER:
 *             lex.lower = value
 */
    __pyx_v_lex->id = __pyx_v_value;

    /* "lexeme.pxd":30
 *         if name < (sizeof(flags_t) * 8):
 *             Lexeme.c_set_flag(lex, name, value)
 *         elif name == ID:             # <<<<<<<<<<<<<<
 *             lex.id = value
 *         elif name == LOWER:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":32
 *         elif name == ID:
 *             lex.id = value
 *         elif name == LOWER:             # <<<<<<<<<<<<<<
 *             lex.lower = value
 *         elif name == NORM:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_LOWER) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":33
 *             lex.id = value
 *         elif name == LOWER:
 *             lex.lower = value             # <<<<<<<<<<<<<<
 *         elif name == NORM:
 *             lex.norm = value
 */
    __pyx_v_lex->lower = __pyx_v_value;

    /* "lexeme.pxd":32
 *         elif name == ID:
 *             lex.id = value
 *         elif name == LOWER:             # <<<<<<<<<<<<<<
 *             lex.lower = value
 *         elif name == NORM:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":34
 *         elif name == LOWER:
 *             lex.lower = value
 *         elif name == NORM:             # <<<<<<<<<<<<<<
 *             lex.norm = value
 *         elif name == SHAPE:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_NORM) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":35
 *             lex.lower = value
 *         elif name == NORM:
 *             lex.norm = value             # <<<<<<<<<<<<<<
 *         elif name == SHAPE:
 *             lex.shape = value
 */
    __pyx_v_lex->norm = __pyx_v_value;

    /* "lexeme.pxd":34
 *         elif name == LOWER:
 *             lex.lower = value
 *         elif name == NORM:             # <<<<<<<<<<<<<<
 *             lex.norm = value
 *         elif name == SHAPE:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":36
 *         elif name == NORM:
 *             lex.norm = value
 *         elif name == SHAPE:             # <<<<<<<<<<<<<<
 *             lex.shape = value
 *         elif name == PREFIX:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_SHAPE) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":37
 *             lex.norm = value
 *         elif name == SHAPE:
 *             lex.shape = value             # <<<<<<<<<<<<<<
 *         elif name == PREFIX:
 *             lex.prefix = value
 */
    __pyx_v_lex->shape = __pyx_v_value;

    /* "lexeme.pxd":36
 *         elif name == NORM:
 *             lex.norm = value
 *         elif name == SHAPE:             # <<<<<<<<<<<<<<
 *             lex.shape = value
 *         elif name == PREFIX:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":38
 *         elif name == SHAPE:
 *             lex.shape = value
 *         elif name == PREFIX:             # <<<<<<<<<<<<<<
 *             lex.prefix = value
 *         elif name == SUFFIX:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_PREFIX) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":39
 *             lex.shape = value
 *         elif name == PREFIX:
 *             lex.prefix = value             # <<<<<<<<<<<<<<
 *         elif name == SUFFIX:
 *             lex.suffix = value
 */
    __pyx_v_lex->prefix = __pyx_v_value;

    /* "lexeme.pxd":38
 *         elif name == SHAPE:
 *             lex.shape = value
 *         elif name == PREFIX:             # <<<<<<<<<<<<<<
 *             lex.prefix = value
 *         elif name == SUFFIX:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":40
 *         elif name == PREFIX:
 *             lex.prefix = value
 *         elif name == SUFFIX:             # <<<<<<<<<<<<<<
 *             lex.suffix = value
 *         elif name == CLUSTER:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_SUFFIX) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":41
 *             lex.prefix = value
 *         elif name == SUFFIX:
 *             lex.suffix = value             # <<<<<<<<<<<<<<
 *         elif name == CLUSTER:
 *             lex.cluster = value
 */
    __pyx_v_lex->suffix = __pyx_v_value;

    /* "lexeme.pxd":40
 *         elif name == PREFIX:
 *             lex.prefix = value
 *         elif name == SUFFIX:             # <<<<<<<<<<<<<<
 *             lex.suffix = value
 *         elif name == CLUSTER:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":42
 *         elif name == SUFFIX:
 *             lex.suffix = value
 *         elif name == CLUSTER:             # <<<<<<<<<<<<<<
 *             lex.cluster = value
 *         elif name == LANG:
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_CLUSTER) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":43
 *             lex.suffix = value
 *         elif name == CLUSTER:
 *             lex.cluster = value             # <<<<<<<<<<<<<<
 *         elif name == LANG:
 *             lex.lang = value
 */
    __pyx_v_lex->cluster = __pyx_v_value;

    /* "lexeme.pxd":42
 *         elif name == SUFFIX:
 *             lex.suffix = value
 *         elif name == CLUSTER:             # <<<<<<<<<<<<<<
 *             lex.cluster = value
 *         elif name == LANG:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":44
 *         elif name == CLUSTER:
 *             lex.cluster = value
 *         elif name == LANG:             # <<<<<<<<<<<<<<
 *             lex.lang = value
 * 
 */
  __pyx_t_1 = ((__pyx_v_name == __pyx_e_5spacy_5attrs_LANG) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":45
 *             lex.cluster = value
 *         elif name == LANG:
 *             lex.lang = value             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    __pyx_v_lex->lang = __pyx_v_value;

    /* "lexeme.pxd":44
 *         elif name == CLUSTER:
 *             lex.cluster = value
 *         elif name == LANG:             # <<<<<<<<<<<<<<
 *             lex.lang = value
 * 
 */
  }
  __pyx_L3:;

  /* "lexeme.pxd":27
 * 
 *     @staticmethod
 *     cdef inline void set_struct_attr(LexemeC* lex, attr_id_t name, attr_t value) nogil:             # <<<<<<<<<<<<<<
 *         if name < (sizeof(flags_t) * 8):
 *             Lexeme.c_set_flag(lex, name, value)
 */

  /* function exit code */
}

/* "lexeme.pxd":48
 * 
 *     @staticmethod
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:             # <<<<<<<<<<<<<<
 *         if feat_name < (sizeof(flags_t) * 8):
 *             if Lexeme.c_check_flag(lex, feat_name):
 */

static CYTHON_INLINE __pyx_t_5spacy_8typedefs_attr_t __pyx_f_5spacy_6lexeme_6Lexeme_get_struct_attr(struct __pyx_t_5spacy_7structs_LexemeC const *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_feat_name) {
  __pyx_t_5spacy_8typedefs_attr_t __pyx_r;
  int __pyx_t_1;

  /* "lexeme.pxd":49
 *     @staticmethod
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:
 *         if feat_name < (sizeof(flags_t) * 8):             # <<<<<<<<<<<<<<
 *             if Lexeme.c_check_flag(lex, feat_name):
 *                 return 1
 */
  __pyx_t_1 = ((__pyx_v_feat_name < ((sizeof(__pyx_t_5spacy_8typedefs_flags_t)) * 8)) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":50
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:
 *         if feat_name < (sizeof(flags_t) * 8):
 *             if Lexeme.c_check_flag(lex, feat_name):             # <<<<<<<<<<<<<<
 *                 return 1
 *             else:
 */
    __pyx_t_1 = (__pyx_f_5spacy_6lexeme_6Lexeme_c_check_flag(__pyx_v_lex, __pyx_v_feat_name) != 0);
    if (__pyx_t_1) {

      /* "lexeme.pxd":51
 *         if feat_name < (sizeof(flags_t) * 8):
 *             if Lexeme.c_check_flag(lex, feat_name):
 *                 return 1             # <<<<<<<<<<<<<<
 *             else:
 *                 return 0
 */
      __pyx_r = 1;
      goto __pyx_L0;

      /* "lexeme.pxd":50
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:
 *         if feat_name < (sizeof(flags_t) * 8):
 *             if Lexeme.c_check_flag(lex, feat_name):             # <<<<<<<<<<<<<<
 *                 return 1
 *             else:
 */
    }

    /* "lexeme.pxd":53
 *                 return 1
 *             else:
 *                 return 0             # <<<<<<<<<<<<<<
 *         elif feat_name == ID:
 *             return lex.id
 */
    /*else*/ {
      __pyx_r = 0;
      goto __pyx_L0;
    }

    /* "lexeme.pxd":49
 *     @staticmethod
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:
 *         if feat_name < (sizeof(flags_t) * 8):             # <<<<<<<<<<<<<<
 *             if Lexeme.c_check_flag(lex, feat_name):
 *                 return 1
 */
  }

  /* "lexeme.pxd":54
 *             else:
 *                 return 0
 *         elif feat_name == ID:             # <<<<<<<<<<<<<<
 *             return lex.id
 *         elif feat_name == ORTH:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_ID) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":55
 *                 return 0
 *         elif feat_name == ID:
 *             return lex.id             # <<<<<<<<<<<<<<
 *         elif feat_name == ORTH:
 *             return lex.orth
 */
    __pyx_r = __pyx_v_lex->id;
    goto __pyx_L0;

    /* "lexeme.pxd":54
 *             else:
 *                 return 0
 *         elif feat_name == ID:             # <<<<<<<<<<<<<<
 *             return lex.id
 *         elif feat_name == ORTH:
 */
  }

  /* "lexeme.pxd":56
 *         elif feat_name == ID:
 *             return lex.id
 *         elif feat_name == ORTH:             # <<<<<<<<<<<<<<
 *             return lex.orth
 *         elif feat_name == LOWER:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_ORTH) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":57
 *             return lex.id
 *         elif feat_name == ORTH:
 *             return lex.orth             # <<<<<<<<<<<<<<
 *         elif feat_name == LOWER:
 *             return lex.lower
 */
    __pyx_r = __pyx_v_lex->orth;
    goto __pyx_L0;

    /* "lexeme.pxd":56
 *         elif feat_name == ID:
 *             return lex.id
 *         elif feat_name == ORTH:             # <<<<<<<<<<<<<<
 *             return lex.orth
 *         elif feat_name == LOWER:
 */
  }

  /* "lexeme.pxd":58
 *         elif feat_name == ORTH:
 *             return lex.orth
 *         elif feat_name == LOWER:             # <<<<<<<<<<<<<<
 *             return lex.lower
 *         elif feat_name == NORM:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_LOWER) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":59
 *             return lex.orth
 *         elif feat_name == LOWER:
 *             return lex.lower             # <<<<<<<<<<<<<<
 *         elif feat_name == NORM:
 *             return lex.norm
 */
    __pyx_r = __pyx_v_lex->lower;
    goto __pyx_L0;

    /* "lexeme.pxd":58
 *         elif feat_name == ORTH:
 *             return lex.orth
 *         elif feat_name == LOWER:             # <<<<<<<<<<<<<<
 *             return lex.lower
 *         elif feat_name == NORM:
 */
  }

  /* "lexeme.pxd":60
 *         elif feat_name == LOWER:
 *             return lex.lower
 *         elif feat_name == NORM:             # <<<<<<<<<<<<<<
 *             return lex.norm
 *         elif feat_name == SHAPE:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_NORM) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":61
 *             return lex.lower
 *         elif feat_name == NORM:
 *             return lex.norm             # <<<<<<<<<<<<<<
 *         elif feat_name == SHAPE:
 *             return lex.shape
 */
    __pyx_r = __pyx_v_lex->norm;
    goto __pyx_L0;

    /* "lexeme.pxd":60
 *         elif feat_name == LOWER:
 *             return lex.lower
 *         elif feat_name == NORM:             # <<<<<<<<<<<<<<
 *             return lex.norm
 *         elif feat_name == SHAPE:
 */
  }

  /* "lexeme.pxd":62
 *         elif feat_name == NORM:
 *             return lex.norm
 *         elif feat_name == SHAPE:             # <<<<<<<<<<<<<<
 *             return lex.shape
 *         elif feat_name == PREFIX:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_SHAPE) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":63
 *             return lex.norm
 *         elif feat_name == SHAPE:
 *             return lex.shape             # <<<<<<<<<<<<<<
 *         elif feat_name == PREFIX:
 *             return lex.prefix
 */
    __pyx_r = __pyx_v_lex->shape;
    goto __pyx_L0;

    /* "lexeme.pxd":62
 *         elif feat_name == NORM:
 *             return lex.norm
 *         elif feat_name == SHAPE:             # <<<<<<<<<<<<<<
 *             return lex.shape
 *         elif feat_name == PREFIX:
 */
  }

  /* "lexeme.pxd":64
 *         elif feat_name == SHAPE:
 *             return lex.shape
 *         elif feat_name == PREFIX:             # <<<<<<<<<<<<<<
 *             return lex.prefix
 *         elif feat_name == SUFFIX:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_PREFIX) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":65
 *             return lex.shape
 *         elif feat_name == PREFIX:
 *             return lex.prefix             # <<<<<<<<<<<<<<
 *         elif feat_name == SUFFIX:
 *             return lex.suffix
 */
    __pyx_r = __pyx_v_lex->prefix;
    goto __pyx_L0;

    /* "lexeme.pxd":64
 *         elif feat_name == SHAPE:
 *             return lex.shape
 *         elif feat_name == PREFIX:             # <<<<<<<<<<<<<<
 *             return lex.prefix
 *         elif feat_name == SUFFIX:
 */
  }

  /* "lexeme.pxd":66
 *         elif feat_name == PREFIX:
 *             return lex.prefix
 *         elif feat_name == SUFFIX:             # <<<<<<<<<<<<<<
 *             return lex.suffix
 *         elif feat_name == LENGTH:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_SUFFIX) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":67
 *             return lex.prefix
 *         elif feat_name == SUFFIX:
 *             return lex.suffix             # <<<<<<<<<<<<<<
 *         elif feat_name == LENGTH:
 *             return lex.length
 */
    __pyx_r = __pyx_v_lex->suffix;
    goto __pyx_L0;

    /* "lexeme.pxd":66
 *         elif feat_name == PREFIX:
 *             return lex.prefix
 *         elif feat_name == SUFFIX:             # <<<<<<<<<<<<<<
 *             return lex.suffix
 *         elif feat_name == LENGTH:
 */
  }

  /* "lexeme.pxd":68
 *         elif feat_name == SUFFIX:
 *             return lex.suffix
 *         elif feat_name == LENGTH:             # <<<<<<<<<<<<<<
 *             return lex.length
 *         elif feat_name == CLUSTER:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_LENGTH) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":69
 *             return lex.suffix
 *         elif feat_name == LENGTH:
 *             return lex.length             # <<<<<<<<<<<<<<
 *         elif feat_name == CLUSTER:
 *             return lex.cluster
 */
    __pyx_r = __pyx_v_lex->length;
    goto __pyx_L0;

    /* "lexeme.pxd":68
 *         elif feat_name == SUFFIX:
 *             return lex.suffix
 *         elif feat_name == LENGTH:             # <<<<<<<<<<<<<<
 *             return lex.length
 *         elif feat_name == CLUSTER:
 */
  }

  /* "lexeme.pxd":70
 *         elif feat_name == LENGTH:
 *             return lex.length
 *         elif feat_name == CLUSTER:             # <<<<<<<<<<<<<<
 *             return lex.cluster
 *         elif feat_name == LANG:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_CLUSTER) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":71
 *             return lex.length
 *         elif feat_name == CLUSTER:
 *             return lex.cluster             # <<<<<<<<<<<<<<
 *         elif feat_name == LANG:
 *             return lex.lang
 */
    __pyx_r = __pyx_v_lex->cluster;
    goto __pyx_L0;

    /* "lexeme.pxd":70
 *         elif feat_name == LENGTH:
 *             return lex.length
 *         elif feat_name == CLUSTER:             # <<<<<<<<<<<<<<
 *             return lex.cluster
 *         elif feat_name == LANG:
 */
  }

  /* "lexeme.pxd":72
 *         elif feat_name == CLUSTER:
 *             return lex.cluster
 *         elif feat_name == LANG:             # <<<<<<<<<<<<<<
 *             return lex.lang
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_feat_name == __pyx_e_5spacy_5attrs_LANG) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":73
 *             return lex.cluster
 *         elif feat_name == LANG:
 *             return lex.lang             # <<<<<<<<<<<<<<
 *         else:
 *             return 0
 */
    __pyx_r = __pyx_v_lex->lang;
    goto __pyx_L0;

    /* "lexeme.pxd":72
 *         elif feat_name == CLUSTER:
 *             return lex.cluster
 *         elif feat_name == LANG:             # <<<<<<<<<<<<<<
 *             return lex.lang
 *         else:
 */
  }

  /* "lexeme.pxd":75
 *             return lex.lang
 *         else:
 *             return 0             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  /*else*/ {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "lexeme.pxd":48
 * 
 *     @staticmethod
 *     cdef inline attr_t get_struct_attr(const LexemeC* lex, attr_id_t feat_name) nogil:             # <<<<<<<<<<<<<<
 *         if feat_name < (sizeof(flags_t) * 8):
 *             if Lexeme.c_check_flag(lex, feat_name):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "lexeme.pxd":78
 * 
 *     @staticmethod
 *     cdef inline bint c_check_flag(const LexemeC* lexeme, attr_id_t flag_id) nogil:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if lexeme.flags & (one << flag_id):
 */

static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_check_flag(struct __pyx_t_5spacy_7structs_LexemeC const *__pyx_v_lexeme, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_flag_id) {
  __pyx_t_5spacy_8typedefs_flags_t __pyx_v_one;
  int __pyx_r;
  int __pyx_t_1;

  /* "lexeme.pxd":79
 *     @staticmethod
 *     cdef inline bint c_check_flag(const LexemeC* lexeme, attr_id_t flag_id) nogil:
 *         cdef flags_t one = 1             # <<<<<<<<<<<<<<
 *         if lexeme.flags & (one << flag_id):
 *             return True
 */
  __pyx_v_one = 1;

  /* "lexeme.pxd":80
 *     cdef inline bint c_check_flag(const LexemeC* lexeme, attr_id_t flag_id) nogil:
 *         cdef flags_t one = 1
 *         if lexeme.flags & (one << flag_id):             # <<<<<<<<<<<<<<
 *             return True
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_lexeme->flags & (__pyx_v_one << __pyx_v_flag_id)) != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":81
 *         cdef flags_t one = 1
 *         if lexeme.flags & (one << flag_id):
 *             return True             # <<<<<<<<<<<<<<
 *         else:
 *             return False
 */
    __pyx_r = 1;
    goto __pyx_L0;

    /* "lexeme.pxd":80
 *     cdef inline bint c_check_flag(const LexemeC* lexeme, attr_id_t flag_id) nogil:
 *         cdef flags_t one = 1
 *         if lexeme.flags & (one << flag_id):             # <<<<<<<<<<<<<<
 *             return True
 *         else:
 */
  }

  /* "lexeme.pxd":83
 *             return True
 *         else:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  /*else*/ {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "lexeme.pxd":78
 * 
 *     @staticmethod
 *     cdef inline bint c_check_flag(const LexemeC* lexeme, attr_id_t flag_id) nogil:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if lexeme.flags & (one << flag_id):
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "lexeme.pxd":86
 * 
 *     @staticmethod
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if value:
 */

static CYTHON_INLINE int __pyx_f_5spacy_6lexeme_6Lexeme_c_set_flag(struct __pyx_t_5spacy_7structs_LexemeC *__pyx_v_lex, enum __pyx_t_5spacy_5attrs_attr_id_t __pyx_v_flag_id, int __pyx_v_value) {
  __pyx_t_5spacy_8typedefs_flags_t __pyx_v_one;
  int __pyx_r;
  int __pyx_t_1;

  /* "lexeme.pxd":87
 *     @staticmethod
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:
 *         cdef flags_t one = 1             # <<<<<<<<<<<<<<
 *         if value:
 *             lex.flags |= one << flag_id
 */
  __pyx_v_one = 1;

  /* "lexeme.pxd":88
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:
 *         cdef flags_t one = 1
 *         if value:             # <<<<<<<<<<<<<<
 *             lex.flags |= one << flag_id
 *         else:
 */
  __pyx_t_1 = (__pyx_v_value != 0);
  if (__pyx_t_1) {

    /* "lexeme.pxd":89
 *         cdef flags_t one = 1
 *         if value:
 *             lex.flags |= one << flag_id             # <<<<<<<<<<<<<<
 *         else:
 *             lex.flags &= ~(one << flag_id)
 */
    __pyx_v_lex->flags = (__pyx_v_lex->flags | (__pyx_v_one << __pyx_v_flag_id));

    /* "lexeme.pxd":88
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:
 *         cdef flags_t one = 1
 *         if value:             # <<<<<<<<<<<<<<
 *             lex.flags |= one << flag_id
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lexeme.pxd":91
 *             lex.flags |= one << flag_id
 *         else:
 *             lex.flags &= ~(one << flag_id)             # <<<<<<<<<<<<<<
 */
  /*else*/ {
    __pyx_v_lex->flags = (__pyx_v_lex->flags & (~(__pyx_v_one << __pyx_v_flag_id)));
  }
  __pyx_L3:;

  /* "lexeme.pxd":86
 * 
 *     @staticmethod
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if value:
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}
static struct __pyx_vtabstruct_5spacy_10morphology_Morphology __pyx_vtable_5spacy_10morphology_Morphology;

static PyObject *__pyx_tp_new_5spacy_10morphology_Morphology(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5spacy_10morphology_Morphology *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5spacy_10morphology_Morphology *)o);
  p->__pyx_vtab = __pyx_vtabptr_5spacy_10morphology_Morphology;
  p->mem = ((struct __pyx_obj_5cymem_5cymem_Pool *)Py_None); Py_INCREF(Py_None);
  p->strings = ((struct __pyx_obj_5spacy_7strings_StringStore *)Py_None); Py_INCREF(Py_None);
  p->lemmatizer = Py_None; Py_INCREF(Py_None);
  p->tag_map = Py_None; Py_INCREF(Py_None);
  p->n_tags = Py_None; Py_INCREF(Py_None);
  p->reverse_index = Py_None; Py_INCREF(Py_None);
  p->tag_names = Py_None; Py_INCREF(Py_None);
  p->_cache = ((struct __pyx_obj_7preshed_4maps_PreshMapArray *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5spacy_10morphology_Morphology(PyObject *o) {
  struct __pyx_obj_5spacy_10morphology_Morphology *p = (struct __pyx_obj_5spacy_10morphology_Morphology *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->mem);
  Py_CLEAR(p->strings);
  Py_CLEAR(p->lemmatizer);
  Py_CLEAR(p->tag_map);
  Py_CLEAR(p->n_tags);
  Py_CLEAR(p->reverse_index);
  Py_CLEAR(p->tag_names);
  Py_CLEAR(p->_cache);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5spacy_10morphology_Morphology(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5spacy_10morphology_Morphology *p = (struct __pyx_obj_5spacy_10morphology_Morphology *)o;
  if (p->mem) {
    e = (*v)(((PyObject*)p->mem), a); if (e) return e;
  }
  if (p->strings) {
    e = (*v)(((PyObject*)p->strings), a); if (e) return e;
  }
  if (p->lemmatizer) {
    e = (*v)(p->lemmatizer, a); if (e) return e;
  }
  if (p->tag_map) {
    e = (*v)(p->tag_map, a); if (e) return e;
  }
  if (p->n_tags) {
    e = (*v)(p->n_tags, a); if (e) return e;
  }
  if (p->reverse_index) {
    e = (*v)(p->reverse_index, a); if (e) return e;
  }
  if (p->tag_names) {
    e = (*v)(p->tag_names, a); if (e) return e;
  }
  if (p->_cache) {
    e = (*v)(((PyObject*)p->_cache), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5spacy_10morphology_Morphology(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5spacy_10morphology_Morphology *p = (struct __pyx_obj_5spacy_10morphology_Morphology *)o;
  tmp = ((PyObject*)p->mem);
  p->mem = ((struct __pyx_obj_5cymem_5cymem_Pool *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->strings);
  p->strings = ((struct __pyx_obj_5spacy_7strings_StringStore *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lemmatizer);
  p->lemmatizer = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->tag_map);
  p->tag_map = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->n_tags);
  p->n_tags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->reverse_index);
  p->reverse_index = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->tag_names);
  p->tag_names = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_cache);
  p->_cache = ((struct __pyx_obj_7preshed_4maps_PreshMapArray *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_mem(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_3mem_1__get__(o);
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_strings(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_7strings_1__get__(o);
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_lemmatizer(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_1__get__(o);
}

static int __pyx_setprop_5spacy_10morphology_10Morphology_lemmatizer(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_3__set__(o, v);
  }
  else {
    return __pyx_pw_5spacy_10morphology_10Morphology_10lemmatizer_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_tag_map(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_7tag_map_1__get__(o);
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_n_tags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_1__get__(o);
}

static int __pyx_setprop_5spacy_10morphology_10Morphology_n_tags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_3__set__(o, v);
  }
  else {
    return __pyx_pw_5spacy_10morphology_10Morphology_6n_tags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_reverse_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_1__get__(o);
}

static int __pyx_setprop_5spacy_10morphology_10Morphology_reverse_index(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_3__set__(o, v);
  }
  else {
    return __pyx_pw_5spacy_10morphology_10Morphology_13reverse_index_5__del__(o);
  }
}

static PyObject *__pyx_getprop_5spacy_10morphology_10Morphology_tag_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_1__get__(o);
}

static int __pyx_setprop_5spacy_10morphology_10Morphology_tag_names(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_3__set__(o, v);
  }
  else {
    return __pyx_pw_5spacy_10morphology_10Morphology_9tag_names_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_5spacy_10morphology_Morphology[] = {
  {"__reduce__", (PyCFunction)__pyx_pw_5spacy_10morphology_10Morphology_3__reduce__, METH_NOARGS, 0},
  {"add_special_case", (PyCFunction)__pyx_pw_5spacy_10morphology_10Morphology_5add_special_case, METH_VARARGS|METH_KEYWORDS, __pyx_doc_5spacy_10morphology_10Morphology_4add_special_case},
  {"load_morph_exceptions", (PyCFunction)__pyx_pw_5spacy_10morphology_10Morphology_7load_morph_exceptions, METH_O, 0},
  {"lemmatize", (PyCFunction)__pyx_pw_5spacy_10morphology_10Morphology_9lemmatize, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_5spacy_10morphology_Morphology[] = {
  {(char *)"mem", __pyx_getprop_5spacy_10morphology_10Morphology_mem, 0, 0, 0},
  {(char *)"strings", __pyx_getprop_5spacy_10morphology_10Morphology_strings, 0, 0, 0},
  {(char *)"lemmatizer", __pyx_getprop_5spacy_10morphology_10Morphology_lemmatizer, __pyx_setprop_5spacy_10morphology_10Morphology_lemmatizer, 0, 0},
  {(char *)"tag_map", __pyx_getprop_5spacy_10morphology_10Morphology_tag_map, 0, 0, 0},
  {(char *)"n_tags", __pyx_getprop_5spacy_10morphology_10Morphology_n_tags, __pyx_setprop_5spacy_10morphology_10Morphology_n_tags, 0, 0},
  {(char *)"reverse_index", __pyx_getprop_5spacy_10morphology_10Morphology_reverse_index, __pyx_setprop_5spacy_10morphology_10Morphology_reverse_index, 0, 0},
  {(char *)"tag_names", __pyx_getprop_5spacy_10morphology_10Morphology_tag_names, __pyx_setprop_5spacy_10morphology_10Morphology_tag_names, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5spacy_10morphology_Morphology = {
  PyVarObject_HEAD_INIT(0, 0)
  "spacy.morphology.Morphology", /*tp_name*/
  sizeof(struct __pyx_obj_5spacy_10morphology_Morphology), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5spacy_10morphology_Morphology, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5spacy_10morphology_Morphology, /*tp_traverse*/
  __pyx_tp_clear_5spacy_10morphology_Morphology, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5spacy_10morphology_Morphology, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_5spacy_10morphology_Morphology, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5spacy_10morphology_10Morphology_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5spacy_10morphology_Morphology, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "morphology",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_Abbr_yes, __pyx_k_Abbr_yes, sizeof(__pyx_k_Abbr_yes), 0, 1, 0, 0},
  {&__pyx_kp_u_AdpType_circ, __pyx_k_AdpType_circ, sizeof(__pyx_k_AdpType_circ), 0, 1, 0, 0},
  {&__pyx_kp_u_AdpType_comprep, __pyx_k_AdpType_comprep, sizeof(__pyx_k_AdpType_comprep), 0, 1, 0, 0},
  {&__pyx_kp_u_AdpType_post, __pyx_k_AdpType_post, sizeof(__pyx_k_AdpType_post), 0, 1, 0, 0},
  {&__pyx_kp_u_AdpType_prep, __pyx_k_AdpType_prep, sizeof(__pyx_k_AdpType_prep), 0, 1, 0, 0},
  {&__pyx_kp_u_AdpType_voc, __pyx_k_AdpType_voc, sizeof(__pyx_k_AdpType_voc), 0, 1, 0, 0},
  {&__pyx_n_u_AdvType_adadj, __pyx_k_AdvType_adadj, sizeof(__pyx_k_AdvType_adadj), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_cau, __pyx_k_AdvType_cau, sizeof(__pyx_k_AdvType_cau), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_deg, __pyx_k_AdvType_deg, sizeof(__pyx_k_AdvType_deg), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_ex, __pyx_k_AdvType_ex, sizeof(__pyx_k_AdvType_ex), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_loc, __pyx_k_AdvType_loc, sizeof(__pyx_k_AdvType_loc), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_man, __pyx_k_AdvType_man, sizeof(__pyx_k_AdvType_man), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_mod, __pyx_k_AdvType_mod, sizeof(__pyx_k_AdvType_mod), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_sta, __pyx_k_AdvType_sta, sizeof(__pyx_k_AdvType_sta), 0, 1, 0, 1},
  {&__pyx_n_u_AdvType_tim, __pyx_k_AdvType_tim, sizeof(__pyx_k_AdvType_tim), 0, 1, 0, 1},
  {&__pyx_n_u_Animacy_anim, __pyx_k_Animacy_anim, sizeof(__pyx_k_Animacy_anim), 0, 1, 0, 1},
  {&__pyx_n_u_Animacy_inam, __pyx_k_Animacy_inam, sizeof(__pyx_k_Animacy_inam), 0, 1, 0, 1},
  {&__pyx_n_u_Aspect_freq, __pyx_k_Aspect_freq, sizeof(__pyx_k_Aspect_freq), 0, 1, 0, 1},
  {&__pyx_n_u_Aspect_imp, __pyx_k_Aspect_imp, sizeof(__pyx_k_Aspect_imp), 0, 1, 0, 1},
  {&__pyx_n_u_Aspect_mod, __pyx_k_Aspect_mod, sizeof(__pyx_k_Aspect_mod), 0, 1, 0, 1},
  {&__pyx_n_u_Aspect_none, __pyx_k_Aspect_none, sizeof(__pyx_k_Aspect_none), 0, 1, 0, 1},
  {&__pyx_n_u_Aspect_perf, __pyx_k_Aspect_perf, sizeof(__pyx_k_Aspect_perf), 0, 1, 0, 1},
  {&__pyx_n_u_Case_abe, __pyx_k_Case_abe, sizeof(__pyx_k_Case_abe), 0, 1, 0, 1},
  {&__pyx_n_u_Case_abl, __pyx_k_Case_abl, sizeof(__pyx_k_Case_abl), 0, 1, 0, 1},
  {&__pyx_n_u_Case_abs, __pyx_k_Case_abs, sizeof(__pyx_k_Case_abs), 0, 1, 0, 1},
  {&__pyx_n_u_Case_acc, __pyx_k_Case_acc, sizeof(__pyx_k_Case_acc), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ade, __pyx_k_Case_ade, sizeof(__pyx_k_Case_ade), 0, 1, 0, 1},
  {&__pyx_n_u_Case_all, __pyx_k_Case_all, sizeof(__pyx_k_Case_all), 0, 1, 0, 1},
  {&__pyx_n_u_Case_cau, __pyx_k_Case_cau, sizeof(__pyx_k_Case_cau), 0, 1, 0, 1},
  {&__pyx_n_u_Case_com, __pyx_k_Case_com, sizeof(__pyx_k_Case_com), 0, 1, 0, 1},
  {&__pyx_n_u_Case_dat, __pyx_k_Case_dat, sizeof(__pyx_k_Case_dat), 0, 1, 0, 1},
  {&__pyx_n_u_Case_del, __pyx_k_Case_del, sizeof(__pyx_k_Case_del), 0, 1, 0, 1},
  {&__pyx_n_u_Case_dis, __pyx_k_Case_dis, sizeof(__pyx_k_Case_dis), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ela, __pyx_k_Case_ela, sizeof(__pyx_k_Case_ela), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ess, __pyx_k_Case_ess, sizeof(__pyx_k_Case_ess), 0, 1, 0, 1},
  {&__pyx_n_u_Case_gen, __pyx_k_Case_gen, sizeof(__pyx_k_Case_gen), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ill, __pyx_k_Case_ill, sizeof(__pyx_k_Case_ill), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ine, __pyx_k_Case_ine, sizeof(__pyx_k_Case_ine), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ins, __pyx_k_Case_ins, sizeof(__pyx_k_Case_ins), 0, 1, 0, 1},
  {&__pyx_n_u_Case_lat, __pyx_k_Case_lat, sizeof(__pyx_k_Case_lat), 0, 1, 0, 1},
  {&__pyx_n_u_Case_loc, __pyx_k_Case_loc, sizeof(__pyx_k_Case_loc), 0, 1, 0, 1},
  {&__pyx_n_u_Case_nom, __pyx_k_Case_nom, sizeof(__pyx_k_Case_nom), 0, 1, 0, 1},
  {&__pyx_n_u_Case_par, __pyx_k_Case_par, sizeof(__pyx_k_Case_par), 0, 1, 0, 1},
  {&__pyx_n_u_Case_sub, __pyx_k_Case_sub, sizeof(__pyx_k_Case_sub), 0, 1, 0, 1},
  {&__pyx_n_u_Case_sup, __pyx_k_Case_sup, sizeof(__pyx_k_Case_sup), 0, 1, 0, 1},
  {&__pyx_n_u_Case_tem, __pyx_k_Case_tem, sizeof(__pyx_k_Case_tem), 0, 1, 0, 1},
  {&__pyx_n_u_Case_ter, __pyx_k_Case_ter, sizeof(__pyx_k_Case_ter), 0, 1, 0, 1},
  {&__pyx_n_u_Case_tra, __pyx_k_Case_tra, sizeof(__pyx_k_Case_tra), 0, 1, 0, 1},
  {&__pyx_n_u_Case_voc, __pyx_k_Case_voc, sizeof(__pyx_k_Case_voc), 0, 1, 0, 1},
  {&__pyx_kp_u_Conflicting_morphology_exception, __pyx_k_Conflicting_morphology_exception, sizeof(__pyx_k_Conflicting_morphology_exception), 0, 1, 0, 0},
  {&__pyx_kp_u_ConjType_comp, __pyx_k_ConjType_comp, sizeof(__pyx_k_ConjType_comp), 0, 1, 0, 0},
  {&__pyx_kp_u_ConjType_oper, __pyx_k_ConjType_oper, sizeof(__pyx_k_ConjType_oper), 0, 1, 0, 0},
  {&__pyx_kp_u_Connegative_yes, __pyx_k_Connegative_yes, sizeof(__pyx_k_Connegative_yes), 0, 1, 0, 0},
  {&__pyx_n_u_Definite_cons, __pyx_k_Definite_cons, sizeof(__pyx_k_Definite_cons), 0, 1, 0, 1},
  {&__pyx_n_u_Definite_def, __pyx_k_Definite_def, sizeof(__pyx_k_Definite_def), 0, 1, 0, 1},
  {&__pyx_n_u_Definite_ind, __pyx_k_Definite_ind, sizeof(__pyx_k_Definite_ind), 0, 1, 0, 1},
  {&__pyx_n_u_Definite_red, __pyx_k_Definite_red, sizeof(__pyx_k_Definite_red), 0, 1, 0, 1},
  {&__pyx_n_u_Definite_two, __pyx_k_Definite_two, sizeof(__pyx_k_Definite_two), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_abs, __pyx_k_Degree_abs, sizeof(__pyx_k_Degree_abs), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_cmp, __pyx_k_Degree_cmp, sizeof(__pyx_k_Degree_cmp), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_com, __pyx_k_Degree_com, sizeof(__pyx_k_Degree_com), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_comp, __pyx_k_Degree_comp, sizeof(__pyx_k_Degree_comp), 0, 1, 0, 1},
  {&__pyx_kp_u_Degree_dim, __pyx_k_Degree_dim, sizeof(__pyx_k_Degree_dim), 0, 1, 0, 0},
  {&__pyx_n_u_Degree_none, __pyx_k_Degree_none, sizeof(__pyx_k_Degree_none), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_pos, __pyx_k_Degree_pos, sizeof(__pyx_k_Degree_pos), 0, 1, 0, 1},
  {&__pyx_n_u_Degree_sup, __pyx_k_Degree_sup, sizeof(__pyx_k_Degree_sup), 0, 1, 0, 1},
  {&__pyx_kp_u_Derivation_inen, __pyx_k_Derivation_inen, sizeof(__pyx_k_Derivation_inen), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_ja, __pyx_k_Derivation_ja, sizeof(__pyx_k_Derivation_ja), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_lainen, __pyx_k_Derivation_lainen, sizeof(__pyx_k_Derivation_lainen), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_minen, __pyx_k_Derivation_minen, sizeof(__pyx_k_Derivation_minen), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_sti, __pyx_k_Derivation_sti, sizeof(__pyx_k_Derivation_sti), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_ton, __pyx_k_Derivation_ton, sizeof(__pyx_k_Derivation_ton), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_ttaa, __pyx_k_Derivation_ttaa, sizeof(__pyx_k_Derivation_ttaa), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_ttain, __pyx_k_Derivation_ttain, sizeof(__pyx_k_Derivation_ttain), 0, 1, 0, 0},
  {&__pyx_kp_u_Derivation_vs, __pyx_k_Derivation_vs, sizeof(__pyx_k_Derivation_vs), 0, 1, 0, 0},
  {&__pyx_kp_s_E_Twilight_Projects_Python_Spacy, __pyx_k_E_Twilight_Projects_Python_Spacy, sizeof(__pyx_k_E_Twilight_Projects_Python_Spacy), 0, 0, 1, 0},
  {&__pyx_kp_u_Echo_ech, __pyx_k_Echo_ech, sizeof(__pyx_k_Echo_ech), 0, 1, 0, 0},
  {&__pyx_kp_u_Echo_rdp, __pyx_k_Echo_rdp, sizeof(__pyx_k_Echo_rdp), 0, 1, 0, 0},
  {&__pyx_kp_u_Foreign_foreign, __pyx_k_Foreign_foreign, sizeof(__pyx_k_Foreign_foreign), 0, 1, 0, 0},
  {&__pyx_kp_u_Foreign_fscript, __pyx_k_Foreign_fscript, sizeof(__pyx_k_Foreign_fscript), 0, 1, 0, 0},
  {&__pyx_kp_u_Foreign_tscript, __pyx_k_Foreign_tscript, sizeof(__pyx_k_Foreign_tscript), 0, 1, 0, 0},
  {&__pyx_kp_u_Foreign_yes, __pyx_k_Foreign_yes, sizeof(__pyx_k_Foreign_yes), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_u_Gender_com, __pyx_k_Gender_com, sizeof(__pyx_k_Gender_com), 0, 1, 0, 1},
  {&__pyx_kp_u_Gender_dat_fem, __pyx_k_Gender_dat_fem, sizeof(__pyx_k_Gender_dat_fem), 0, 1, 0, 0},
  {&__pyx_kp_u_Gender_dat_masc, __pyx_k_Gender_dat_masc, sizeof(__pyx_k_Gender_dat_masc), 0, 1, 0, 0},
  {&__pyx_kp_u_Gender_erg_fem, __pyx_k_Gender_erg_fem, sizeof(__pyx_k_Gender_erg_fem), 0, 1, 0, 0},
  {&__pyx_kp_u_Gender_erg_masc, __pyx_k_Gender_erg_masc, sizeof(__pyx_k_Gender_erg_masc), 0, 1, 0, 0},
  {&__pyx_n_u_Gender_fem, __pyx_k_Gender_fem, sizeof(__pyx_k_Gender_fem), 0, 1, 0, 1},
  {&__pyx_n_u_Gender_masc, __pyx_k_Gender_masc, sizeof(__pyx_k_Gender_masc), 0, 1, 0, 1},
  {&__pyx_n_u_Gender_neut, __pyx_k_Gender_neut, sizeof(__pyx_k_Gender_neut), 0, 1, 0, 1},
  {&__pyx_kp_u_Gender_psor_fem, __pyx_k_Gender_psor_fem, sizeof(__pyx_k_Gender_psor_fem), 0, 1, 0, 0},
  {&__pyx_kp_u_Gender_psor_masc, __pyx_k_Gender_psor_masc, sizeof(__pyx_k_Gender_psor_masc), 0, 1, 0, 0},
  {&__pyx_kp_u_Gender_psor_neut, __pyx_k_Gender_psor_neut, sizeof(__pyx_k_Gender_psor_neut), 0, 1, 0, 0},
  {&__pyx_kp_u_Hyph_yes, __pyx_k_Hyph_yes, sizeof(__pyx_k_Hyph_yes), 0, 1, 0, 0},
  {&__pyx_n_s_IDS, __pyx_k_IDS, sizeof(__pyx_k_IDS), 0, 0, 1, 1},
  {&__pyx_kp_u_InfForm_one, __pyx_k_InfForm_one, sizeof(__pyx_k_InfForm_one), 0, 1, 0, 0},
  {&__pyx_kp_u_InfForm_three, __pyx_k_InfForm_three, sizeof(__pyx_k_InfForm_three), 0, 1, 0, 0},
  {&__pyx_kp_u_InfForm_two, __pyx_k_InfForm_two, sizeof(__pyx_k_InfForm_two), 0, 1, 0, 0},
  {&__pyx_n_s_LEMMA, __pyx_k_LEMMA, sizeof(__pyx_k_LEMMA), 0, 0, 1, 1},
  {&__pyx_n_u_Mood_cnd, __pyx_k_Mood_cnd, sizeof(__pyx_k_Mood_cnd), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_imp, __pyx_k_Mood_imp, sizeof(__pyx_k_Mood_imp), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_ind, __pyx_k_Mood_ind, sizeof(__pyx_k_Mood_ind), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_n, __pyx_k_Mood_n, sizeof(__pyx_k_Mood_n), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_opt, __pyx_k_Mood_opt, sizeof(__pyx_k_Mood_opt), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_pot, __pyx_k_Mood_pot, sizeof(__pyx_k_Mood_pot), 0, 1, 0, 1},
  {&__pyx_n_u_Mood_sub, __pyx_k_Mood_sub, sizeof(__pyx_k_Mood_sub), 0, 1, 0, 1},
  {&__pyx_n_s_NAMES, __pyx_k_NAMES, sizeof(__pyx_k_NAMES), 0, 0, 1, 1},
  {&__pyx_kp_u_NameType_com, __pyx_k_NameType_com, sizeof(__pyx_k_NameType_com), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_geo, __pyx_k_NameType_geo, sizeof(__pyx_k_NameType_geo), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_giv, __pyx_k_NameType_giv, sizeof(__pyx_k_NameType_giv), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_nat, __pyx_k_NameType_nat, sizeof(__pyx_k_NameType_nat), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_oth, __pyx_k_NameType_oth, sizeof(__pyx_k_NameType_oth), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_pro, __pyx_k_NameType_pro, sizeof(__pyx_k_NameType_pro), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_prs, __pyx_k_NameType_prs, sizeof(__pyx_k_NameType_prs), 0, 1, 0, 0},
  {&__pyx_kp_u_NameType_sur, __pyx_k_NameType_sur, sizeof(__pyx_k_NameType_sur), 0, 1, 0, 0},
  {&__pyx_n_u_Negative_neg, __pyx_k_Negative_neg, sizeof(__pyx_k_Negative_neg), 0, 1, 0, 1},
  {&__pyx_n_u_Negative_pos, __pyx_k_Negative_pos, sizeof(__pyx_k_Negative_pos), 0, 1, 0, 1},
  {&__pyx_n_u_Negative_yes, __pyx_k_Negative_yes, sizeof(__pyx_k_Negative_yes), 0, 1, 0, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_kp_u_NounType_class, __pyx_k_NounType_class, sizeof(__pyx_k_NounType_class), 0, 1, 0, 0},
  {&__pyx_kp_u_NounType_com, __pyx_k_NounType_com, sizeof(__pyx_k_NounType_com), 0, 1, 0, 0},
  {&__pyx_kp_u_NounType_prop, __pyx_k_NounType_prop, sizeof(__pyx_k_NounType_prop), 0, 1, 0, 0},
  {&__pyx_kp_u_NumForm_digit, __pyx_k_NumForm_digit, sizeof(__pyx_k_NumForm_digit), 0, 1, 0, 0},
  {&__pyx_kp_u_NumForm_roman, __pyx_k_NumForm_roman, sizeof(__pyx_k_NumForm_roman), 0, 1, 0, 0},
  {&__pyx_kp_u_NumForm_word, __pyx_k_NumForm_word, sizeof(__pyx_k_NumForm_word), 0, 1, 0, 0},
  {&__pyx_n_u_NumType_card, __pyx_k_NumType_card, sizeof(__pyx_k_NumType_card), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_dist, __pyx_k_NumType_dist, sizeof(__pyx_k_NumType_dist), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_frac, __pyx_k_NumType_frac, sizeof(__pyx_k_NumType_frac), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_gen, __pyx_k_NumType_gen, sizeof(__pyx_k_NumType_gen), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_mult, __pyx_k_NumType_mult, sizeof(__pyx_k_NumType_mult), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_none, __pyx_k_NumType_none, sizeof(__pyx_k_NumType_none), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_ord, __pyx_k_NumType_ord, sizeof(__pyx_k_NumType_ord), 0, 1, 0, 1},
  {&__pyx_n_u_NumType_sets, __pyx_k_NumType_sets, sizeof(__pyx_k_NumType_sets), 0, 1, 0, 1},
  {&__pyx_kp_u_NumValue_one, __pyx_k_NumValue_one, sizeof(__pyx_k_NumValue_one), 0, 1, 0, 0},
  {&__pyx_kp_u_NumValue_three, __pyx_k_NumValue_three, sizeof(__pyx_k_NumValue_three), 0, 1, 0, 0},
  {&__pyx_kp_u_NumValue_two, __pyx_k_NumValue_two, sizeof(__pyx_k_NumValue_two), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_abs_plur, __pyx_k_Number_abs_plur, sizeof(__pyx_k_Number_abs_plur), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_abs_sing, __pyx_k_Number_abs_sing, sizeof(__pyx_k_Number_abs_sing), 0, 1, 0, 0},
  {&__pyx_n_u_Number_com, __pyx_k_Number_com, sizeof(__pyx_k_Number_com), 0, 1, 0, 1},
  {&__pyx_kp_u_Number_count, __pyx_k_Number_count, sizeof(__pyx_k_Number_count), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_dat_plur, __pyx_k_Number_dat_plur, sizeof(__pyx_k_Number_dat_plur), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_dat_sing, __pyx_k_Number_dat_sing, sizeof(__pyx_k_Number_dat_sing), 0, 1, 0, 0},
  {&__pyx_n_u_Number_dual, __pyx_k_Number_dual, sizeof(__pyx_k_Number_dual), 0, 1, 0, 1},
  {&__pyx_kp_u_Number_erg_plur, __pyx_k_Number_erg_plur, sizeof(__pyx_k_Number_erg_plur), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_erg_sing, __pyx_k_Number_erg_sing, sizeof(__pyx_k_Number_erg_sing), 0, 1, 0, 0},
  {&__pyx_n_u_Number_none, __pyx_k_Number_none, sizeof(__pyx_k_Number_none), 0, 1, 0, 1},
  {&__pyx_n_u_Number_plur, __pyx_k_Number_plur, sizeof(__pyx_k_Number_plur), 0, 1, 0, 1},
  {&__pyx_kp_u_Number_psee_plur, __pyx_k_Number_psee_plur, sizeof(__pyx_k_Number_psee_plur), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_psee_sing, __pyx_k_Number_psee_sing, sizeof(__pyx_k_Number_psee_sing), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_psor_plur, __pyx_k_Number_psor_plur, sizeof(__pyx_k_Number_psor_plur), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_psor_sing, __pyx_k_Number_psor_sing, sizeof(__pyx_k_Number_psor_sing), 0, 1, 0, 0},
  {&__pyx_kp_u_Number_ptan, __pyx_k_Number_ptan, sizeof(__pyx_k_Number_ptan), 0, 1, 0, 0},
  {&__pyx_n_u_Number_sing, __pyx_k_Number_sing, sizeof(__pyx_k_Number_sing), 0, 1, 0, 1},
  {&__pyx_n_s_POS_IDS, __pyx_k_POS_IDS, sizeof(__pyx_k_POS_IDS), 0, 0, 1, 1},
  {&__pyx_kp_u_PartForm_agt, __pyx_k_PartForm_agt, sizeof(__pyx_k_PartForm_agt), 0, 1, 0, 0},
  {&__pyx_kp_u_PartForm_neg, __pyx_k_PartForm_neg, sizeof(__pyx_k_PartForm_neg), 0, 1, 0, 0},
  {&__pyx_kp_u_PartForm_past, __pyx_k_PartForm_past, sizeof(__pyx_k_PartForm_past), 0, 1, 0, 0},
  {&__pyx_kp_u_PartForm_pres, __pyx_k_PartForm_pres, sizeof(__pyx_k_PartForm_pres), 0, 1, 0, 0},
  {&__pyx_kp_u_PartType_emp, __pyx_k_PartType_emp, sizeof(__pyx_k_PartType_emp), 0, 1, 0, 0},
  {&__pyx_kp_u_PartType_inf, __pyx_k_PartType_inf, sizeof(__pyx_k_PartType_inf), 0, 1, 0, 0},
  {&__pyx_kp_u_PartType_mod, __pyx_k_PartType_mod, sizeof(__pyx_k_PartType_mod), 0, 1, 0, 0},
  {&__pyx_kp_u_PartType_res, __pyx_k_PartType_res, sizeof(__pyx_k_PartType_res), 0, 1, 0, 0},
  {&__pyx_kp_u_PartType_vbp, __pyx_k_PartType_vbp, sizeof(__pyx_k_PartType_vbp), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_abs_one, __pyx_k_Person_abs_one, sizeof(__pyx_k_Person_abs_one), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_abs_three, __pyx_k_Person_abs_three, sizeof(__pyx_k_Person_abs_three), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_abs_two, __pyx_k_Person_abs_two, sizeof(__pyx_k_Person_abs_two), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_dat_one, __pyx_k_Person_dat_one, sizeof(__pyx_k_Person_dat_one), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_dat_three, __pyx_k_Person_dat_three, sizeof(__pyx_k_Person_dat_three), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_dat_two, __pyx_k_Person_dat_two, sizeof(__pyx_k_Person_dat_two), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_erg_one, __pyx_k_Person_erg_one, sizeof(__pyx_k_Person_erg_one), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_erg_three, __pyx_k_Person_erg_three, sizeof(__pyx_k_Person_erg_three), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_erg_two, __pyx_k_Person_erg_two, sizeof(__pyx_k_Person_erg_two), 0, 1, 0, 0},
  {&__pyx_n_u_Person_none, __pyx_k_Person_none, sizeof(__pyx_k_Person_none), 0, 1, 0, 1},
  {&__pyx_n_u_Person_one, __pyx_k_Person_one, sizeof(__pyx_k_Person_one), 0, 1, 0, 1},
  {&__pyx_kp_u_Person_psor_one, __pyx_k_Person_psor_one, sizeof(__pyx_k_Person_psor_one), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_psor_three, __pyx_k_Person_psor_three, sizeof(__pyx_k_Person_psor_three), 0, 1, 0, 0},
  {&__pyx_kp_u_Person_psor_two, __pyx_k_Person_psor_two, sizeof(__pyx_k_Person_psor_two), 0, 1, 0, 0},
  {&__pyx_n_u_Person_three, __pyx_k_Person_three, sizeof(__pyx_k_Person_three), 0, 1, 0, 1},
  {&__pyx_n_u_Person_two, __pyx_k_Person_two, sizeof(__pyx_k_Person_two), 0, 1, 0, 1},
  {&__pyx_n_u_Polarity_neg, __pyx_k_Polarity_neg, sizeof(__pyx_k_Polarity_neg), 0, 1, 0, 1},
  {&__pyx_n_u_Polarity_pos, __pyx_k_Polarity_pos, sizeof(__pyx_k_Polarity_pos), 0, 1, 0, 1},
  {&__pyx_kp_u_Polite_abs_inf, __pyx_k_Polite_abs_inf, sizeof(__pyx_k_Polite_abs_inf), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_abs_pol, __pyx_k_Polite_abs_pol, sizeof(__pyx_k_Polite_abs_pol), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_dat_inf, __pyx_k_Polite_dat_inf, sizeof(__pyx_k_Polite_dat_inf), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_dat_pol, __pyx_k_Polite_dat_pol, sizeof(__pyx_k_Polite_dat_pol), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_erg_inf, __pyx_k_Polite_erg_inf, sizeof(__pyx_k_Polite_erg_inf), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_erg_pol, __pyx_k_Polite_erg_pol, sizeof(__pyx_k_Polite_erg_pol), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_inf, __pyx_k_Polite_inf, sizeof(__pyx_k_Polite_inf), 0, 1, 0, 0},
  {&__pyx_kp_u_Polite_pol, __pyx_k_Polite_pol, sizeof(__pyx_k_Polite_pol), 0, 1, 0, 0},
  {&__pyx_n_u_Poss_yes, __pyx_k_Poss_yes, sizeof(__pyx_k_Poss_yes), 0, 1, 0, 1},
  {&__pyx_kp_u_Prefix_yes, __pyx_k_Prefix_yes, sizeof(__pyx_k_Prefix_yes), 0, 1, 0, 0},
  {&__pyx_kp_u_PrepCase_npr, __pyx_k_PrepCase_npr, sizeof(__pyx_k_PrepCase_npr), 0, 1, 0, 0},
  {&__pyx_kp_u_PrepCase_pre, __pyx_k_PrepCase_pre, sizeof(__pyx_k_PrepCase_pre), 0, 1, 0, 0},
  {&__pyx_n_u_PronType_advPart, __pyx_k_PronType_advPart, sizeof(__pyx_k_PronType_advPart), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_art, __pyx_k_PronType_art, sizeof(__pyx_k_PronType_art), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_clit, __pyx_k_PronType_clit, sizeof(__pyx_k_PronType_clit), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_default, __pyx_k_PronType_default, sizeof(__pyx_k_PronType_default), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_dem, __pyx_k_PronType_dem, sizeof(__pyx_k_PronType_dem), 0, 1, 0, 1},
  {&__pyx_kp_u_PronType_exc, __pyx_k_PronType_exc, sizeof(__pyx_k_PronType_exc), 0, 1, 0, 0},
  {&__pyx_n_u_PronType_ind, __pyx_k_PronType_ind, sizeof(__pyx_k_PronType_ind), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_int, __pyx_k_PronType_int, sizeof(__pyx_k_PronType_int), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_neg, __pyx_k_PronType_neg, sizeof(__pyx_k_PronType_neg), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_prs, __pyx_k_PronType_prs, sizeof(__pyx_k_PronType_prs), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_rcp, __pyx_k_PronType_rcp, sizeof(__pyx_k_PronType_rcp), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_rel, __pyx_k_PronType_rel, sizeof(__pyx_k_PronType_rel), 0, 1, 0, 1},
  {&__pyx_n_u_PronType_tot, __pyx_k_PronType_tot, sizeof(__pyx_k_PronType_tot), 0, 1, 0, 1},
  {&__pyx_kp_u_PunctSide_fin, __pyx_k_PunctSide_fin, sizeof(__pyx_k_PunctSide_fin), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctSide_ini, __pyx_k_PunctSide_ini, sizeof(__pyx_k_PunctSide_ini), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_brck, __pyx_k_PunctType_brck, sizeof(__pyx_k_PunctType_brck), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_colo, __pyx_k_PunctType_colo, sizeof(__pyx_k_PunctType_colo), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_comm, __pyx_k_PunctType_comm, sizeof(__pyx_k_PunctType_comm), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_dash, __pyx_k_PunctType_dash, sizeof(__pyx_k_PunctType_dash), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_excl, __pyx_k_PunctType_excl, sizeof(__pyx_k_PunctType_excl), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_peri, __pyx_k_PunctType_peri, sizeof(__pyx_k_PunctType_peri), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_qest, __pyx_k_PunctType_qest, sizeof(__pyx_k_PunctType_qest), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_quot, __pyx_k_PunctType_quot, sizeof(__pyx_k_PunctType_quot), 0, 1, 0, 0},
  {&__pyx_kp_u_PunctType_semi, __pyx_k_PunctType_semi, sizeof(__pyx_k_PunctType_semi), 0, 1, 0, 0},
  {&__pyx_n_u_Reflex_yes, __pyx_k_Reflex_yes, sizeof(__pyx_k_Reflex_yes), 0, 1, 0, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_u_SP, __pyx_k_SP, sizeof(__pyx_k_SP), 0, 1, 0, 1},
  {&__pyx_kp_u_StyleVariant_styleBound, __pyx_k_StyleVariant_styleBound, sizeof(__pyx_k_StyleVariant_styleBound), 0, 1, 0, 0},
  {&__pyx_kp_u_StyleVariant_styleShort, __pyx_k_StyleVariant_styleShort, sizeof(__pyx_k_StyleVariant_styleShort), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_arch, __pyx_k_Style_arch, sizeof(__pyx_k_Style_arch), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_coll, __pyx_k_Style_coll, sizeof(__pyx_k_Style_coll), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_derg, __pyx_k_Style_derg, sizeof(__pyx_k_Style_derg), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_expr, __pyx_k_Style_expr, sizeof(__pyx_k_Style_expr), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_norm, __pyx_k_Style_norm, sizeof(__pyx_k_Style_norm), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_poet, __pyx_k_Style_poet, sizeof(__pyx_k_Style_poet), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_rare, __pyx_k_Style_rare, sizeof(__pyx_k_Style_rare), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_sing, __pyx_k_Style_sing, sizeof(__pyx_k_Style_sing), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_vrnc, __pyx_k_Style_vrnc, sizeof(__pyx_k_Style_vrnc), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_vulg, __pyx_k_Style_vulg, sizeof(__pyx_k_Style_vulg), 0, 1, 0, 0},
  {&__pyx_kp_u_Style_yes, __pyx_k_Style_yes, sizeof(__pyx_k_Style_yes), 0, 1, 0, 0},
  {&__pyx_n_u_Tense_fut, __pyx_k_Tense_fut, sizeof(__pyx_k_Tense_fut), 0, 1, 0, 1},
  {&__pyx_n_u_Tense_imp, __pyx_k_Tense_imp, sizeof(__pyx_k_Tense_imp), 0, 1, 0, 1},
  {&__pyx_n_u_Tense_past, __pyx_k_Tense_past, sizeof(__pyx_k_Tense_past), 0, 1, 0, 1},
  {&__pyx_n_u_Tense_pres, __pyx_k_Tense_pres, sizeof(__pyx_k_Tense_pres), 0, 1, 0, 1},
  {&__pyx_kp_u_Unknown_tag_ID_s, __pyx_k_Unknown_tag_ID_s, sizeof(__pyx_k_Unknown_tag_ID_s), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_u_VerbForm_conv, __pyx_k_VerbForm_conv, sizeof(__pyx_k_VerbForm_conv), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_fin, __pyx_k_VerbForm_fin, sizeof(__pyx_k_VerbForm_fin), 0, 1, 0, 1},
  {&__pyx_kp_u_VerbForm_gdv, __pyx_k_VerbForm_gdv, sizeof(__pyx_k_VerbForm_gdv), 0, 1, 0, 0},
  {&__pyx_n_u_VerbForm_ger, __pyx_k_VerbForm_ger, sizeof(__pyx_k_VerbForm_ger), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_inf, __pyx_k_VerbForm_inf, sizeof(__pyx_k_VerbForm_inf), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_none, __pyx_k_VerbForm_none, sizeof(__pyx_k_VerbForm_none), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_part, __pyx_k_VerbForm_part, sizeof(__pyx_k_VerbForm_part), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_partFut, __pyx_k_VerbForm_partFut, sizeof(__pyx_k_VerbForm_partFut), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_partPast, __pyx_k_VerbForm_partPast, sizeof(__pyx_k_VerbForm_partPast), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_partPres, __pyx_k_VerbForm_partPres, sizeof(__pyx_k_VerbForm_partPres), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_sup, __pyx_k_VerbForm_sup, sizeof(__pyx_k_VerbForm_sup), 0, 1, 0, 1},
  {&__pyx_n_u_VerbForm_trans, __pyx_k_VerbForm_trans, sizeof(__pyx_k_VerbForm_trans), 0, 1, 0, 1},
  {&__pyx_kp_u_VerbType_aux, __pyx_k_VerbType_aux, sizeof(__pyx_k_VerbType_aux), 0, 1, 0, 0},
  {&__pyx_kp_u_VerbType_cop, __pyx_k_VerbType_cop, sizeof(__pyx_k_VerbType_cop), 0, 1, 0, 0},
  {&__pyx_kp_u_VerbType_light, __pyx_k_VerbType_light, sizeof(__pyx_k_VerbType_light), 0, 1, 0, 0},
  {&__pyx_kp_u_VerbType_mod, __pyx_k_VerbType_mod, sizeof(__pyx_k_VerbType_mod), 0, 1, 0, 0},
  {&__pyx_n_u_Voice_act, __pyx_k_Voice_act, sizeof(__pyx_k_Voice_act), 0, 1, 0, 1},
  {&__pyx_n_u_Voice_cau, __pyx_k_Voice_cau, sizeof(__pyx_k_Voice_cau), 0, 1, 0, 1},
  {&__pyx_kp_u_Voice_int, __pyx_k_Voice_int, sizeof(__pyx_k_Voice_int), 0, 1, 0, 0},
  {&__pyx_kp_u_Voice_mid, __pyx_k_Voice_mid, sizeof(__pyx_k_Voice_mid), 0, 1, 0, 0},
  {&__pyx_n_u_Voice_pass, __pyx_k_Voice_pass, sizeof(__pyx_k_Voice_pass), 0, 1, 0, 1},
  {&__pyx_n_s_add_special_case, __pyx_k_add_special_case, sizeof(__pyx_k_add_special_case), 0, 0, 1, 1},
  {&__pyx_n_s_attrs, __pyx_k_attrs, sizeof(__pyx_k_attrs), 0, 0, 1, 1},
  {&__pyx_n_s_do_deprecated, __pyx_k_do_deprecated, sizeof(__pyx_k_do_deprecated), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_force, __pyx_k_force, sizeof(__pyx_k_force), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_intify_attrs, __pyx_k_intify_attrs, sizeof(__pyx_k_intify_attrs), 0, 0, 1, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_lambda, __pyx_k_lambda, sizeof(__pyx_k_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_lemmatize, __pyx_k_lemmatize, sizeof(__pyx_k_lemmatize), 0, 0, 1, 1},
  {&__pyx_n_s_lemmatizer, __pyx_k_lemmatizer, sizeof(__pyx_k_lemmatizer), 0, 0, 1, 1},
  {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_morphology, __pyx_k_morphology, sizeof(__pyx_k_morphology), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_normalize_props, __pyx_k_normalize_props, sizeof(__pyx_k_normalize_props), 0, 0, 1, 1},
  {&__pyx_n_s_orth, __pyx_k_orth, sizeof(__pyx_k_orth), 0, 0, 1, 1},
  {&__pyx_n_s_orth_str, __pyx_k_orth_str, sizeof(__pyx_k_orth_str), 0, 0, 1, 1},
  {&__pyx_n_s_out, __pyx_k_out, sizeof(__pyx_k_out), 0, 0, 1, 1},
  {&__pyx_n_s_parts_of_speech, __pyx_k_parts_of_speech, sizeof(__pyx_k_parts_of_speech), 0, 0, 1, 1},
  {&__pyx_n_u_pos, __pyx_k_pos, sizeof(__pyx_k_pos), 0, 1, 0, 1},
  {&__pyx_n_s_props, __pyx_k_props, sizeof(__pyx_k_props), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_sorted, __pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 0, 1, 1},
  {&__pyx_n_s_spacy_morphology, __pyx_k_spacy_morphology, sizeof(__pyx_k_spacy_morphology), 0, 0, 1, 1},
  {&__pyx_n_s_string_store, __pyx_k_string_store, sizeof(__pyx_k_string_store), 0, 0, 1, 1},
  {&__pyx_n_s_tag_map, __pyx_k_tag_map, sizeof(__pyx_k_tag_map), 0, 0, 1, 1},
  {&__pyx_n_s_tag_str, __pyx_k_tag_str, sizeof(__pyx_k_tag_str), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_univ_pos, __pyx_k_univ_pos, sizeof(__pyx_k_univ_pos), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
  {&__pyx_n_u_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 1, 0, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_n_s_sorted); if (!__pyx_builtin_sorted) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "c:\python\lib\site-packages\Cython\Includes\numpy\__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "spacy\morphology.pyx":14
 * 
 * 
 * def _normalize_props(props):             # <<<<<<<<<<<<<<
 *     """
 *     Transform deprecated string keys to correct names.
 */
  __pyx_tuple__7 = PyTuple_Pack(4, __pyx_n_s_props, __pyx_n_s_out, __pyx_n_s_key, __pyx_n_s_value); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_E_Twilight_Projects_Python_Spacy, __pyx_n_s_normalize_props, 14, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_items.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initmorphology(void); /*proto*/
PyMODINIT_FUNC initmorphology(void)
#else
PyMODINIT_FUNC PyInit_morphology(void); /*proto*/
PyMODINIT_FUNC PyInit_morphology(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *(*__pyx_t_12)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_morphology(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("morphology", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_spacy__morphology) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "spacy.morphology")) {
      if (unlikely(PyDict_SetItemString(modules, "spacy.morphology", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_5spacy_10morphology_Morphology = &__pyx_vtable_5spacy_10morphology_Morphology;
  __pyx_vtable_5spacy_10morphology_Morphology.assign_tag = (int (*)(struct __pyx_obj_5spacy_10morphology_Morphology *, struct __pyx_t_5spacy_7structs_TokenC *, PyObject *))__pyx_f_5spacy_10morphology_10Morphology_assign_tag;
  __pyx_vtable_5spacy_10morphology_Morphology.assign_tag_id = (int (*)(struct __pyx_obj_5spacy_10morphology_Morphology *, struct __pyx_t_5spacy_7structs_TokenC *, int))__pyx_f_5spacy_10morphology_10Morphology_assign_tag_id;
  __pyx_vtable_5spacy_10morphology_Morphology.assign_feature = (int (*)(struct __pyx_obj_5spacy_10morphology_Morphology *, uint64_t *, enum __pyx_t_5spacy_10morphology_univ_morph_t, int))__pyx_f_5spacy_10morphology_10Morphology_assign_feature;
  if (PyType_Ready(&__pyx_type_5spacy_10morphology_Morphology) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_5spacy_10morphology_Morphology.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5spacy_10morphology_Morphology.tp_dict, __pyx_vtabptr_5spacy_10morphology_Morphology) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Morphology", (PyObject *)&__pyx_type_5spacy_10morphology_Morphology) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5spacy_10morphology_Morphology = &__pyx_type_5spacy_10morphology_Morphology;
  /*--- Type import code ---*/
  __pyx_ptype_5cymem_5cymem_Pool = __Pyx_ImportType("cymem.cymem", "Pool", sizeof(struct __pyx_obj_5cymem_5cymem_Pool), 1); if (unlikely(!__pyx_ptype_5cymem_5cymem_Pool)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_5cymem_5cymem_Pool = (struct __pyx_vtabstruct_5cymem_5cymem_Pool*)__Pyx_GetVtable(__pyx_ptype_5cymem_5cymem_Pool->tp_dict); if (unlikely(!__pyx_vtabptr_5cymem_5cymem_Pool)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5cymem_5cymem_Address = __Pyx_ImportType("cymem.cymem", "Address", sizeof(struct __pyx_obj_5cymem_5cymem_Address), 1); if (unlikely(!__pyx_ptype_5cymem_5cymem_Address)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7preshed_4maps_PreshMap = __Pyx_ImportType("preshed.maps", "PreshMap", sizeof(struct __pyx_obj_7preshed_4maps_PreshMap), 1); if (unlikely(!__pyx_ptype_7preshed_4maps_PreshMap)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_7preshed_4maps_PreshMap = (struct __pyx_vtabstruct_7preshed_4maps_PreshMap*)__Pyx_GetVtable(__pyx_ptype_7preshed_4maps_PreshMap->tp_dict); if (unlikely(!__pyx_vtabptr_7preshed_4maps_PreshMap)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7preshed_4maps_PreshMapArray = __Pyx_ImportType("preshed.maps", "PreshMapArray", sizeof(struct __pyx_obj_7preshed_4maps_PreshMapArray), 1); if (unlikely(!__pyx_ptype_7preshed_4maps_PreshMapArray)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_7preshed_4maps_PreshMapArray = (struct __pyx_vtabstruct_7preshed_4maps_PreshMapArray*)__Pyx_GetVtable(__pyx_ptype_7preshed_4maps_PreshMapArray->tp_dict); if (unlikely(!__pyx_vtabptr_7preshed_4maps_PreshMapArray)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5spacy_7strings_StringStore = __Pyx_ImportType("spacy.strings", "StringStore", sizeof(struct __pyx_obj_5spacy_7strings_StringStore), 1); if (unlikely(!__pyx_ptype_5spacy_7strings_StringStore)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_5spacy_7strings_StringStore = (struct __pyx_vtabstruct_5spacy_7strings_StringStore*)__Pyx_GetVtable(__pyx_ptype_5spacy_7strings_StringStore->tp_dict); if (unlikely(!__pyx_vtabptr_5spacy_7strings_StringStore)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5spacy_5vocab_Vocab = __Pyx_ImportType("spacy.vocab", "Vocab", sizeof(struct __pyx_obj_5spacy_5vocab_Vocab), 1); if (unlikely(!__pyx_ptype_5spacy_5vocab_Vocab)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_5spacy_5vocab_Vocab = (struct __pyx_vtabstruct_5spacy_5vocab_Vocab*)__Pyx_GetVtable(__pyx_ptype_5spacy_5vocab_Vocab->tp_dict); if (unlikely(!__pyx_vtabptr_5spacy_5vocab_Vocab)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5spacy_6lexeme_Lexeme = __Pyx_ImportType("spacy.lexeme", "Lexeme", sizeof(struct __pyx_obj_5spacy_6lexeme_Lexeme), 1); if (unlikely(!__pyx_ptype_5spacy_6lexeme_Lexeme)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_5spacy_6lexeme_Lexeme = (struct __pyx_vtabstruct_5spacy_6lexeme_Lexeme*)__Pyx_GetVtable(__pyx_ptype_5spacy_6lexeme_Lexeme->tp_dict); if (unlikely(!__pyx_vtabptr_5spacy_6lexeme_Lexeme)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  __pyx_t_1 = __Pyx_ImportModule("spacy.vocab"); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_1, "EMPTY_LEXEME", (void **)&__pyx_vp_5spacy_5vocab_EMPTY_LEXEME, "struct __pyx_t_5spacy_7structs_LexemeC") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = __Pyx_ImportModule("spacy.lexeme"); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportVoidPtr(__pyx_t_2, "EMPTY_LEXEME", (void **)&__pyx_vp_5spacy_6lexeme_EMPTY_LEXEME, "struct __pyx_t_5spacy_7structs_LexemeC") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  /*--- Function import code ---*/
  __pyx_t_3 = __Pyx_ImportModule("murmurhash.mrmr"); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_ImportFunction(__pyx_t_3, "hash64", (void (**)(void))&__pyx_f_10murmurhash_4mrmr_hash64, "uint64_t (void *, int, uint64_t)") < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "spacy\morphology.pyx":9
 * from .parts_of_speech cimport ADJ, VERB, NOUN, PUNCT
 * from .attrs cimport POS, IS_SPACE
 * from .parts_of_speech import IDS as POS_IDS             # <<<<<<<<<<<<<<
 * from .lexeme cimport Lexeme
 * from .attrs import LEMMA, intify_attrs
 */
  __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_n_s_IDS);
  __Pyx_GIVEREF(__pyx_n_s_IDS);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_IDS);
  __pyx_t_5 = __Pyx_Import(__pyx_n_s_parts_of_speech, __pyx_t_4, 1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_5, __pyx_n_s_IDS); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_POS_IDS, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":11
 * from .parts_of_speech import IDS as POS_IDS
 * from .lexeme cimport Lexeme
 * from .attrs import LEMMA, intify_attrs             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_n_s_LEMMA);
  __Pyx_GIVEREF(__pyx_n_s_LEMMA);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_LEMMA);
  __Pyx_INCREF(__pyx_n_s_intify_attrs);
  __Pyx_GIVEREF(__pyx_n_s_intify_attrs);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_n_s_intify_attrs);
  __pyx_t_4 = __Pyx_Import(__pyx_n_s_attrs, __pyx_t_5, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_LEMMA); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LEMMA, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_intify_attrs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_intify_attrs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":14
 * 
 * 
 * def _normalize_props(props):             # <<<<<<<<<<<<<<
 *     """
 *     Transform deprecated string keys to correct names.
 */
  __pyx_t_4 = PyCFunction_NewEx(&__pyx_mdef_5spacy_10morphology_1_normalize_props, NULL, __pyx_n_s_spacy_morphology); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_normalize_props, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":155
 * 
 * IDS = {
 *     "Animacy_anim": Animacy_anim,             # <<<<<<<<<<<<<<
 *     "Animacy_inam": Animacy_inam,
 *     "Aspect_freq": Aspect_freq,
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Animacy_anim); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Animacy_anim, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":156
 * IDS = {
 *     "Animacy_anim": Animacy_anim,
 *     "Animacy_inam": Animacy_inam,             # <<<<<<<<<<<<<<
 *     "Aspect_freq": Aspect_freq,
 *     "Aspect_imp": Aspect_imp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Animacy_inam); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Animacy_inam, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":157
 *     "Animacy_anim": Animacy_anim,
 *     "Animacy_inam": Animacy_inam,
 *     "Aspect_freq": Aspect_freq,             # <<<<<<<<<<<<<<
 *     "Aspect_imp": Aspect_imp,
 *     "Aspect_mod": Aspect_mod,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_freq); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Aspect_freq, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":158
 *     "Animacy_inam": Animacy_inam,
 *     "Aspect_freq": Aspect_freq,
 *     "Aspect_imp": Aspect_imp,             # <<<<<<<<<<<<<<
 *     "Aspect_mod": Aspect_mod,
 *     "Aspect_none": Aspect_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_imp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Aspect_imp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":159
 *     "Aspect_freq": Aspect_freq,
 *     "Aspect_imp": Aspect_imp,
 *     "Aspect_mod": Aspect_mod,             # <<<<<<<<<<<<<<
 *     "Aspect_none": Aspect_none,
 *     "Aspect_perf": Aspect_perf,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_mod); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Aspect_mod, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":160
 *     "Aspect_imp": Aspect_imp,
 *     "Aspect_mod": Aspect_mod,
 *     "Aspect_none": Aspect_none,             # <<<<<<<<<<<<<<
 *     "Aspect_perf": Aspect_perf,
 *     "Case_abe": Case_abe,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Aspect_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":161
 *     "Aspect_mod": Aspect_mod,
 *     "Aspect_none": Aspect_none,
 *     "Aspect_perf": Aspect_perf,             # <<<<<<<<<<<<<<
 *     "Case_abe": Case_abe,
 *     "Case_abl": Case_abl,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_perf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Aspect_perf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":162
 *     "Aspect_none": Aspect_none,
 *     "Aspect_perf": Aspect_perf,
 *     "Case_abe": Case_abe,             # <<<<<<<<<<<<<<
 *     "Case_abl": Case_abl,
 *     "Case_abs": Case_abs,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abe); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_abe, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":163
 *     "Aspect_perf": Aspect_perf,
 *     "Case_abe": Case_abe,
 *     "Case_abl": Case_abl,             # <<<<<<<<<<<<<<
 *     "Case_abs": Case_abs,
 *     "Case_acc": Case_acc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abl); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_abl, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":164
 *     "Case_abe": Case_abe,
 *     "Case_abl": Case_abl,
 *     "Case_abs": Case_abs,             # <<<<<<<<<<<<<<
 *     "Case_acc": Case_acc,
 *     "Case_ade": Case_ade,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_abs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":165
 *     "Case_abl": Case_abl,
 *     "Case_abs": Case_abs,
 *     "Case_acc": Case_acc,             # <<<<<<<<<<<<<<
 *     "Case_ade": Case_ade,
 *     "Case_all": Case_all,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_acc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_acc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":166
 *     "Case_abs": Case_abs,
 *     "Case_acc": Case_acc,
 *     "Case_ade": Case_ade,             # <<<<<<<<<<<<<<
 *     "Case_all": Case_all,
 *     "Case_cau": Case_cau,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ade); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ade, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":167
 *     "Case_acc": Case_acc,
 *     "Case_ade": Case_ade,
 *     "Case_all": Case_all,             # <<<<<<<<<<<<<<
 *     "Case_cau": Case_cau,
 *     "Case_com": Case_com,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_all); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_all, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":168
 *     "Case_ade": Case_ade,
 *     "Case_all": Case_all,
 *     "Case_cau": Case_cau,             # <<<<<<<<<<<<<<
 *     "Case_com": Case_com,
 *     "Case_dat": Case_dat,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_cau); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_cau, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":169
 *     "Case_all": Case_all,
 *     "Case_cau": Case_cau,
 *     "Case_com": Case_com,             # <<<<<<<<<<<<<<
 *     "Case_dat": Case_dat,
 *     "Case_del": Case_del,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":170
 *     "Case_cau": Case_cau,
 *     "Case_com": Case_com,
 *     "Case_dat": Case_dat,             # <<<<<<<<<<<<<<
 *     "Case_del": Case_del,
 *     "Case_dis": Case_dis,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_dat); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_dat, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":171
 *     "Case_com": Case_com,
 *     "Case_dat": Case_dat,
 *     "Case_del": Case_del,             # <<<<<<<<<<<<<<
 *     "Case_dis": Case_dis,
 *     "Case_ela": Case_ela,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_del); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_del, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":172
 *     "Case_dat": Case_dat,
 *     "Case_del": Case_del,
 *     "Case_dis": Case_dis,             # <<<<<<<<<<<<<<
 *     "Case_ela": Case_ela,
 *     "Case_ess": Case_ess,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_dis); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_dis, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":173
 *     "Case_del": Case_del,
 *     "Case_dis": Case_dis,
 *     "Case_ela": Case_ela,             # <<<<<<<<<<<<<<
 *     "Case_ess": Case_ess,
 *     "Case_gen": Case_gen,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ela); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ela, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":174
 *     "Case_dis": Case_dis,
 *     "Case_ela": Case_ela,
 *     "Case_ess": Case_ess,             # <<<<<<<<<<<<<<
 *     "Case_gen": Case_gen,
 *     "Case_ill": Case_ill,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ess); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ess, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":175
 *     "Case_ela": Case_ela,
 *     "Case_ess": Case_ess,
 *     "Case_gen": Case_gen,             # <<<<<<<<<<<<<<
 *     "Case_ill": Case_ill,
 *     "Case_ine": Case_ine,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_gen); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_gen, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":176
 *     "Case_ess": Case_ess,
 *     "Case_gen": Case_gen,
 *     "Case_ill": Case_ill,             # <<<<<<<<<<<<<<
 *     "Case_ine": Case_ine,
 *     "Case_ins": Case_ins,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ill); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ill, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":177
 *     "Case_gen": Case_gen,
 *     "Case_ill": Case_ill,
 *     "Case_ine": Case_ine,             # <<<<<<<<<<<<<<
 *     "Case_ins": Case_ins,
 *     "Case_loc": Case_loc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ine); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ine, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":178
 *     "Case_ill": Case_ill,
 *     "Case_ine": Case_ine,
 *     "Case_ins": Case_ins,             # <<<<<<<<<<<<<<
 *     "Case_loc": Case_loc,
 *     "Case_lat": Case_lat,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ins); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ins, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":179
 *     "Case_ine": Case_ine,
 *     "Case_ins": Case_ins,
 *     "Case_loc": Case_loc,             # <<<<<<<<<<<<<<
 *     "Case_lat": Case_lat,
 *     "Case_nom": Case_nom,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_loc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_loc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":180
 *     "Case_ins": Case_ins,
 *     "Case_loc": Case_loc,
 *     "Case_lat": Case_lat,             # <<<<<<<<<<<<<<
 *     "Case_nom": Case_nom,
 *     "Case_par": Case_par,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_lat); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_lat, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":181
 *     "Case_loc": Case_loc,
 *     "Case_lat": Case_lat,
 *     "Case_nom": Case_nom,             # <<<<<<<<<<<<<<
 *     "Case_par": Case_par,
 *     "Case_sub": Case_sub,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_nom); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_nom, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":182
 *     "Case_lat": Case_lat,
 *     "Case_nom": Case_nom,
 *     "Case_par": Case_par,             # <<<<<<<<<<<<<<
 *     "Case_sub": Case_sub,
 *     "Case_sup": Case_sup,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_par); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_par, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":183
 *     "Case_nom": Case_nom,
 *     "Case_par": Case_par,
 *     "Case_sub": Case_sub,             # <<<<<<<<<<<<<<
 *     "Case_sup": Case_sup,
 *     "Case_tem": Case_tem,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_sub); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_sub, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":184
 *     "Case_par": Case_par,
 *     "Case_sub": Case_sub,
 *     "Case_sup": Case_sup,             # <<<<<<<<<<<<<<
 *     "Case_tem": Case_tem,
 *     "Case_ter": Case_ter,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_sup); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_sup, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":185
 *     "Case_sub": Case_sub,
 *     "Case_sup": Case_sup,
 *     "Case_tem": Case_tem,             # <<<<<<<<<<<<<<
 *     "Case_ter": Case_ter,
 *     "Case_tra": Case_tra,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_tem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_tem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":186
 *     "Case_sup": Case_sup,
 *     "Case_tem": Case_tem,
 *     "Case_ter": Case_ter,             # <<<<<<<<<<<<<<
 *     "Case_tra": Case_tra,
 *     "Case_voc": Case_voc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ter); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_ter, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":187
 *     "Case_tem": Case_tem,
 *     "Case_ter": Case_ter,
 *     "Case_tra": Case_tra,             # <<<<<<<<<<<<<<
 *     "Case_voc": Case_voc,
 *     "Definite_two": Definite_two,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_tra); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_tra, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":188
 *     "Case_ter": Case_ter,
 *     "Case_tra": Case_tra,
 *     "Case_voc": Case_voc,             # <<<<<<<<<<<<<<
 *     "Definite_two": Definite_two,
 *     "Definite_def": Definite_def,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_voc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Case_voc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":189
 *     "Case_tra": Case_tra,
 *     "Case_voc": Case_voc,
 *     "Definite_two": Definite_two,             # <<<<<<<<<<<<<<
 *     "Definite_def": Definite_def,
 *     "Definite_red": Definite_red,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Definite_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":190
 *     "Case_voc": Case_voc,
 *     "Definite_two": Definite_two,
 *     "Definite_def": Definite_def,             # <<<<<<<<<<<<<<
 *     "Definite_red": Definite_red,
 *     "Definite_cons": Definite_cons, # U20
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_def); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Definite_def, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":191
 *     "Definite_two": Definite_two,
 *     "Definite_def": Definite_def,
 *     "Definite_red": Definite_red,             # <<<<<<<<<<<<<<
 *     "Definite_cons": Definite_cons, # U20
 *     "Definite_ind": Definite_ind,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_red); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Definite_red, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":192
 *     "Definite_def": Definite_def,
 *     "Definite_red": Definite_red,
 *     "Definite_cons": Definite_cons, # U20             # <<<<<<<<<<<<<<
 *     "Definite_ind": Definite_ind,
 *     "Degree_cmp": Degree_cmp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_cons); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Definite_cons, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":193
 *     "Definite_red": Definite_red,
 *     "Definite_cons": Definite_cons, # U20
 *     "Definite_ind": Definite_ind,             # <<<<<<<<<<<<<<
 *     "Degree_cmp": Degree_cmp,
 *     "Degree_comp": Degree_comp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_ind); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Definite_ind, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":194
 *     "Definite_cons": Definite_cons, # U20
 *     "Definite_ind": Definite_ind,
 *     "Degree_cmp": Degree_cmp,             # <<<<<<<<<<<<<<
 *     "Degree_comp": Degree_comp,
 *     "Degree_none": Degree_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_cmp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_cmp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":195
 *     "Definite_ind": Definite_ind,
 *     "Degree_cmp": Degree_cmp,
 *     "Degree_comp": Degree_comp,             # <<<<<<<<<<<<<<
 *     "Degree_none": Degree_none,
 *     "Degree_pos": Degree_pos,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_comp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_comp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":196
 *     "Degree_cmp": Degree_cmp,
 *     "Degree_comp": Degree_comp,
 *     "Degree_none": Degree_none,             # <<<<<<<<<<<<<<
 *     "Degree_pos": Degree_pos,
 *     "Degree_sup": Degree_sup,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":197
 *     "Degree_comp": Degree_comp,
 *     "Degree_none": Degree_none,
 *     "Degree_pos": Degree_pos,             # <<<<<<<<<<<<<<
 *     "Degree_sup": Degree_sup,
 *     "Degree_abs": Degree_abs,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_pos); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_pos, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":198
 *     "Degree_none": Degree_none,
 *     "Degree_pos": Degree_pos,
 *     "Degree_sup": Degree_sup,             # <<<<<<<<<<<<<<
 *     "Degree_abs": Degree_abs,
 *     "Degree_com": Degree_com,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_sup); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_sup, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":199
 *     "Degree_pos": Degree_pos,
 *     "Degree_sup": Degree_sup,
 *     "Degree_abs": Degree_abs,             # <<<<<<<<<<<<<<
 *     "Degree_com": Degree_com,
 *     "Degree_dim ": Degree_dim, # du
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_abs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_abs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":200
 *     "Degree_sup": Degree_sup,
 *     "Degree_abs": Degree_abs,
 *     "Degree_com": Degree_com,             # <<<<<<<<<<<<<<
 *     "Degree_dim ": Degree_dim, # du
 *     "Gender_com": Gender_com,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Degree_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":201
 *     "Degree_abs": Degree_abs,
 *     "Degree_com": Degree_com,
 *     "Degree_dim ": Degree_dim, # du             # <<<<<<<<<<<<<<
 *     "Gender_com": Gender_com,
 *     "Gender_fem": Gender_fem,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_dim); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Degree_dim, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":202
 *     "Degree_com": Degree_com,
 *     "Degree_dim ": Degree_dim, # du
 *     "Gender_com": Gender_com,             # <<<<<<<<<<<<<<
 *     "Gender_fem": Gender_fem,
 *     "Gender_masc": Gender_masc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Gender_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":203
 *     "Degree_dim ": Degree_dim, # du
 *     "Gender_com": Gender_com,
 *     "Gender_fem": Gender_fem,             # <<<<<<<<<<<<<<
 *     "Gender_masc": Gender_masc,
 *     "Gender_neut": Gender_neut,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_fem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Gender_fem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":204
 *     "Gender_com": Gender_com,
 *     "Gender_fem": Gender_fem,
 *     "Gender_masc": Gender_masc,             # <<<<<<<<<<<<<<
 *     "Gender_neut": Gender_neut,
 *     "Mood_cnd": Mood_cnd,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_masc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Gender_masc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":205
 *     "Gender_fem": Gender_fem,
 *     "Gender_masc": Gender_masc,
 *     "Gender_neut": Gender_neut,             # <<<<<<<<<<<<<<
 *     "Mood_cnd": Mood_cnd,
 *     "Mood_imp": Mood_imp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_neut); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Gender_neut, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":206
 *     "Gender_masc": Gender_masc,
 *     "Gender_neut": Gender_neut,
 *     "Mood_cnd": Mood_cnd,             # <<<<<<<<<<<<<<
 *     "Mood_imp": Mood_imp,
 *     "Mood_ind": Mood_ind,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_cnd); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_cnd, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":207
 *     "Gender_neut": Gender_neut,
 *     "Mood_cnd": Mood_cnd,
 *     "Mood_imp": Mood_imp,             # <<<<<<<<<<<<<<
 *     "Mood_ind": Mood_ind,
 *     "Mood_n": Mood_n,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_imp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_imp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":208
 *     "Mood_cnd": Mood_cnd,
 *     "Mood_imp": Mood_imp,
 *     "Mood_ind": Mood_ind,             # <<<<<<<<<<<<<<
 *     "Mood_n": Mood_n,
 *     "Mood_pot": Mood_pot,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_ind); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_ind, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":209
 *     "Mood_imp": Mood_imp,
 *     "Mood_ind": Mood_ind,
 *     "Mood_n": Mood_n,             # <<<<<<<<<<<<<<
 *     "Mood_pot": Mood_pot,
 *     "Mood_sub": Mood_sub,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_n); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_n, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":210
 *     "Mood_ind": Mood_ind,
 *     "Mood_n": Mood_n,
 *     "Mood_pot": Mood_pot,             # <<<<<<<<<<<<<<
 *     "Mood_sub": Mood_sub,
 *     "Mood_opt": Mood_opt,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_pot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_pot, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":211
 *     "Mood_n": Mood_n,
 *     "Mood_pot": Mood_pot,
 *     "Mood_sub": Mood_sub,             # <<<<<<<<<<<<<<
 *     "Mood_opt": Mood_opt,
 *     "Negative_neg": Negative_neg,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_sub); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_sub, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":212
 *     "Mood_pot": Mood_pot,
 *     "Mood_sub": Mood_sub,
 *     "Mood_opt": Mood_opt,             # <<<<<<<<<<<<<<
 *     "Negative_neg": Negative_neg,
 *     "Negative_pos": Negative_pos,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_opt); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Mood_opt, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":213
 *     "Mood_sub": Mood_sub,
 *     "Mood_opt": Mood_opt,
 *     "Negative_neg": Negative_neg,             # <<<<<<<<<<<<<<
 *     "Negative_pos": Negative_pos,
 *     "Negative_yes": Negative_yes,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_neg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Negative_neg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":214
 *     "Mood_opt": Mood_opt,
 *     "Negative_neg": Negative_neg,
 *     "Negative_pos": Negative_pos,             # <<<<<<<<<<<<<<
 *     "Negative_yes": Negative_yes,
 *     "Polarity_neg": Polarity_neg, # U20
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_pos); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Negative_pos, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":215
 *     "Negative_neg": Negative_neg,
 *     "Negative_pos": Negative_pos,
 *     "Negative_yes": Negative_yes,             # <<<<<<<<<<<<<<
 *     "Polarity_neg": Polarity_neg, # U20
 *     "Polarity_pos": Polarity_pos, # U20
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Negative_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":216
 *     "Negative_pos": Negative_pos,
 *     "Negative_yes": Negative_yes,
 *     "Polarity_neg": Polarity_neg, # U20             # <<<<<<<<<<<<<<
 *     "Polarity_pos": Polarity_pos, # U20
 *     "Number_com": Number_com,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polarity_neg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Polarity_neg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":217
 *     "Negative_yes": Negative_yes,
 *     "Polarity_neg": Polarity_neg, # U20
 *     "Polarity_pos": Polarity_pos, # U20             # <<<<<<<<<<<<<<
 *     "Number_com": Number_com,
 *     "Number_dual": Number_dual,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polarity_pos); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Polarity_pos, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":218
 *     "Polarity_neg": Polarity_neg, # U20
 *     "Polarity_pos": Polarity_pos, # U20
 *     "Number_com": Number_com,             # <<<<<<<<<<<<<<
 *     "Number_dual": Number_dual,
 *     "Number_none": Number_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Number_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":219
 *     "Polarity_pos": Polarity_pos, # U20
 *     "Number_com": Number_com,
 *     "Number_dual": Number_dual,             # <<<<<<<<<<<<<<
 *     "Number_none": Number_none,
 *     "Number_plur": Number_plur,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dual); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Number_dual, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":220
 *     "Number_com": Number_com,
 *     "Number_dual": Number_dual,
 *     "Number_none": Number_none,             # <<<<<<<<<<<<<<
 *     "Number_plur": Number_plur,
 *     "Number_sing": Number_sing,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Number_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":221
 *     "Number_dual": Number_dual,
 *     "Number_none": Number_none,
 *     "Number_plur": Number_plur,             # <<<<<<<<<<<<<<
 *     "Number_sing": Number_sing,
 *     "Number_ptan ": Number_ptan, # bg
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Number_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":222
 *     "Number_none": Number_none,
 *     "Number_plur": Number_plur,
 *     "Number_sing": Number_sing,             # <<<<<<<<<<<<<<
 *     "Number_ptan ": Number_ptan, # bg
 *     "Number_count ": Number_count, # bg
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Number_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":223
 *     "Number_plur": Number_plur,
 *     "Number_sing": Number_sing,
 *     "Number_ptan ": Number_ptan, # bg             # <<<<<<<<<<<<<<
 *     "Number_count ": Number_count, # bg
 *     "NumType_card": NumType_card,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_ptan); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_ptan, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":224
 *     "Number_sing": Number_sing,
 *     "Number_ptan ": Number_ptan, # bg
 *     "Number_count ": Number_count, # bg             # <<<<<<<<<<<<<<
 *     "NumType_card": NumType_card,
 *     "NumType_dist": NumType_dist,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_count); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_count, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":225
 *     "Number_ptan ": Number_ptan, # bg
 *     "Number_count ": Number_count, # bg
 *     "NumType_card": NumType_card,             # <<<<<<<<<<<<<<
 *     "NumType_dist": NumType_dist,
 *     "NumType_frac": NumType_frac,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_card); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_card, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":226
 *     "Number_count ": Number_count, # bg
 *     "NumType_card": NumType_card,
 *     "NumType_dist": NumType_dist,             # <<<<<<<<<<<<<<
 *     "NumType_frac": NumType_frac,
 *     "NumType_gen": NumType_gen,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_dist); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_dist, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":227
 *     "NumType_card": NumType_card,
 *     "NumType_dist": NumType_dist,
 *     "NumType_frac": NumType_frac,             # <<<<<<<<<<<<<<
 *     "NumType_gen": NumType_gen,
 *     "NumType_mult": NumType_mult,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_frac); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_frac, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":228
 *     "NumType_dist": NumType_dist,
 *     "NumType_frac": NumType_frac,
 *     "NumType_gen": NumType_gen,             # <<<<<<<<<<<<<<
 *     "NumType_mult": NumType_mult,
 *     "NumType_none": NumType_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_gen); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_gen, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":229
 *     "NumType_frac": NumType_frac,
 *     "NumType_gen": NumType_gen,
 *     "NumType_mult": NumType_mult,             # <<<<<<<<<<<<<<
 *     "NumType_none": NumType_none,
 *     "NumType_ord": NumType_ord,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_mult); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_mult, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":230
 *     "NumType_gen": NumType_gen,
 *     "NumType_mult": NumType_mult,
 *     "NumType_none": NumType_none,             # <<<<<<<<<<<<<<
 *     "NumType_ord": NumType_ord,
 *     "NumType_sets": NumType_sets,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":231
 *     "NumType_mult": NumType_mult,
 *     "NumType_none": NumType_none,
 *     "NumType_ord": NumType_ord,             # <<<<<<<<<<<<<<
 *     "NumType_sets": NumType_sets,
 *     "Person_one": Person_one,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_ord); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_ord, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":232
 *     "NumType_none": NumType_none,
 *     "NumType_ord": NumType_ord,
 *     "NumType_sets": NumType_sets,             # <<<<<<<<<<<<<<
 *     "Person_one": Person_one,
 *     "Person_two": Person_two,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_sets); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_NumType_sets, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":233
 *     "NumType_ord": NumType_ord,
 *     "NumType_sets": NumType_sets,
 *     "Person_one": Person_one,             # <<<<<<<<<<<<<<
 *     "Person_two": Person_two,
 *     "Person_three": Person_three,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Person_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":234
 *     "NumType_sets": NumType_sets,
 *     "Person_one": Person_one,
 *     "Person_two": Person_two,             # <<<<<<<<<<<<<<
 *     "Person_three": Person_three,
 *     "Person_none": Person_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Person_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":235
 *     "Person_one": Person_one,
 *     "Person_two": Person_two,
 *     "Person_three": Person_three,             # <<<<<<<<<<<<<<
 *     "Person_none": Person_none,
 *     "Poss_yes": Poss_yes,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Person_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":236
 *     "Person_two": Person_two,
 *     "Person_three": Person_three,
 *     "Person_none": Person_none,             # <<<<<<<<<<<<<<
 *     "Poss_yes": Poss_yes,
 *     "PronType_advPart": PronType_advPart,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Person_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":237
 *     "Person_three": Person_three,
 *     "Person_none": Person_none,
 *     "Poss_yes": Poss_yes,             # <<<<<<<<<<<<<<
 *     "PronType_advPart": PronType_advPart,
 *     "PronType_art": PronType_art,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Poss_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Poss_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":238
 *     "Person_none": Person_none,
 *     "Poss_yes": Poss_yes,
 *     "PronType_advPart": PronType_advPart,             # <<<<<<<<<<<<<<
 *     "PronType_art": PronType_art,
 *     "PronType_default": PronType_default,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_advPart); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_advPart, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":239
 *     "Poss_yes": Poss_yes,
 *     "PronType_advPart": PronType_advPart,
 *     "PronType_art": PronType_art,             # <<<<<<<<<<<<<<
 *     "PronType_default": PronType_default,
 *     "PronType_dem": PronType_dem,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_art); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_art, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":240
 *     "PronType_advPart": PronType_advPart,
 *     "PronType_art": PronType_art,
 *     "PronType_default": PronType_default,             # <<<<<<<<<<<<<<
 *     "PronType_dem": PronType_dem,
 *     "PronType_ind": PronType_ind,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_default); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_default, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":241
 *     "PronType_art": PronType_art,
 *     "PronType_default": PronType_default,
 *     "PronType_dem": PronType_dem,             # <<<<<<<<<<<<<<
 *     "PronType_ind": PronType_ind,
 *     "PronType_int": PronType_int,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_dem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_dem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":242
 *     "PronType_default": PronType_default,
 *     "PronType_dem": PronType_dem,
 *     "PronType_ind": PronType_ind,             # <<<<<<<<<<<<<<
 *     "PronType_int": PronType_int,
 *     "PronType_neg": PronType_neg,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_ind); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_ind, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":243
 *     "PronType_dem": PronType_dem,
 *     "PronType_ind": PronType_ind,
 *     "PronType_int": PronType_int,             # <<<<<<<<<<<<<<
 *     "PronType_neg": PronType_neg,
 *     "PronType_prs": PronType_prs,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_int); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_int, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":244
 *     "PronType_ind": PronType_ind,
 *     "PronType_int": PronType_int,
 *     "PronType_neg": PronType_neg,             # <<<<<<<<<<<<<<
 *     "PronType_prs": PronType_prs,
 *     "PronType_rcp": PronType_rcp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_neg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_neg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":245
 *     "PronType_int": PronType_int,
 *     "PronType_neg": PronType_neg,
 *     "PronType_prs": PronType_prs,             # <<<<<<<<<<<<<<
 *     "PronType_rcp": PronType_rcp,
 *     "PronType_rel": PronType_rel,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_prs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_prs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":246
 *     "PronType_neg": PronType_neg,
 *     "PronType_prs": PronType_prs,
 *     "PronType_rcp": PronType_rcp,             # <<<<<<<<<<<<<<
 *     "PronType_rel": PronType_rel,
 *     "PronType_tot": PronType_tot,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_rcp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_rcp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":247
 *     "PronType_prs": PronType_prs,
 *     "PronType_rcp": PronType_rcp,
 *     "PronType_rel": PronType_rel,             # <<<<<<<<<<<<<<
 *     "PronType_tot": PronType_tot,
 *     "PronType_clit": PronType_clit,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_rel); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_rel, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":248
 *     "PronType_rcp": PronType_rcp,
 *     "PronType_rel": PronType_rel,
 *     "PronType_tot": PronType_tot,             # <<<<<<<<<<<<<<
 *     "PronType_clit": PronType_clit,
 *     "PronType_exc ": PronType_exc, # es, ca, it, fa,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_tot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_tot, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":249
 *     "PronType_rel": PronType_rel,
 *     "PronType_tot": PronType_tot,
 *     "PronType_clit": PronType_clit,             # <<<<<<<<<<<<<<
 *     "PronType_exc ": PronType_exc, # es, ca, it, fa,
 *     "Reflex_yes": Reflex_yes,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_clit); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_PronType_clit, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":250
 *     "PronType_tot": PronType_tot,
 *     "PronType_clit": PronType_clit,
 *     "PronType_exc ": PronType_exc, # es, ca, it, fa,             # <<<<<<<<<<<<<<
 *     "Reflex_yes": Reflex_yes,
 *     "Tense_fut": Tense_fut,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_exc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PronType_exc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":251
 *     "PronType_clit": PronType_clit,
 *     "PronType_exc ": PronType_exc, # es, ca, it, fa,
 *     "Reflex_yes": Reflex_yes,             # <<<<<<<<<<<<<<
 *     "Tense_fut": Tense_fut,
 *     "Tense_imp": Tense_imp,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Reflex_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Reflex_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":252
 *     "PronType_exc ": PronType_exc, # es, ca, it, fa,
 *     "Reflex_yes": Reflex_yes,
 *     "Tense_fut": Tense_fut,             # <<<<<<<<<<<<<<
 *     "Tense_imp": Tense_imp,
 *     "Tense_past": Tense_past,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_fut); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Tense_fut, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":253
 *     "Reflex_yes": Reflex_yes,
 *     "Tense_fut": Tense_fut,
 *     "Tense_imp": Tense_imp,             # <<<<<<<<<<<<<<
 *     "Tense_past": Tense_past,
 *     "Tense_pres": Tense_pres,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_imp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Tense_imp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":254
 *     "Tense_fut": Tense_fut,
 *     "Tense_imp": Tense_imp,
 *     "Tense_past": Tense_past,             # <<<<<<<<<<<<<<
 *     "Tense_pres": Tense_pres,
 *     "VerbForm_fin": VerbForm_fin,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_past); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Tense_past, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":255
 *     "Tense_imp": Tense_imp,
 *     "Tense_past": Tense_past,
 *     "Tense_pres": Tense_pres,             # <<<<<<<<<<<<<<
 *     "VerbForm_fin": VerbForm_fin,
 *     "VerbForm_ger": VerbForm_ger,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_pres); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Tense_pres, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":256
 *     "Tense_past": Tense_past,
 *     "Tense_pres": Tense_pres,
 *     "VerbForm_fin": VerbForm_fin,             # <<<<<<<<<<<<<<
 *     "VerbForm_ger": VerbForm_ger,
 *     "VerbForm_inf": VerbForm_inf,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_fin); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_fin, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":257
 *     "Tense_pres": Tense_pres,
 *     "VerbForm_fin": VerbForm_fin,
 *     "VerbForm_ger": VerbForm_ger,             # <<<<<<<<<<<<<<
 *     "VerbForm_inf": VerbForm_inf,
 *     "VerbForm_none": VerbForm_none,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_ger); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_ger, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":258
 *     "VerbForm_fin": VerbForm_fin,
 *     "VerbForm_ger": VerbForm_ger,
 *     "VerbForm_inf": VerbForm_inf,             # <<<<<<<<<<<<<<
 *     "VerbForm_none": VerbForm_none,
 *     "VerbForm_part": VerbForm_part,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":259
 *     "VerbForm_ger": VerbForm_ger,
 *     "VerbForm_inf": VerbForm_inf,
 *     "VerbForm_none": VerbForm_none,             # <<<<<<<<<<<<<<
 *     "VerbForm_part": VerbForm_part,
 *     "VerbForm_partFut": VerbForm_partFut,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_none); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_none, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":260
 *     "VerbForm_inf": VerbForm_inf,
 *     "VerbForm_none": VerbForm_none,
 *     "VerbForm_part": VerbForm_part,             # <<<<<<<<<<<<<<
 *     "VerbForm_partFut": VerbForm_partFut,
 *     "VerbForm_partPast": VerbForm_partPast,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_part); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_part, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":261
 *     "VerbForm_none": VerbForm_none,
 *     "VerbForm_part": VerbForm_part,
 *     "VerbForm_partFut": VerbForm_partFut,             # <<<<<<<<<<<<<<
 *     "VerbForm_partPast": VerbForm_partPast,
 *     "VerbForm_partPres": VerbForm_partPres,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partFut); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_partFut, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":262
 *     "VerbForm_part": VerbForm_part,
 *     "VerbForm_partFut": VerbForm_partFut,
 *     "VerbForm_partPast": VerbForm_partPast,             # <<<<<<<<<<<<<<
 *     "VerbForm_partPres": VerbForm_partPres,
 *     "VerbForm_sup": VerbForm_sup,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partPast); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_partPast, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":263
 *     "VerbForm_partFut": VerbForm_partFut,
 *     "VerbForm_partPast": VerbForm_partPast,
 *     "VerbForm_partPres": VerbForm_partPres,             # <<<<<<<<<<<<<<
 *     "VerbForm_sup": VerbForm_sup,
 *     "VerbForm_trans": VerbForm_trans,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partPres); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_partPres, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":264
 *     "VerbForm_partPast": VerbForm_partPast,
 *     "VerbForm_partPres": VerbForm_partPres,
 *     "VerbForm_sup": VerbForm_sup,             # <<<<<<<<<<<<<<
 *     "VerbForm_trans": VerbForm_trans,
 *     "VerbForm_conv": VerbForm_conv, # U20
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_sup); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_sup, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":265
 *     "VerbForm_partPres": VerbForm_partPres,
 *     "VerbForm_sup": VerbForm_sup,
 *     "VerbForm_trans": VerbForm_trans,             # <<<<<<<<<<<<<<
 *     "VerbForm_conv": VerbForm_conv, # U20
 *     "VerbForm_gdv ": VerbForm_gdv, # la,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_trans); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_trans, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":266
 *     "VerbForm_sup": VerbForm_sup,
 *     "VerbForm_trans": VerbForm_trans,
 *     "VerbForm_conv": VerbForm_conv, # U20             # <<<<<<<<<<<<<<
 *     "VerbForm_gdv ": VerbForm_gdv, # la,
 *     "Voice_act": Voice_act,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_conv); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_VerbForm_conv, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":267
 *     "VerbForm_trans": VerbForm_trans,
 *     "VerbForm_conv": VerbForm_conv, # U20
 *     "VerbForm_gdv ": VerbForm_gdv, # la,             # <<<<<<<<<<<<<<
 *     "Voice_act": Voice_act,
 *     "Voice_cau": Voice_cau,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_gdv); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_VerbForm_gdv, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":268
 *     "VerbForm_conv": VerbForm_conv, # U20
 *     "VerbForm_gdv ": VerbForm_gdv, # la,
 *     "Voice_act": Voice_act,             # <<<<<<<<<<<<<<
 *     "Voice_cau": Voice_cau,
 *     "Voice_pass": Voice_pass,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_act); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Voice_act, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":269
 *     "VerbForm_gdv ": VerbForm_gdv, # la,
 *     "Voice_act": Voice_act,
 *     "Voice_cau": Voice_cau,             # <<<<<<<<<<<<<<
 *     "Voice_pass": Voice_pass,
 *     "Voice_mid ": Voice_mid, # gkc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_cau); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Voice_cau, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":270
 *     "Voice_act": Voice_act,
 *     "Voice_cau": Voice_cau,
 *     "Voice_pass": Voice_pass,             # <<<<<<<<<<<<<<
 *     "Voice_mid ": Voice_mid, # gkc,
 *     "Voice_int ": Voice_int, # hb,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_pass); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_Voice_pass, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":271
 *     "Voice_cau": Voice_cau,
 *     "Voice_pass": Voice_pass,
 *     "Voice_mid ": Voice_mid, # gkc,             # <<<<<<<<<<<<<<
 *     "Voice_int ": Voice_int, # hb,
 *     "Abbr_yes ": Abbr_yes, # cz, fi, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_mid); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Voice_mid, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":272
 *     "Voice_pass": Voice_pass,
 *     "Voice_mid ": Voice_mid, # gkc,
 *     "Voice_int ": Voice_int, # hb,             # <<<<<<<<<<<<<<
 *     "Abbr_yes ": Abbr_yes, # cz, fi, sl, U,
 *     "AdpType_prep ": AdpType_prep, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_int); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Voice_int, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":273
 *     "Voice_mid ": Voice_mid, # gkc,
 *     "Voice_int ": Voice_int, # hb,
 *     "Abbr_yes ": Abbr_yes, # cz, fi, sl, U,             # <<<<<<<<<<<<<<
 *     "AdpType_prep ": AdpType_prep, # cz, U,
 *     "AdpType_post ": AdpType_post, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Abbr_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Abbr_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":274
 *     "Voice_int ": Voice_int, # hb,
 *     "Abbr_yes ": Abbr_yes, # cz, fi, sl, U,
 *     "AdpType_prep ": AdpType_prep, # cz, U,             # <<<<<<<<<<<<<<
 *     "AdpType_post ": AdpType_post, # U,
 *     "AdpType_voc ": AdpType_voc, # cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_prep); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_AdpType_prep, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":275
 *     "Abbr_yes ": Abbr_yes, # cz, fi, sl, U,
 *     "AdpType_prep ": AdpType_prep, # cz, U,
 *     "AdpType_post ": AdpType_post, # U,             # <<<<<<<<<<<<<<
 *     "AdpType_voc ": AdpType_voc, # cz,
 *     "AdpType_comprep ": AdpType_comprep, # cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_post); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_AdpType_post, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":276
 *     "AdpType_prep ": AdpType_prep, # cz, U,
 *     "AdpType_post ": AdpType_post, # U,
 *     "AdpType_voc ": AdpType_voc, # cz,             # <<<<<<<<<<<<<<
 *     "AdpType_comprep ": AdpType_comprep, # cz,
 *     "AdpType_circ ": AdpType_circ, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_voc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_AdpType_voc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":277
 *     "AdpType_post ": AdpType_post, # U,
 *     "AdpType_voc ": AdpType_voc, # cz,
 *     "AdpType_comprep ": AdpType_comprep, # cz,             # <<<<<<<<<<<<<<
 *     "AdpType_circ ": AdpType_circ, # U,
 *     "AdvType_man": AdvType_man,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_comprep); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_AdpType_comprep, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":278
 *     "AdpType_voc ": AdpType_voc, # cz,
 *     "AdpType_comprep ": AdpType_comprep, # cz,
 *     "AdpType_circ ": AdpType_circ, # U,             # <<<<<<<<<<<<<<
 *     "AdvType_man": AdvType_man,
 *     "AdvType_loc": AdvType_loc,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_circ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_AdpType_circ, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":279
 *     "AdpType_comprep ": AdpType_comprep, # cz,
 *     "AdpType_circ ": AdpType_circ, # U,
 *     "AdvType_man": AdvType_man,             # <<<<<<<<<<<<<<
 *     "AdvType_loc": AdvType_loc,
 *     "AdvType_tim": AdvType_tim,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_man); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_man, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":280
 *     "AdpType_circ ": AdpType_circ, # U,
 *     "AdvType_man": AdvType_man,
 *     "AdvType_loc": AdvType_loc,             # <<<<<<<<<<<<<<
 *     "AdvType_tim": AdvType_tim,
 *     "AdvType_deg": AdvType_deg,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_loc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_loc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":281
 *     "AdvType_man": AdvType_man,
 *     "AdvType_loc": AdvType_loc,
 *     "AdvType_tim": AdvType_tim,             # <<<<<<<<<<<<<<
 *     "AdvType_deg": AdvType_deg,
 *     "AdvType_cau": AdvType_cau,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_tim); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_tim, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":282
 *     "AdvType_loc": AdvType_loc,
 *     "AdvType_tim": AdvType_tim,
 *     "AdvType_deg": AdvType_deg,             # <<<<<<<<<<<<<<
 *     "AdvType_cau": AdvType_cau,
 *     "AdvType_mod": AdvType_mod,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_deg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_deg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":283
 *     "AdvType_tim": AdvType_tim,
 *     "AdvType_deg": AdvType_deg,
 *     "AdvType_cau": AdvType_cau,             # <<<<<<<<<<<<<<
 *     "AdvType_mod": AdvType_mod,
 *     "AdvType_sta": AdvType_sta,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_cau); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_cau, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":284
 *     "AdvType_deg": AdvType_deg,
 *     "AdvType_cau": AdvType_cau,
 *     "AdvType_mod": AdvType_mod,             # <<<<<<<<<<<<<<
 *     "AdvType_sta": AdvType_sta,
 *     "AdvType_ex": AdvType_ex,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_mod); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_mod, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":285
 *     "AdvType_cau": AdvType_cau,
 *     "AdvType_mod": AdvType_mod,
 *     "AdvType_sta": AdvType_sta,             # <<<<<<<<<<<<<<
 *     "AdvType_ex": AdvType_ex,
 *     "AdvType_adadj": AdvType_adadj,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_sta); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_sta, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":286
 *     "AdvType_mod": AdvType_mod,
 *     "AdvType_sta": AdvType_sta,
 *     "AdvType_ex": AdvType_ex,             # <<<<<<<<<<<<<<
 *     "AdvType_adadj": AdvType_adadj,
 *     "ConjType_oper ": ConjType_oper, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_ex); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_ex, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":287
 *     "AdvType_sta": AdvType_sta,
 *     "AdvType_ex": AdvType_ex,
 *     "AdvType_adadj": AdvType_adadj,             # <<<<<<<<<<<<<<
 *     "ConjType_oper ": ConjType_oper, # cz, U,
 *     "ConjType_comp ": ConjType_comp, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_adadj); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_u_AdvType_adadj, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":288
 *     "AdvType_ex": AdvType_ex,
 *     "AdvType_adadj": AdvType_adadj,
 *     "ConjType_oper ": ConjType_oper, # cz, U,             # <<<<<<<<<<<<<<
 *     "ConjType_comp ": ConjType_comp, # cz, U,
 *     "Connegative_yes ": Connegative_yes, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_ConjType_oper); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_ConjType_oper, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":289
 *     "AdvType_adadj": AdvType_adadj,
 *     "ConjType_oper ": ConjType_oper, # cz, U,
 *     "ConjType_comp ": ConjType_comp, # cz, U,             # <<<<<<<<<<<<<<
 *     "Connegative_yes ": Connegative_yes, # fi,
 *     "Derivation_minen ": Derivation_minen, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_ConjType_comp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_ConjType_comp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":290
 *     "ConjType_oper ": ConjType_oper, # cz, U,
 *     "ConjType_comp ": ConjType_comp, # cz, U,
 *     "Connegative_yes ": Connegative_yes, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_minen ": Derivation_minen, # fi,
 *     "Derivation_sti ": Derivation_sti, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Connegative_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Connegative_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":291
 *     "ConjType_comp ": ConjType_comp, # cz, U,
 *     "Connegative_yes ": Connegative_yes, # fi,
 *     "Derivation_minen ": Derivation_minen, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_sti ": Derivation_sti, # fi,
 *     "Derivation_inen ": Derivation_inen, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_minen); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_minen, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":292
 *     "Connegative_yes ": Connegative_yes, # fi,
 *     "Derivation_minen ": Derivation_minen, # fi,
 *     "Derivation_sti ": Derivation_sti, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_inen ": Derivation_inen, # fi,
 *     "Derivation_lainen ": Derivation_lainen, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_sti); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_sti, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":293
 *     "Derivation_minen ": Derivation_minen, # fi,
 *     "Derivation_sti ": Derivation_sti, # fi,
 *     "Derivation_inen ": Derivation_inen, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_lainen ": Derivation_lainen, # fi,
 *     "Derivation_ja ": Derivation_ja, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_inen); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_inen, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":294
 *     "Derivation_sti ": Derivation_sti, # fi,
 *     "Derivation_inen ": Derivation_inen, # fi,
 *     "Derivation_lainen ": Derivation_lainen, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_ja ": Derivation_ja, # fi,
 *     "Derivation_ton ": Derivation_ton, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_lainen); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_lainen, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":295
 *     "Derivation_inen ": Derivation_inen, # fi,
 *     "Derivation_lainen ": Derivation_lainen, # fi,
 *     "Derivation_ja ": Derivation_ja, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_ton ": Derivation_ton, # fi,
 *     "Derivation_vs ": Derivation_vs, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ja); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_ja, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":296
 *     "Derivation_lainen ": Derivation_lainen, # fi,
 *     "Derivation_ja ": Derivation_ja, # fi,
 *     "Derivation_ton ": Derivation_ton, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_vs ": Derivation_vs, # fi,
 *     "Derivation_ttain ": Derivation_ttain, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ton); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_ton, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":297
 *     "Derivation_ja ": Derivation_ja, # fi,
 *     "Derivation_ton ": Derivation_ton, # fi,
 *     "Derivation_vs ": Derivation_vs, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_ttain ": Derivation_ttain, # fi,
 *     "Derivation_ttaa ": Derivation_ttaa, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_vs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_vs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":298
 *     "Derivation_ton ": Derivation_ton, # fi,
 *     "Derivation_vs ": Derivation_vs, # fi,
 *     "Derivation_ttain ": Derivation_ttain, # fi,             # <<<<<<<<<<<<<<
 *     "Derivation_ttaa ": Derivation_ttaa, # fi,
 *     "Echo_rdp ": Echo_rdp, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ttain); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_ttain, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":299
 *     "Derivation_vs ": Derivation_vs, # fi,
 *     "Derivation_ttain ": Derivation_ttain, # fi,
 *     "Derivation_ttaa ": Derivation_ttaa, # fi,             # <<<<<<<<<<<<<<
 *     "Echo_rdp ": Echo_rdp, # U,
 *     "Echo_ech ": Echo_ech, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ttaa); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Derivation_ttaa, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":300
 *     "Derivation_ttain ": Derivation_ttain, # fi,
 *     "Derivation_ttaa ": Derivation_ttaa, # fi,
 *     "Echo_rdp ": Echo_rdp, # U,             # <<<<<<<<<<<<<<
 *     "Echo_ech ": Echo_ech, # U,
 *     "Foreign_foreign ": Foreign_foreign, # cz, fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Echo_rdp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Echo_rdp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":301
 *     "Derivation_ttaa ": Derivation_ttaa, # fi,
 *     "Echo_rdp ": Echo_rdp, # U,
 *     "Echo_ech ": Echo_ech, # U,             # <<<<<<<<<<<<<<
 *     "Foreign_foreign ": Foreign_foreign, # cz, fi, U,
 *     "Foreign_fscript ": Foreign_fscript, # cz, fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Echo_ech); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Echo_ech, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":302
 *     "Echo_rdp ": Echo_rdp, # U,
 *     "Echo_ech ": Echo_ech, # U,
 *     "Foreign_foreign ": Foreign_foreign, # cz, fi, U,             # <<<<<<<<<<<<<<
 *     "Foreign_fscript ": Foreign_fscript, # cz, fi, U,
 *     "Foreign_tscript ": Foreign_tscript, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_foreign); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Foreign_foreign, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":303
 *     "Echo_ech ": Echo_ech, # U,
 *     "Foreign_foreign ": Foreign_foreign, # cz, fi, U,
 *     "Foreign_fscript ": Foreign_fscript, # cz, fi, U,             # <<<<<<<<<<<<<<
 *     "Foreign_tscript ": Foreign_tscript, # cz, U,
 *     "Foreign_yes ": Foreign_yes, # sl,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_fscript); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Foreign_fscript, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":304
 *     "Foreign_foreign ": Foreign_foreign, # cz, fi, U,
 *     "Foreign_fscript ": Foreign_fscript, # cz, fi, U,
 *     "Foreign_tscript ": Foreign_tscript, # cz, U,             # <<<<<<<<<<<<<<
 *     "Foreign_yes ": Foreign_yes, # sl,
 *     "Gender_dat_masc ": Gender_dat_masc, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_tscript); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Foreign_tscript, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":305
 *     "Foreign_fscript ": Foreign_fscript, # cz, fi, U,
 *     "Foreign_tscript ": Foreign_tscript, # cz, U,
 *     "Foreign_yes ": Foreign_yes, # sl,             # <<<<<<<<<<<<<<
 *     "Gender_dat_masc ": Gender_dat_masc, # bq, U,
 *     "Gender_dat_fem ": Gender_dat_fem, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Foreign_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":306
 *     "Foreign_tscript ": Foreign_tscript, # cz, U,
 *     "Foreign_yes ": Foreign_yes, # sl,
 *     "Gender_dat_masc ": Gender_dat_masc, # bq, U,             # <<<<<<<<<<<<<<
 *     "Gender_dat_fem ": Gender_dat_fem, # bq, U,
 *     "Gender_erg_masc ": Gender_erg_masc, # bq,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_dat_masc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_dat_masc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":307
 *     "Foreign_yes ": Foreign_yes, # sl,
 *     "Gender_dat_masc ": Gender_dat_masc, # bq, U,
 *     "Gender_dat_fem ": Gender_dat_fem, # bq, U,             # <<<<<<<<<<<<<<
 *     "Gender_erg_masc ": Gender_erg_masc, # bq,
 *     "Gender_erg_fem ": Gender_erg_fem, # bq,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_dat_fem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_dat_fem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":308
 *     "Gender_dat_masc ": Gender_dat_masc, # bq, U,
 *     "Gender_dat_fem ": Gender_dat_fem, # bq, U,
 *     "Gender_erg_masc ": Gender_erg_masc, # bq,             # <<<<<<<<<<<<<<
 *     "Gender_erg_fem ": Gender_erg_fem, # bq,
 *     "Gender_psor_masc ": Gender_psor_masc, # cz, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_erg_masc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_erg_masc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":309
 *     "Gender_dat_fem ": Gender_dat_fem, # bq, U,
 *     "Gender_erg_masc ": Gender_erg_masc, # bq,
 *     "Gender_erg_fem ": Gender_erg_fem, # bq,             # <<<<<<<<<<<<<<
 *     "Gender_psor_masc ": Gender_psor_masc, # cz, sl, U,
 *     "Gender_psor_fem ": Gender_psor_fem, # cz, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_erg_fem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_erg_fem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":310
 *     "Gender_erg_masc ": Gender_erg_masc, # bq,
 *     "Gender_erg_fem ": Gender_erg_fem, # bq,
 *     "Gender_psor_masc ": Gender_psor_masc, # cz, sl, U,             # <<<<<<<<<<<<<<
 *     "Gender_psor_fem ": Gender_psor_fem, # cz, sl, U,
 *     "Gender_psor_neut ": Gender_psor_neut, # sl,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_masc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_psor_masc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":311
 *     "Gender_erg_fem ": Gender_erg_fem, # bq,
 *     "Gender_psor_masc ": Gender_psor_masc, # cz, sl, U,
 *     "Gender_psor_fem ": Gender_psor_fem, # cz, sl, U,             # <<<<<<<<<<<<<<
 *     "Gender_psor_neut ": Gender_psor_neut, # sl,
 *     "Hyph_yes ": Hyph_yes, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_fem); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_psor_fem, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":312
 *     "Gender_psor_masc ": Gender_psor_masc, # cz, sl, U,
 *     "Gender_psor_fem ": Gender_psor_fem, # cz, sl, U,
 *     "Gender_psor_neut ": Gender_psor_neut, # sl,             # <<<<<<<<<<<<<<
 *     "Hyph_yes ": Hyph_yes, # cz, U,
 *     "InfForm_one ": InfForm_one, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_neut); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Gender_psor_neut, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":313
 *     "Gender_psor_fem ": Gender_psor_fem, # cz, sl, U,
 *     "Gender_psor_neut ": Gender_psor_neut, # sl,
 *     "Hyph_yes ": Hyph_yes, # cz, U,             # <<<<<<<<<<<<<<
 *     "InfForm_one ": InfForm_one, # fi,
 *     "InfForm_two ": InfForm_two, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Hyph_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Hyph_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":314
 *     "Gender_psor_neut ": Gender_psor_neut, # sl,
 *     "Hyph_yes ": Hyph_yes, # cz, U,
 *     "InfForm_one ": InfForm_one, # fi,             # <<<<<<<<<<<<<<
 *     "InfForm_two ": InfForm_two, # fi,
 *     "InfForm_three ": InfForm_three, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_InfForm_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":315
 *     "Hyph_yes ": Hyph_yes, # cz, U,
 *     "InfForm_one ": InfForm_one, # fi,
 *     "InfForm_two ": InfForm_two, # fi,             # <<<<<<<<<<<<<<
 *     "InfForm_three ": InfForm_three, # fi,
 *     "NameType_geo ": NameType_geo, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_InfForm_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":316
 *     "InfForm_one ": InfForm_one, # fi,
 *     "InfForm_two ": InfForm_two, # fi,
 *     "InfForm_three ": InfForm_three, # fi,             # <<<<<<<<<<<<<<
 *     "NameType_geo ": NameType_geo, # U, cz,
 *     "NameType_prs ": NameType_prs, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_InfForm_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":317
 *     "InfForm_two ": InfForm_two, # fi,
 *     "InfForm_three ": InfForm_three, # fi,
 *     "NameType_geo ": NameType_geo, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_prs ": NameType_prs, # U, cz,
 *     "NameType_giv ": NameType_giv, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_geo); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_geo, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":318
 *     "InfForm_three ": InfForm_three, # fi,
 *     "NameType_geo ": NameType_geo, # U, cz,
 *     "NameType_prs ": NameType_prs, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_giv ": NameType_giv, # U, cz,
 *     "NameType_sur ": NameType_sur, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_prs); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_prs, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":319
 *     "NameType_geo ": NameType_geo, # U, cz,
 *     "NameType_prs ": NameType_prs, # U, cz,
 *     "NameType_giv ": NameType_giv, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_sur ": NameType_sur, # U, cz,
 *     "NameType_nat ": NameType_nat, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_giv); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_giv, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":320
 *     "NameType_prs ": NameType_prs, # U, cz,
 *     "NameType_giv ": NameType_giv, # U, cz,
 *     "NameType_sur ": NameType_sur, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_nat ": NameType_nat, # U, cz,
 *     "NameType_com ": NameType_com, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_sur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_sur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":321
 *     "NameType_giv ": NameType_giv, # U, cz,
 *     "NameType_sur ": NameType_sur, # U, cz,
 *     "NameType_nat ": NameType_nat, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_com ": NameType_com, # U, cz,
 *     "NameType_pro ": NameType_pro, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_nat); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_nat, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":322
 *     "NameType_sur ": NameType_sur, # U, cz,
 *     "NameType_nat ": NameType_nat, # U, cz,
 *     "NameType_com ": NameType_com, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_pro ": NameType_pro, # U, cz,
 *     "NameType_oth ": NameType_oth, # U, cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":323
 *     "NameType_nat ": NameType_nat, # U, cz,
 *     "NameType_com ": NameType_com, # U, cz,
 *     "NameType_pro ": NameType_pro, # U, cz,             # <<<<<<<<<<<<<<
 *     "NameType_oth ": NameType_oth, # U, cz,
 *     "NounType_com ": NounType_com, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_pro); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_pro, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":324
 *     "NameType_com ": NameType_com, # U, cz,
 *     "NameType_pro ": NameType_pro, # U, cz,
 *     "NameType_oth ": NameType_oth, # U, cz,             # <<<<<<<<<<<<<<
 *     "NounType_com ": NounType_com, # U,
 *     "NounType_prop ": NounType_prop, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_oth); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NameType_oth, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":325
 *     "NameType_pro ": NameType_pro, # U, cz,
 *     "NameType_oth ": NameType_oth, # U, cz,
 *     "NounType_com ": NounType_com, # U,             # <<<<<<<<<<<<<<
 *     "NounType_prop ": NounType_prop, # U,
 *     "NounType_class ": NounType_class, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_com); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NounType_com, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":326
 *     "NameType_oth ": NameType_oth, # U, cz,
 *     "NounType_com ": NounType_com, # U,
 *     "NounType_prop ": NounType_prop, # U,             # <<<<<<<<<<<<<<
 *     "NounType_class ": NounType_class, # U,
 *     "Number_abs_sing ": Number_abs_sing, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_prop); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NounType_prop, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":327
 *     "NounType_com ": NounType_com, # U,
 *     "NounType_prop ": NounType_prop, # U,
 *     "NounType_class ": NounType_class, # U,             # <<<<<<<<<<<<<<
 *     "Number_abs_sing ": Number_abs_sing, # bq, U,
 *     "Number_abs_plur ": Number_abs_plur, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_class); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NounType_class, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":328
 *     "NounType_prop ": NounType_prop, # U,
 *     "NounType_class ": NounType_class, # U,
 *     "Number_abs_sing ": Number_abs_sing, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_abs_plur ": Number_abs_plur, # bq, U,
 *     "Number_dat_sing ": Number_dat_sing, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_abs_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_abs_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":329
 *     "NounType_class ": NounType_class, # U,
 *     "Number_abs_sing ": Number_abs_sing, # bq, U,
 *     "Number_abs_plur ": Number_abs_plur, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_dat_sing ": Number_dat_sing, # bq, U,
 *     "Number_dat_plur ": Number_dat_plur, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_abs_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_abs_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":330
 *     "Number_abs_sing ": Number_abs_sing, # bq, U,
 *     "Number_abs_plur ": Number_abs_plur, # bq, U,
 *     "Number_dat_sing ": Number_dat_sing, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_dat_plur ": Number_dat_plur, # bq, U,
 *     "Number_erg_sing ": Number_erg_sing, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dat_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_dat_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":331
 *     "Number_abs_plur ": Number_abs_plur, # bq, U,
 *     "Number_dat_sing ": Number_dat_sing, # bq, U,
 *     "Number_dat_plur ": Number_dat_plur, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_erg_sing ": Number_erg_sing, # bq, U,
 *     "Number_erg_plur ": Number_erg_plur, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dat_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_dat_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":332
 *     "Number_dat_sing ": Number_dat_sing, # bq, U,
 *     "Number_dat_plur ": Number_dat_plur, # bq, U,
 *     "Number_erg_sing ": Number_erg_sing, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_erg_plur ": Number_erg_plur, # bq, U,
 *     "Number_psee_sing ": Number_psee_sing, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_erg_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_erg_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":333
 *     "Number_dat_plur ": Number_dat_plur, # bq, U,
 *     "Number_erg_sing ": Number_erg_sing, # bq, U,
 *     "Number_erg_plur ": Number_erg_plur, # bq, U,             # <<<<<<<<<<<<<<
 *     "Number_psee_sing ": Number_psee_sing, # U,
 *     "Number_psee_plur ": Number_psee_plur, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_erg_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_erg_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":334
 *     "Number_erg_sing ": Number_erg_sing, # bq, U,
 *     "Number_erg_plur ": Number_erg_plur, # bq, U,
 *     "Number_psee_sing ": Number_psee_sing, # U,             # <<<<<<<<<<<<<<
 *     "Number_psee_plur ": Number_psee_plur, # U,
 *     "Number_psor_sing ": Number_psor_sing, # cz, fi, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psee_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_psee_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":335
 *     "Number_erg_plur ": Number_erg_plur, # bq, U,
 *     "Number_psee_sing ": Number_psee_sing, # U,
 *     "Number_psee_plur ": Number_psee_plur, # U,             # <<<<<<<<<<<<<<
 *     "Number_psor_sing ": Number_psor_sing, # cz, fi, sl, U,
 *     "Number_psor_plur ": Number_psor_plur, # cz, fi, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psee_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_psee_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":336
 *     "Number_psee_sing ": Number_psee_sing, # U,
 *     "Number_psee_plur ": Number_psee_plur, # U,
 *     "Number_psor_sing ": Number_psor_sing, # cz, fi, sl, U,             # <<<<<<<<<<<<<<
 *     "Number_psor_plur ": Number_psor_plur, # cz, fi, sl, U,
 *     "NumForm_digit ": NumForm_digit, # cz, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psor_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_psor_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":337
 *     "Number_psee_plur ": Number_psee_plur, # U,
 *     "Number_psor_sing ": Number_psor_sing, # cz, fi, sl, U,
 *     "Number_psor_plur ": Number_psor_plur, # cz, fi, sl, U,             # <<<<<<<<<<<<<<
 *     "NumForm_digit ": NumForm_digit, # cz, sl, U,
 *     "NumForm_roman ": NumForm_roman, # cz, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psor_plur); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Number_psor_plur, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":338
 *     "Number_psor_sing ": Number_psor_sing, # cz, fi, sl, U,
 *     "Number_psor_plur ": Number_psor_plur, # cz, fi, sl, U,
 *     "NumForm_digit ": NumForm_digit, # cz, sl, U,             # <<<<<<<<<<<<<<
 *     "NumForm_roman ": NumForm_roman, # cz, sl, U,
 *     "NumForm_word ": NumForm_word, # cz, sl, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_digit); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumForm_digit, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":339
 *     "Number_psor_plur ": Number_psor_plur, # cz, fi, sl, U,
 *     "NumForm_digit ": NumForm_digit, # cz, sl, U,
 *     "NumForm_roman ": NumForm_roman, # cz, sl, U,             # <<<<<<<<<<<<<<
 *     "NumForm_word ": NumForm_word, # cz, sl, U,
 *     "NumValue_one ": NumValue_one, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_roman); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumForm_roman, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":340
 *     "NumForm_digit ": NumForm_digit, # cz, sl, U,
 *     "NumForm_roman ": NumForm_roman, # cz, sl, U,
 *     "NumForm_word ": NumForm_word, # cz, sl, U,             # <<<<<<<<<<<<<<
 *     "NumValue_one ": NumValue_one, # cz, U,
 *     "NumValue_two ": NumValue_two, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_word); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumForm_word, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":341
 *     "NumForm_roman ": NumForm_roman, # cz, sl, U,
 *     "NumForm_word ": NumForm_word, # cz, sl, U,
 *     "NumValue_one ": NumValue_one, # cz, U,             # <<<<<<<<<<<<<<
 *     "NumValue_two ": NumValue_two, # cz, U,
 *     "NumValue_three ": NumValue_three, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumValue_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":342
 *     "NumForm_word ": NumForm_word, # cz, sl, U,
 *     "NumValue_one ": NumValue_one, # cz, U,
 *     "NumValue_two ": NumValue_two, # cz, U,             # <<<<<<<<<<<<<<
 *     "NumValue_three ": NumValue_three, # cz, U,
 *     "PartForm_pres ": PartForm_pres, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumValue_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":343
 *     "NumValue_one ": NumValue_one, # cz, U,
 *     "NumValue_two ": NumValue_two, # cz, U,
 *     "NumValue_three ": NumValue_three, # cz, U,             # <<<<<<<<<<<<<<
 *     "PartForm_pres ": PartForm_pres, # fi,
 *     "PartForm_past ": PartForm_past, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_NumValue_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":344
 *     "NumValue_two ": NumValue_two, # cz, U,
 *     "NumValue_three ": NumValue_three, # cz, U,
 *     "PartForm_pres ": PartForm_pres, # fi,             # <<<<<<<<<<<<<<
 *     "PartForm_past ": PartForm_past, # fi,
 *     "PartForm_agt ": PartForm_agt, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_pres); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartForm_pres, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":345
 *     "NumValue_three ": NumValue_three, # cz, U,
 *     "PartForm_pres ": PartForm_pres, # fi,
 *     "PartForm_past ": PartForm_past, # fi,             # <<<<<<<<<<<<<<
 *     "PartForm_agt ": PartForm_agt, # fi,
 *     "PartForm_neg ": PartForm_neg, # fi,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_past); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartForm_past, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":346
 *     "PartForm_pres ": PartForm_pres, # fi,
 *     "PartForm_past ": PartForm_past, # fi,
 *     "PartForm_agt ": PartForm_agt, # fi,             # <<<<<<<<<<<<<<
 *     "PartForm_neg ": PartForm_neg, # fi,
 *     "PartType_mod ": PartType_mod, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_agt); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartForm_agt, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":347
 *     "PartForm_past ": PartForm_past, # fi,
 *     "PartForm_agt ": PartForm_agt, # fi,
 *     "PartForm_neg ": PartForm_neg, # fi,             # <<<<<<<<<<<<<<
 *     "PartType_mod ": PartType_mod, # U,
 *     "PartType_emp ": PartType_emp, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_neg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartForm_neg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":348
 *     "PartForm_agt ": PartForm_agt, # fi,
 *     "PartForm_neg ": PartForm_neg, # fi,
 *     "PartType_mod ": PartType_mod, # U,             # <<<<<<<<<<<<<<
 *     "PartType_emp ": PartType_emp, # U,
 *     "PartType_res ": PartType_res, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_mod); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartType_mod, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":349
 *     "PartForm_neg ": PartForm_neg, # fi,
 *     "PartType_mod ": PartType_mod, # U,
 *     "PartType_emp ": PartType_emp, # U,             # <<<<<<<<<<<<<<
 *     "PartType_res ": PartType_res, # U,
 *     "PartType_inf ": PartType_inf, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_emp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartType_emp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":350
 *     "PartType_mod ": PartType_mod, # U,
 *     "PartType_emp ": PartType_emp, # U,
 *     "PartType_res ": PartType_res, # U,             # <<<<<<<<<<<<<<
 *     "PartType_inf ": PartType_inf, # U,
 *     "PartType_vbp ": PartType_vbp, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_res); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartType_res, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":351
 *     "PartType_emp ": PartType_emp, # U,
 *     "PartType_res ": PartType_res, # U,
 *     "PartType_inf ": PartType_inf, # U,             # <<<<<<<<<<<<<<
 *     "PartType_vbp ": PartType_vbp, # U,
 *     "Person_abs_one ": Person_abs_one, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartType_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":352
 *     "PartType_res ": PartType_res, # U,
 *     "PartType_inf ": PartType_inf, # U,
 *     "PartType_vbp ": PartType_vbp, # U,             # <<<<<<<<<<<<<<
 *     "Person_abs_one ": Person_abs_one, # bq, U,
 *     "Person_abs_two ": Person_abs_two, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_vbp); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PartType_vbp, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":353
 *     "PartType_inf ": PartType_inf, # U,
 *     "PartType_vbp ": PartType_vbp, # U,
 *     "Person_abs_one ": Person_abs_one, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_abs_two ": Person_abs_two, # bq, U,
 *     "Person_abs_three ": Person_abs_three, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_abs_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":354
 *     "PartType_vbp ": PartType_vbp, # U,
 *     "Person_abs_one ": Person_abs_one, # bq, U,
 *     "Person_abs_two ": Person_abs_two, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_abs_three ": Person_abs_three, # bq, U,
 *     "Person_dat_one ": Person_dat_one, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_abs_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":355
 *     "Person_abs_one ": Person_abs_one, # bq, U,
 *     "Person_abs_two ": Person_abs_two, # bq, U,
 *     "Person_abs_three ": Person_abs_three, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_dat_one ": Person_dat_one, # bq, U,
 *     "Person_dat_two ": Person_dat_two, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_abs_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":356
 *     "Person_abs_two ": Person_abs_two, # bq, U,
 *     "Person_abs_three ": Person_abs_three, # bq, U,
 *     "Person_dat_one ": Person_dat_one, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_dat_two ": Person_dat_two, # bq, U,
 *     "Person_dat_three ": Person_dat_three, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_dat_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":357
 *     "Person_abs_three ": Person_abs_three, # bq, U,
 *     "Person_dat_one ": Person_dat_one, # bq, U,
 *     "Person_dat_two ": Person_dat_two, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_dat_three ": Person_dat_three, # bq, U,
 *     "Person_erg_one ": Person_erg_one, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_dat_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":358
 *     "Person_dat_one ": Person_dat_one, # bq, U,
 *     "Person_dat_two ": Person_dat_two, # bq, U,
 *     "Person_dat_three ": Person_dat_three, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_erg_one ": Person_erg_one, # bq, U,
 *     "Person_erg_two ": Person_erg_two, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_dat_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":359
 *     "Person_dat_two ": Person_dat_two, # bq, U,
 *     "Person_dat_three ": Person_dat_three, # bq, U,
 *     "Person_erg_one ": Person_erg_one, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_erg_two ": Person_erg_two, # bq, U,
 *     "Person_erg_three ": Person_erg_three, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_erg_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":360
 *     "Person_dat_three ": Person_dat_three, # bq, U,
 *     "Person_erg_one ": Person_erg_one, # bq, U,
 *     "Person_erg_two ": Person_erg_two, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_erg_three ": Person_erg_three, # bq, U,
 *     "Person_psor_one ": Person_psor_one, # fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_erg_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":361
 *     "Person_erg_one ": Person_erg_one, # bq, U,
 *     "Person_erg_two ": Person_erg_two, # bq, U,
 *     "Person_erg_three ": Person_erg_three, # bq, U,             # <<<<<<<<<<<<<<
 *     "Person_psor_one ": Person_psor_one, # fi, U,
 *     "Person_psor_two ": Person_psor_two, # fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_erg_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":362
 *     "Person_erg_two ": Person_erg_two, # bq, U,
 *     "Person_erg_three ": Person_erg_three, # bq, U,
 *     "Person_psor_one ": Person_psor_one, # fi, U,             # <<<<<<<<<<<<<<
 *     "Person_psor_two ": Person_psor_two, # fi, U,
 *     "Person_psor_three ": Person_psor_three, # fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_one); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_psor_one, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":363
 *     "Person_erg_three ": Person_erg_three, # bq, U,
 *     "Person_psor_one ": Person_psor_one, # fi, U,
 *     "Person_psor_two ": Person_psor_two, # fi, U,             # <<<<<<<<<<<<<<
 *     "Person_psor_three ": Person_psor_three, # fi, U,
 *     "Polite_inf ": Polite_inf, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_two); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_psor_two, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":364
 *     "Person_psor_one ": Person_psor_one, # fi, U,
 *     "Person_psor_two ": Person_psor_two, # fi, U,
 *     "Person_psor_three ": Person_psor_three, # fi, U,             # <<<<<<<<<<<<<<
 *     "Polite_inf ": Polite_inf, # bq, U,
 *     "Polite_pol ": Polite_pol, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_three); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Person_psor_three, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":365
 *     "Person_psor_two ": Person_psor_two, # fi, U,
 *     "Person_psor_three ": Person_psor_three, # fi, U,
 *     "Polite_inf ": Polite_inf, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_pol ": Polite_pol, # bq, U,
 *     "Polite_abs_inf ": Polite_abs_inf, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":366
 *     "Person_psor_three ": Person_psor_three, # fi, U,
 *     "Polite_inf ": Polite_inf, # bq, U,
 *     "Polite_pol ": Polite_pol, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_abs_inf ": Polite_abs_inf, # bq, U,
 *     "Polite_abs_pol ": Polite_abs_pol, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_pol); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_pol, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":367
 *     "Polite_inf ": Polite_inf, # bq, U,
 *     "Polite_pol ": Polite_pol, # bq, U,
 *     "Polite_abs_inf ": Polite_abs_inf, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_abs_pol ": Polite_abs_pol, # bq, U,
 *     "Polite_erg_inf ": Polite_erg_inf, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_abs_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_abs_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":368
 *     "Polite_pol ": Polite_pol, # bq, U,
 *     "Polite_abs_inf ": Polite_abs_inf, # bq, U,
 *     "Polite_abs_pol ": Polite_abs_pol, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_erg_inf ": Polite_erg_inf, # bq, U,
 *     "Polite_erg_pol ": Polite_erg_pol, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_abs_pol); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_abs_pol, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":369
 *     "Polite_abs_inf ": Polite_abs_inf, # bq, U,
 *     "Polite_abs_pol ": Polite_abs_pol, # bq, U,
 *     "Polite_erg_inf ": Polite_erg_inf, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_erg_pol ": Polite_erg_pol, # bq, U,
 *     "Polite_dat_inf ": Polite_dat_inf, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_erg_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_erg_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":370
 *     "Polite_abs_pol ": Polite_abs_pol, # bq, U,
 *     "Polite_erg_inf ": Polite_erg_inf, # bq, U,
 *     "Polite_erg_pol ": Polite_erg_pol, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_dat_inf ": Polite_dat_inf, # bq, U,
 *     "Polite_dat_pol ": Polite_dat_pol, # bq, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_erg_pol); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_erg_pol, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":371
 *     "Polite_erg_inf ": Polite_erg_inf, # bq, U,
 *     "Polite_erg_pol ": Polite_erg_pol, # bq, U,
 *     "Polite_dat_inf ": Polite_dat_inf, # bq, U,             # <<<<<<<<<<<<<<
 *     "Polite_dat_pol ": Polite_dat_pol, # bq, U,
 *     "Prefix_yes ": Prefix_yes, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_dat_inf); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_dat_inf, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":372
 *     "Polite_erg_pol ": Polite_erg_pol, # bq, U,
 *     "Polite_dat_inf ": Polite_dat_inf, # bq, U,
 *     "Polite_dat_pol ": Polite_dat_pol, # bq, U,             # <<<<<<<<<<<<<<
 *     "Prefix_yes ": Prefix_yes, # U,
 *     "PrepCase_npr ": PrepCase_npr, # cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_dat_pol); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Polite_dat_pol, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":373
 *     "Polite_dat_inf ": Polite_dat_inf, # bq, U,
 *     "Polite_dat_pol ": Polite_dat_pol, # bq, U,
 *     "Prefix_yes ": Prefix_yes, # U,             # <<<<<<<<<<<<<<
 *     "PrepCase_npr ": PrepCase_npr, # cz,
 *     "PrepCase_pre ": PrepCase_pre, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Prefix_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Prefix_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":374
 *     "Polite_dat_pol ": Polite_dat_pol, # bq, U,
 *     "Prefix_yes ": Prefix_yes, # U,
 *     "PrepCase_npr ": PrepCase_npr, # cz,             # <<<<<<<<<<<<<<
 *     "PrepCase_pre ": PrepCase_pre, # U,
 *     "PunctSide_ini ": PunctSide_ini, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PrepCase_npr); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PrepCase_npr, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":375
 *     "Prefix_yes ": Prefix_yes, # U,
 *     "PrepCase_npr ": PrepCase_npr, # cz,
 *     "PrepCase_pre ": PrepCase_pre, # U,             # <<<<<<<<<<<<<<
 *     "PunctSide_ini ": PunctSide_ini, # U,
 *     "PunctSide_fin ": PunctSide_fin, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PrepCase_pre); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PrepCase_pre, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":376
 *     "PrepCase_npr ": PrepCase_npr, # cz,
 *     "PrepCase_pre ": PrepCase_pre, # U,
 *     "PunctSide_ini ": PunctSide_ini, # U,             # <<<<<<<<<<<<<<
 *     "PunctSide_fin ": PunctSide_fin, # U,
 *     "PunctType_peri ": PunctType_peri, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctSide_ini); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctSide_ini, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":377
 *     "PrepCase_pre ": PrepCase_pre, # U,
 *     "PunctSide_ini ": PunctSide_ini, # U,
 *     "PunctSide_fin ": PunctSide_fin, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_peri ": PunctType_peri, # U,
 *     "PunctType_qest ": PunctType_qest, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctSide_fin); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctSide_fin, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":378
 *     "PunctSide_ini ": PunctSide_ini, # U,
 *     "PunctSide_fin ": PunctSide_fin, # U,
 *     "PunctType_peri ": PunctType_peri, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_qest ": PunctType_qest, # U,
 *     "PunctType_excl ": PunctType_excl, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_peri); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_peri, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":379
 *     "PunctSide_fin ": PunctSide_fin, # U,
 *     "PunctType_peri ": PunctType_peri, # U,
 *     "PunctType_qest ": PunctType_qest, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_excl ": PunctType_excl, # U,
 *     "PunctType_quot ": PunctType_quot, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_qest); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_qest, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":380
 *     "PunctType_peri ": PunctType_peri, # U,
 *     "PunctType_qest ": PunctType_qest, # U,
 *     "PunctType_excl ": PunctType_excl, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_quot ": PunctType_quot, # U,
 *     "PunctType_brck ": PunctType_brck, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_excl); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_excl, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":381
 *     "PunctType_qest ": PunctType_qest, # U,
 *     "PunctType_excl ": PunctType_excl, # U,
 *     "PunctType_quot ": PunctType_quot, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_brck ": PunctType_brck, # U,
 *     "PunctType_comm ": PunctType_comm, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_quot); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_quot, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":382
 *     "PunctType_excl ": PunctType_excl, # U,
 *     "PunctType_quot ": PunctType_quot, # U,
 *     "PunctType_brck ": PunctType_brck, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_comm ": PunctType_comm, # U,
 *     "PunctType_colo ": PunctType_colo, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_brck); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 382; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_brck, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":383
 *     "PunctType_quot ": PunctType_quot, # U,
 *     "PunctType_brck ": PunctType_brck, # U,
 *     "PunctType_comm ": PunctType_comm, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_colo ": PunctType_colo, # U,
 *     "PunctType_semi ": PunctType_semi, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_comm); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_comm, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":384
 *     "PunctType_brck ": PunctType_brck, # U,
 *     "PunctType_comm ": PunctType_comm, # U,
 *     "PunctType_colo ": PunctType_colo, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_semi ": PunctType_semi, # U,
 *     "PunctType_dash ": PunctType_dash, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_colo); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_colo, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":385
 *     "PunctType_comm ": PunctType_comm, # U,
 *     "PunctType_colo ": PunctType_colo, # U,
 *     "PunctType_semi ": PunctType_semi, # U,             # <<<<<<<<<<<<<<
 *     "PunctType_dash ": PunctType_dash, # U,
 *     "Style_arch ": Style_arch, # cz, fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_semi); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_semi, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":386
 *     "PunctType_colo ": PunctType_colo, # U,
 *     "PunctType_semi ": PunctType_semi, # U,
 *     "PunctType_dash ": PunctType_dash, # U,             # <<<<<<<<<<<<<<
 *     "Style_arch ": Style_arch, # cz, fi, U,
 *     "Style_rare ": Style_rare, # cz, fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_dash); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_PunctType_dash, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":387
 *     "PunctType_semi ": PunctType_semi, # U,
 *     "PunctType_dash ": PunctType_dash, # U,
 *     "Style_arch ": Style_arch, # cz, fi, U,             # <<<<<<<<<<<<<<
 *     "Style_rare ": Style_rare, # cz, fi, U,
 *     "Style_poet ": Style_poet, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_arch); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_arch, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":388
 *     "PunctType_dash ": PunctType_dash, # U,
 *     "Style_arch ": Style_arch, # cz, fi, U,
 *     "Style_rare ": Style_rare, # cz, fi, U,             # <<<<<<<<<<<<<<
 *     "Style_poet ": Style_poet, # cz, U,
 *     "Style_norm ": Style_norm, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_rare); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_rare, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":389
 *     "Style_arch ": Style_arch, # cz, fi, U,
 *     "Style_rare ": Style_rare, # cz, fi, U,
 *     "Style_poet ": Style_poet, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_norm ": Style_norm, # cz, U,
 *     "Style_coll ": Style_coll, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_poet); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_poet, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":390
 *     "Style_rare ": Style_rare, # cz, fi, U,
 *     "Style_poet ": Style_poet, # cz, U,
 *     "Style_norm ": Style_norm, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_coll ": Style_coll, # cz, U,
 *     "Style_vrnc ": Style_vrnc, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_norm); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_norm, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":391
 *     "Style_poet ": Style_poet, # cz, U,
 *     "Style_norm ": Style_norm, # cz, U,
 *     "Style_coll ": Style_coll, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_vrnc ": Style_vrnc, # cz, U,
 *     "Style_sing ": Style_sing, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_coll); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_coll, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":392
 *     "Style_norm ": Style_norm, # cz, U,
 *     "Style_coll ": Style_coll, # cz, U,
 *     "Style_vrnc ": Style_vrnc, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_sing ": Style_sing, # cz, U,
 *     "Style_expr ": Style_expr, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_vrnc); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_vrnc, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":393
 *     "Style_coll ": Style_coll, # cz, U,
 *     "Style_vrnc ": Style_vrnc, # cz, U,
 *     "Style_sing ": Style_sing, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_expr ": Style_expr, # cz, U,
 *     "Style_derg ": Style_derg, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_sing); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_sing, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":394
 *     "Style_vrnc ": Style_vrnc, # cz, U,
 *     "Style_sing ": Style_sing, # cz, U,
 *     "Style_expr ": Style_expr, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_derg ": Style_derg, # cz, U,
 *     "Style_vulg ": Style_vulg, # cz, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_expr); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_expr, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":395
 *     "Style_sing ": Style_sing, # cz, U,
 *     "Style_expr ": Style_expr, # cz, U,
 *     "Style_derg ": Style_derg, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_vulg ": Style_vulg, # cz, U,
 *     "Style_yes ": Style_yes, # fi, U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_derg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_derg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":396
 *     "Style_expr ": Style_expr, # cz, U,
 *     "Style_derg ": Style_derg, # cz, U,
 *     "Style_vulg ": Style_vulg, # cz, U,             # <<<<<<<<<<<<<<
 *     "Style_yes ": Style_yes, # fi, U,
 *     "StyleVariant_styleShort ": StyleVariant_styleShort, # cz,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_vulg); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_vulg, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":397
 *     "Style_derg ": Style_derg, # cz, U,
 *     "Style_vulg ": Style_vulg, # cz, U,
 *     "Style_yes ": Style_yes, # fi, U,             # <<<<<<<<<<<<<<
 *     "StyleVariant_styleShort ": StyleVariant_styleShort, # cz,
 *     "StyleVariant_styleBound ": StyleVariant_styleBound, # cz, sl,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_yes); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_Style_yes, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":398
 *     "Style_vulg ": Style_vulg, # cz, U,
 *     "Style_yes ": Style_yes, # fi, U,
 *     "StyleVariant_styleShort ": StyleVariant_styleShort, # cz,             # <<<<<<<<<<<<<<
 *     "StyleVariant_styleBound ": StyleVariant_styleBound, # cz, sl,
 *     "VerbType_aux ": VerbType_aux, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_StyleVariant_styleShort); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_StyleVariant_styleShort, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":399
 *     "Style_yes ": Style_yes, # fi, U,
 *     "StyleVariant_styleShort ": StyleVariant_styleShort, # cz,
 *     "StyleVariant_styleBound ": StyleVariant_styleBound, # cz, sl,             # <<<<<<<<<<<<<<
 *     "VerbType_aux ": VerbType_aux, # U,
 *     "VerbType_cop ": VerbType_cop, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_StyleVariant_styleBound); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_StyleVariant_styleBound, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":400
 *     "StyleVariant_styleShort ": StyleVariant_styleShort, # cz,
 *     "StyleVariant_styleBound ": StyleVariant_styleBound, # cz, sl,
 *     "VerbType_aux ": VerbType_aux, # U,             # <<<<<<<<<<<<<<
 *     "VerbType_cop ": VerbType_cop, # U,
 *     "VerbType_mod ": VerbType_mod, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_aux); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_VerbType_aux, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":401
 *     "StyleVariant_styleBound ": StyleVariant_styleBound, # cz, sl,
 *     "VerbType_aux ": VerbType_aux, # U,
 *     "VerbType_cop ": VerbType_cop, # U,             # <<<<<<<<<<<<<<
 *     "VerbType_mod ": VerbType_mod, # U,
 *     "VerbType_light ": VerbType_light, # U,
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_cop); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_VerbType_cop, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":402
 *     "VerbType_aux ": VerbType_aux, # U,
 *     "VerbType_cop ": VerbType_cop, # U,
 *     "VerbType_mod ": VerbType_mod, # U,             # <<<<<<<<<<<<<<
 *     "VerbType_light ": VerbType_light, # U,
 * }
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_mod); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_VerbType_mod, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "spacy\morphology.pyx":403
 *     "VerbType_cop ": VerbType_cop, # U,
 *     "VerbType_mod ": VerbType_mod, # U,
 *     "VerbType_light ": VerbType_light, # U,             # <<<<<<<<<<<<<<
 * }
 * 
 */
  __pyx_t_5 = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_light); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_4, __pyx_kp_u_VerbType_light, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IDS, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":407
 * 
 * 
 * NAMES = [key for key, value in sorted(IDS.items(), key=lambda item: item[1])]             # <<<<<<<<<<<<<<
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_IDS); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_items); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_CyFunction_NewEx(&__pyx_mdef_5spacy_10morphology_2lambda, 0, __pyx_n_s_lambda, NULL, __pyx_n_s_spacy_morphology, __pyx_d, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_key, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_7, __pyx_t_5); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
    __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_8); __Pyx_INCREF(__pyx_t_6); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        #endif
      }
    } else {
      __pyx_t_6 = __pyx_t_9(__pyx_t_5);
      if (unlikely(!__pyx_t_6)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_6);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_6))) || (PyList_CheckExact(__pyx_t_6))) {
      PyObject* sequence = __pyx_t_6;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_7 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_10);
      #else
      __pyx_t_7 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_10 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      #endif
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_12 = Py_TYPE(__pyx_t_11)->tp_iternext;
      index = 0; __pyx_t_7 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_7)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      index = 1; __pyx_t_10 = __pyx_t_12(__pyx_t_11); if (unlikely(!__pyx_t_10)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_12(__pyx_t_11), 2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_12 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L5_unpacking_done;
      __pyx_L4_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L5_unpacking_done:;
    }
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_key, __pyx_t_7) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_value, __pyx_t_10) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_key); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_6))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NAMES, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "spacy\morphology.pyx":1
 * # cython: infer_types             # <<<<<<<<<<<<<<
 * # coding: utf8
 * from __future__ import unicode_literals
 */
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "lexeme.pxd":86
 * 
 *     @staticmethod
 *     cdef inline bint c_set_flag(LexemeC* lex, attr_id_t flag_id, bint value) nogil:             # <<<<<<<<<<<<<<
 *         cdef flags_t one = 1
 *         if value:
 */

  /*--- Wrapped vars code ---*/
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NIL);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NIL", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Animacy_anim);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Animacy_anim", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Animacy_inam);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Animacy_inam", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_freq);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Aspect_freq", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_imp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Aspect_imp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_mod);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Aspect_mod", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 50; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Aspect_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Aspect_perf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Aspect_perf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abe);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_abe", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abl);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_abl", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_abs);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_abs", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 55; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_acc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_acc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ade);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ade", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_all);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_all", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_cau);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_cau", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_dat);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_dat", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_del);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_del", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_dis);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_dis", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ela);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ela", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ess);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ess", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_gen);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_gen", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ill);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ill", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ine);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ine", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ins);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ins", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_loc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_loc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_lat);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_lat", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_nom);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_nom", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_par);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_par", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_sub);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_sub", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_sup);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_sup", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_tem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_tem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_ter);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_ter", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_tra);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_tra", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Case_voc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Case_voc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Definite_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_def);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Definite_def", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_red);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Definite_red", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_cons);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Definite_cons", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Definite_ind);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Definite_ind", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_cmp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_cmp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_comp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_comp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_pos);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_pos", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_sup);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_sup", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_abs);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_abs", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Degree_dim);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Degree_dim", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_fem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_fem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_masc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_masc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_neut);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_neut", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_cnd);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_cnd", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_imp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_imp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_ind);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_ind", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_n);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_n", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_pot);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_pot", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_sub);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_sub", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Mood_opt);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Mood_opt", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_neg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Negative_neg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_pos);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Negative_pos", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Negative_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Negative_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polarity_neg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polarity_neg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polarity_pos);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polarity_pos", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dual);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_dual", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_ptan);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_ptan", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_count);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_count", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_card);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_card", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_dist);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_dist", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_frac);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_frac", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_gen);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_gen", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_mult);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_mult", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_ord);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_ord", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumType_sets);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumType_sets", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Poss_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Poss_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_advPart);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_advPart", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_art);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_art", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_default);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_default", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_dem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_dem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_ind);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_ind", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_int);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_int", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_neg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_neg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_prs);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_prs", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_rcp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_rcp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_rel);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_rel", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_tot);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_tot", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_clit);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_clit", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PronType_exc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PronType_exc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Reflex_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Reflex_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_fut);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Tense_fut", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_imp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Tense_imp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_past);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Tense_past", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Tense_pres);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Tense_pres", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_fin);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_fin", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_ger);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_ger", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_none);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_none", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_part);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_part", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partFut);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_partFut", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partPast);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_partPast", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_partPres);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_partPres", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_sup);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_sup", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_trans);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_trans", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_conv);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_conv", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbForm_gdv);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbForm_gdv", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_act);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Voice_act", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_cau);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Voice_cau", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_pass);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Voice_pass", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_mid);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Voice_mid", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Voice_int);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Voice_int", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Abbr_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Abbr_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_prep);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdpType_prep", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_post);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdpType_post", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_voc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdpType_voc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_comprep);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdpType_comprep", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdpType_circ);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdpType_circ", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_man);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_man", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_loc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_loc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_tim);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_tim", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_deg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_deg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_cau);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_cau", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_mod);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_mod", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_sta);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_sta", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_ex);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_ex", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_AdvType_adadj);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "AdvType_adadj", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_ConjType_oper);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "ConjType_oper", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_ConjType_comp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "ConjType_comp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Connegative_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Connegative_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_minen);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_minen", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_sti);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_sti", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_inen);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_inen", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_lainen);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_lainen", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ja);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_ja", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ton);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_ton", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_vs);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_vs", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ttain);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_ttain", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Derivation_ttaa);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Derivation_ttaa", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Echo_rdp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Echo_rdp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Echo_ech);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Echo_ech", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_foreign);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Foreign_foreign", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_fscript);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Foreign_fscript", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_tscript);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Foreign_tscript", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Foreign_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Foreign_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_dat_masc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_dat_masc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_dat_fem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_dat_fem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_erg_masc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_erg_masc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_erg_fem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_erg_fem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_masc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_psor_masc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_fem);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_psor_fem", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Gender_psor_neut);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Gender_psor_neut", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Hyph_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Hyph_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "InfForm_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "InfForm_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_InfForm_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "InfForm_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_geo);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_geo", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_prs);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_prs", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_giv);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_giv", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_sur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_sur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_nat);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_nat", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_pro);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_pro", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NameType_oth);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NameType_oth", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_com);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NounType_com", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_prop);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NounType_prop", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NounType_class);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NounType_class", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_abs_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_abs_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_abs_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_abs_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dat_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_dat_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_dat_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_dat_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_erg_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_erg_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_erg_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_erg_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psee_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_psee_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psee_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_psee_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psor_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_psor_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Number_psor_plur);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Number_psor_plur", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_digit);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumForm_digit", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_roman);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumForm_roman", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumForm_word);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumForm_word", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumValue_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumValue_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_NumValue_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "NumValue_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_pres);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartForm_pres", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_past);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartForm_past", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_agt);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartForm_agt", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartForm_neg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartForm_neg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_mod);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartType_mod", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_emp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartType_emp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_res);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartType_res", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartType_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PartType_vbp);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PartType_vbp", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_abs_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_abs_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_abs_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_abs_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_dat_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_dat_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_dat_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_dat_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_erg_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_erg_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_erg_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_erg_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_one);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_psor_one", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_two);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_psor_two", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Person_psor_three);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Person_psor_three", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_pol);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_pol", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_abs_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_abs_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_abs_pol);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_abs_pol", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_erg_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_erg_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_erg_pol);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_erg_pol", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_dat_inf);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_dat_inf", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Polite_dat_pol);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Polite_dat_pol", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Prefix_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Prefix_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PrepCase_npr);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PrepCase_npr", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PrepCase_pre);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PrepCase_pre", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 266; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctSide_ini);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctSide_ini", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctSide_fin);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctSide_fin", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_peri);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_peri", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_qest);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_qest", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_excl);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_excl", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_quot);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_quot", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_brck);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_brck", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_comm);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_comm", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_colo);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_colo", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_semi);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_semi", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_PunctType_dash);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "PunctType_dash", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_arch);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_arch", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_rare);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_rare", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_poet);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_poet", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 280; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_norm);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_norm", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_coll);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_coll", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_vrnc);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_vrnc", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_sing);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_sing", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_expr);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_expr", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_derg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_derg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_vulg);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_vulg", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_Style_yes);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "Style_yes", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_StyleVariant_styleShort);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "StyleVariant_styleShort", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_StyleVariant_styleBound);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "StyleVariant_styleBound", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_aux);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbType_aux", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_cop);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbType_cop", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_mod);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbType_mod", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(__pyx_e_5spacy_10morphology_VerbType_light);
    if (unlikely(!wrapped)) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyObject_SetAttrString(__pyx_m, "VerbType_light", wrapped) < 0) {__pyx_filename = __pyx_f[8]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init spacy.morphology", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init spacy.morphology");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return -1;
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(PyObject_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_O | METH_NOARGS);
    }
#endif
    return 0;
}

static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

static CYTHON_INLINE PyObject* __Pyx_PyDict_Items(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_items, d);
    else
        return PyDict_Items(d);
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_COMPILING_IN_CPYTHON
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CyFunctionObject, func.m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyMem_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
#if CYTHON_COMPILING_IN_PYPY
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    PyObject *self = f->m_self;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0 = PySequence_ITEM(arg, 0);
                if (unlikely(!arg0)) return NULL;
                result = (*meth)(self, arg0);
                Py_DECREF(arg0);
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
#else
static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
	return PyCFunction_Call(func, arg, kw);
}
#endif
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_Call,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
#if !CYTHON_COMPILING_IN_PYPY
    __pyx_CyFunctionType_type.tp_call = PyCFunction_Call;
#endif
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (__pyx_CyFunctionType == NULL) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyMem_Malloc(size);
    if (!m->defaults)
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

static CYTHON_INLINE enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t __Pyx_PyInt_As_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(PyObject *x) {
    const enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t neg_one = (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1, const_zero = (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) >= 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) >= 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) >= 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)-1)*(((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) ((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)-1)*(((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) ((((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) (((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)-1)*(((((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) - 1 > 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) ((((((((((enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, long, PyLong_AsLong(x))
            } else if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1;
        }
    } else {
        enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1;
        val = __Pyx_PyInt_As_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t");
    return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t");
    return (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1;
}

static CYTHON_INLINE int32_t __Pyx_PyInt_As_int32_t(PyObject *x) {
    const int32_t neg_one = (int32_t) -1, const_zero = (int32_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int32_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int32_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int32_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int32_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int32_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(int32_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) >= 2 * PyLong_SHIFT) {
                            return (int32_t) (((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int32_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) >= 3 * PyLong_SHIFT) {
                            return (int32_t) (((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int32_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) >= 4 * PyLong_SHIFT) {
                            return (int32_t) (((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int32_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int32_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int32_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int32_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int32_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int32_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int32_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int32_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int32_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int32_t) (((int32_t)-1)*(((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int32_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int32_t) ((((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int32_t) (((int32_t)-1)*(((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int32_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int32_t) ((((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int32_t) (((int32_t)-1)*(((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int32_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int32_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int32_t) ((((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int32_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int32_t, long, PyLong_AsLong(x))
            } else if (sizeof(int32_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int32_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int32_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int32_t) -1;
        }
    } else {
        int32_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int32_t) -1;
        val = __Pyx_PyInt_As_int32_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int32_t");
    return (int32_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int32_t");
    return (int32_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_10morphology_univ_morph_t(enum __pyx_t_5spacy_10morphology_univ_morph_t value) {
    const enum __pyx_t_5spacy_10morphology_univ_morph_t neg_one = (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1, const_zero = (enum __pyx_t_5spacy_10morphology_univ_morph_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_5attrs_attr_id_t(enum __pyx_t_5spacy_5attrs_attr_id_t value) {
    const enum __pyx_t_5spacy_5attrs_attr_id_t neg_one = (enum __pyx_t_5spacy_5attrs_attr_id_t) -1, const_zero = (enum __pyx_t_5spacy_5attrs_attr_id_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_5spacy_5attrs_attr_id_t),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value) {
    const int32_t neg_one = (int32_t) -1, const_zero = (int32_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int32_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int32_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int32_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int32_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int32_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int32_t),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum____pyx_t_5spacy_15parts_of_speech_univ_pos_t(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t value) {
    const enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t neg_one = (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) -1, const_zero = (enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum __pyx_t_5spacy_15parts_of_speech_univ_pos_t),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *x) {
    const uint64_t neg_one = (uint64_t) -1, const_zero = (uint64_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(uint64_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(uint64_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint64_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint64_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(uint64_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(uint64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 2 * PyLong_SHIFT) {
                            return (uint64_t) (((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 3 * PyLong_SHIFT) {
                            return (uint64_t) (((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) >= 4 * PyLong_SHIFT) {
                            return (uint64_t) (((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (uint64_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(uint64_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(uint64_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (uint64_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(uint64_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(uint64_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(uint64_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(uint64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (uint64_t) ((((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(uint64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (uint64_t) ((((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint64_t) (((uint64_t)-1)*(((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(uint64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (uint64_t) ((((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(uint64_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, long, PyLong_AsLong(x))
            } else if (sizeof(uint64_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            uint64_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (uint64_t) -1;
        }
    } else {
        uint64_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (uint64_t) -1;
        val = __Pyx_PyInt_As_uint64_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint64_t");
    return (uint64_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint64_t");
    return (uint64_t) -1;
}

static CYTHON_INLINE enum __pyx_t_5spacy_10morphology_univ_morph_t __Pyx_PyInt_As_enum____pyx_t_5spacy_10morphology_univ_morph_t(PyObject *x) {
    const enum __pyx_t_5spacy_10morphology_univ_morph_t neg_one = (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1, const_zero = (enum __pyx_t_5spacy_10morphology_univ_morph_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum __pyx_t_5spacy_10morphology_univ_morph_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) >= 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) >= 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) >= 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum __pyx_t_5spacy_10morphology_univ_morph_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((enum __pyx_t_5spacy_10morphology_univ_morph_t)-1)*(((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 2 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) ((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((enum __pyx_t_5spacy_10morphology_univ_morph_t)-1)*(((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 3 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) ((((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) (((enum __pyx_t_5spacy_10morphology_univ_morph_t)-1)*(((((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum __pyx_t_5spacy_10morphology_univ_morph_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) - 1 > 4 * PyLong_SHIFT) {
                            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) ((((((((((enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[3]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[2]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[1]) << PyLong_SHIFT) | (enum __pyx_t_5spacy_10morphology_univ_morph_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_10morphology_univ_morph_t, long, PyLong_AsLong(x))
            } else if (sizeof(enum __pyx_t_5spacy_10morphology_univ_morph_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum __pyx_t_5spacy_10morphology_univ_morph_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            enum __pyx_t_5spacy_10morphology_univ_morph_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1;
        }
    } else {
        enum __pyx_t_5spacy_10morphology_univ_morph_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1;
        val = __Pyx_PyInt_As_enum____pyx_t_5spacy_10morphology_univ_morph_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to enum __pyx_t_5spacy_10morphology_univ_morph_t");
    return (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to enum __pyx_t_5spacy_10morphology_univ_morph_t");
    return (enum __pyx_t_5spacy_10morphology_univ_morph_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

#ifndef __PYX_HAVE_RT_ImportVoidPtr
#define __PYX_HAVE_RT_ImportVoidPtr
static int __Pyx_ImportVoidPtr(PyObject *module, const char *name, void **p, const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, name);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C variable %.200s",
                PyModule_GetName(module), name);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C variable %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), name, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    *p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C variable %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), name, sig, desc);
        goto bad;
    }
    *p = PyCObject_AsVoidPtr(cobj);}
#endif
    if (!(*p))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
